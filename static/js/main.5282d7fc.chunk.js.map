{"version":3,"sources":["img/LDR_RGB1_0.png","img/react_logo.svg","img/image.PNG","img/proto.png","serviceWorker.ts","FluidShaders.ts","FluidRender.ts","useInsideViewport.ts","FluidGL.tsx","MainPage.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","compileShader","gl","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getShaders","baseVertexShader","VERTEX_SHADER","clearShader","FRAGMENT_SHADER","colorShader","backgroundShader","displayShader","displayBloomShader","displayShadingShader","displayBloomShadingShader","bloomPrefilterShader","bloomBlurShader","bloomFinalShader","splatShader","advectionManualFilteringShader","advectionShader","divergenceShader","curlShader","vorticityShader","pressureShader","gradientSubtractShader","GLProgram","vertexShader","fragmentShader","Object","classCallCheck","this","uniforms","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformCount","ACTIVE_UNIFORMS","i","uniformName","getActiveUniform","name","getUniformLocation","useProgram","FluidRender","canvas","config","text_url","_this","ext","ditheringTexture","clearProgram","colorProgram","backgroundProgram","displayProgram","displayBloomProgram","displayShadingProgram","displayBloomShadingProgram","bloomPrefilterProgram","bloomBlurProgram","bloomFinalProgram","splatProgram","advectionProgram","divergenceProgram","curlProgram","vorticityProgram","pressureProgram","gradientSubtractProgram","bloomFramebuffers","simWidth","simHeight","dyeWidth","dyeHeight","density","velocity","divergence","curl","pressure","bloom","blit","_FluidRender$getWebGL","getWebGLContext","test","navigator","userAgent","SHADING","supportLinearFiltering","BLOOM","_getShaders","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","vertexAttribPointer","FLOAT","enableVertexAttribArray","destination","bindFramebuffer","FRAMEBUFFER","drawElements","TRIANGLES","UNSIGNED_SHORT","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","texImage2D","RGB","UNSIGNED_BYTE","Uint8Array","width","height","attach","id","activeTexture","TEXTURE0","bind","image","Image","onload","src","initFrameBuffers","assign","DEFAULT_CONF","simRes","getResolution","SIM_RESOLUTION","dyeRes","DYE_RESOLUTION","texType","halfFloatTexType","rgba","formatRGBA","rg","formatRG","r","formatR","filtering","NEAREST","createDoubleFBO","internalFormat","format","resizeDoubleFBO","createFBO","initBloomFramebuffers","res","BLOOM_RESOLUTION","BLOOM_ITERATIONS","fbo","push","resolution","aspectRatio","drawingBufferWidth","drawingBufferHeight","max","Math","round","min","w","h","param","_this2","CLAMP_TO_EDGE","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","clear","COLOR_BUFFER_BIT","fbo1","fbo2","read","value","write","swap","temp","target","newFBO","uniform1i","uTexture","uniform1f","resizeFBO","dt","disable","BLEND","uniform2f","texelSize","uVelocity","uCurl","CURL","PRESSURE_DISSIPATION","uDivergence","PRESSURE_ITERATIONS","uPressure","dyeTexelSize","velocityId","uSource","dissipation","VELOCITY_DISSIPATION","DENSITY_DISSIPATION","applyBloom","TRANSPARENT","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","bc","BACK_COLOR","uniform4f","color","g","b","uBloom","uDithering","scale","getTextureScale","ditherScale","x","y","length","last","knee","BLOOM_THRESHOLD","BLOOM_SOFT_KNEE","curve0","curve1","curve2","uniform3f","curve","threshold","dest","baseTex","intensity","BLOOM_INTENSITY","clientWidth","clientHeight","dx","dy","radius","uTarget","point","SPLAT_RADIUS","amount","generateColor","random","splat","console","log","checkResizeCanvas","step","render","c","s","v","f","q","t","floor","HSVtoRGB","halfFloat","params","alpha","depth","stencil","antialias","preserveDrawingBuffer","getContext","isWebGL2","getExtension","clearColor","HALF_FLOAT","HALF_FLOAT_OES","getSupportedFormat","RGBA16F","RGBA","RG16F","RG","R16F","RED","concat","supportRenderTextureFormat","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","COLORFUL","PAUSED","getIsInside","elem","rect","getBoundingClientRect","top","innerHeight","bottom","useInsideViewport","element","insidecallback","_React$useState","React","_React$useState2","slicedToArray","isInside","setIsInside","insideCallbackRef","useEventListener","current","undefined","DitherImage","require","FluidGL","_ref","_ref$className","className","_ref$canvaswidth","canvaswidth","_ref$canvasheight","canvasheight","canvas_ref","fluid_ref","animation_ref","number","getDefaultConfig","animationCallback","update","requestAnimationFrame","cancelAnimationFrame","react","ref","reactLogo","stockPhoto","protoMask","main_theme","light_background","dark_background","logo_background","logo_text","font","size","xlarge","xlarge_num","large","large_num","medium","small","header_footer","content","logo","url","main","cloud","embedded","web","social","stock","screen","content_width","side_pad","top_bot_pad","GlobalStyle","createGlobalStyle","_templateObject","ContentContainer","styledTS","styled","div","_templateObject2","props","theme","PerfectCenter","_templateObject3","MainText","_templateObject4","ResumeText","_templateObject5","BodyElem","_templateObject6","css","_templateObject7","spany","_templateObject8","_templateObject9","spanx","_templateObject10","LogoElement","_templateObject11","imgname","TextElement","_templateObject12","text_align","align","HeaderFooterGrid","_templateObject13","BodyGrid","_templateObject14","col_gap","col_count","_templateObject15","col_min","col_max","MaskImage","_templateObject16","MainPage","innerWidth","dimensions","setDimensions","styled_components_browser_esm","src_FluidGL","style","backgroundImage","backgroundPosition","backgroundSize","toString","backgroundColor","ReactDOM","react_default","a","createElement","src_MainPage","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5282d7fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LDR_RGB1_0.5c13b865.png\";","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/image.f3f731a5.PNG\";","module.exports = __webpack_public_path__ + \"static/media/proto.632a3a6b.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nfunction compileShader (gl: WebGL2RenderingContext, type: number, source: string): WebGLShader {\r\n    const shader = gl.createShader(type) as WebGLShader;\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\r\n        throw gl.getShaderInfoLog(shader);\r\n\r\n    return shader;\r\n}\r\n\r\nfunction getShaders(gl: WebGL2RenderingContext) {\r\n    /* compile a buttload of shaders */\r\n    const baseVertexShader = compileShader(gl, gl.VERTEX_SHADER, `\r\n        precision highp float;\r\n        attribute vec2 aPosition;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform vec2 texelSize;\r\n        void main () {\r\n            vUv = aPosition * 0.5 + 0.5;\r\n            vL = vUv - vec2(texelSize.x, 0.0);\r\n            vR = vUv + vec2(texelSize.x, 0.0);\r\n            vT = vUv + vec2(0.0, texelSize.y);\r\n            vB = vUv - vec2(0.0, texelSize.y);\r\n            gl_Position = vec4(aPosition, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const clearShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        uniform float value;\r\n        void main () {\r\n            gl_FragColor = value * texture2D(uTexture, vUv);\r\n        }\r\n    `);\r\n\r\n    const colorShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        uniform vec4 color;\r\n        void main () {\r\n            gl_FragColor = color;\r\n        }\r\n    `);\r\n\r\n    const backgroundShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        uniform float aspectRatio;\r\n        #define SCALE 25.0\r\n        void main () {\r\n            vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\r\n            float v = mod(uv.x + uv.y, 2.0);\r\n            v = v * 0.1 + 0.8;\r\n            gl_FragColor = vec4(vec3(v), 1.0);\r\n        }\r\n    `);\r\n\r\n    const displayShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        void main () {\r\n            vec3 C = texture2D(uTexture, vUv).rgb;\r\n            float a = max(C.r, max(C.g, C.b));\r\n            gl_FragColor = vec4(C, a);\r\n        }\r\n    `);\r\n\r\n    const displayBloomShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        uniform sampler2D uBloom;\r\n        uniform sampler2D uDithering;\r\n        uniform vec2 ditherScale;\r\n        void main () {\r\n            vec3 C = texture2D(uTexture, vUv).rgb;\r\n            vec3 bloom = texture2D(uBloom, vUv).rgb;\r\n            vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\r\n            noise = noise * 2.0 - 1.0;\r\n            bloom += noise / 800.0;\r\n            bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\r\n            C += bloom;\r\n            float a = max(C.r, max(C.g, C.b));\r\n            gl_FragColor = vec4(C, a);\r\n        }\r\n    `);\r\n\r\n    const displayShadingShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uTexture;\r\n        uniform vec2 texelSize;\r\n        void main () {\r\n            vec3 L = texture2D(uTexture, vL).rgb;\r\n            vec3 R = texture2D(uTexture, vR).rgb;\r\n            vec3 T = texture2D(uTexture, vT).rgb;\r\n            vec3 B = texture2D(uTexture, vB).rgb;\r\n            vec3 C = texture2D(uTexture, vUv).rgb;\r\n            float dx = length(R) - length(L);\r\n            float dy = length(T) - length(B);\r\n            vec3 n = normalize(vec3(dx, dy, length(texelSize)));\r\n            vec3 l = vec3(0.0, 0.0, 1.0);\r\n            float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\r\n            C.rgb *= diffuse;\r\n            float a = max(C.r, max(C.g, C.b));\r\n            gl_FragColor = vec4(C, a);\r\n        }\r\n    `);\r\n\r\n    const displayBloomShadingShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uTexture;\r\n        uniform sampler2D uBloom;\r\n        uniform sampler2D uDithering;\r\n        uniform vec2 ditherScale;\r\n        uniform vec2 texelSize;\r\n        void main () {\r\n            vec3 L = texture2D(uTexture, vL).rgb;\r\n            vec3 R = texture2D(uTexture, vR).rgb;\r\n            vec3 T = texture2D(uTexture, vT).rgb;\r\n            vec3 B = texture2D(uTexture, vB).rgb;\r\n            vec3 C = texture2D(uTexture, vUv).rgb;\r\n            float dx = length(R) - length(L);\r\n            float dy = length(T) - length(B);\r\n            vec3 n = normalize(vec3(dx, dy, length(texelSize)));\r\n            vec3 l = vec3(0.0, 0.0, 1.0);\r\n            float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\r\n            C *= diffuse;\r\n            vec3 bloom = texture2D(uBloom, vUv).rgb;\r\n            vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\r\n            noise = noise * 2.0 - 1.0;\r\n            bloom += noise / 800.0;\r\n            bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\r\n            C += bloom;\r\n            float a = max(C.r, max(C.g, C.b));\r\n            gl_FragColor = vec4(C, a);\r\n        }\r\n    `);\r\n\r\n    const bloomPrefilterShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        uniform vec3 curve;\r\n        uniform float threshold;\r\n        void main () {\r\n            vec3 c = texture2D(uTexture, vUv).rgb;\r\n            float br = max(c.r, max(c.g, c.b));\r\n            float rq = clamp(br - curve.x, 0.0, curve.y);\r\n            rq = curve.z * rq * rq;\r\n            c *= max(rq, br - threshold) / max(br, 0.0001);\r\n            gl_FragColor = vec4(c, 0.0);\r\n        }\r\n    `);\r\n\r\n    const bloomBlurShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uTexture;\r\n        void main () {\r\n            vec4 sum = vec4(0.0);\r\n            sum += texture2D(uTexture, vL);\r\n            sum += texture2D(uTexture, vR);\r\n            sum += texture2D(uTexture, vT);\r\n            sum += texture2D(uTexture, vB);\r\n            sum *= 0.25;\r\n            gl_FragColor = sum;\r\n        }\r\n    `);\r\n\r\n    const bloomFinalShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uTexture;\r\n        uniform float intensity;\r\n        void main () {\r\n            vec4 sum = vec4(0.0);\r\n            sum += texture2D(uTexture, vL);\r\n            sum += texture2D(uTexture, vR);\r\n            sum += texture2D(uTexture, vT);\r\n            sum += texture2D(uTexture, vB);\r\n            sum *= 0.25;\r\n            gl_FragColor = sum * intensity;\r\n        }\r\n    `);\r\n\r\n    const splatShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTarget;\r\n        uniform float aspectRatio;\r\n        uniform vec3 color;\r\n        uniform vec2 point;\r\n        uniform float radius;\r\n        void main () {\r\n            vec2 p = vUv - point.xy;\r\n            p.x *= aspectRatio;\r\n            vec3 splat = exp(-dot(p, p) / radius) * color;\r\n            vec3 base = texture2D(uTarget, vUv).xyz;\r\n            gl_FragColor = vec4(base + splat, 1.0);\r\n        }\r\n    `);\r\n\r\n    const advectionManualFilteringShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uVelocity;\r\n        uniform sampler2D uSource;\r\n        uniform vec2 texelSize;\r\n        uniform vec2 dyeTexelSize;\r\n        uniform float dt;\r\n        uniform float dissipation;\r\n        vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\r\n            vec2 st = uv / tsize - 0.5;\r\n            vec2 iuv = floor(st);\r\n            vec2 fuv = fract(st);\r\n            vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\r\n            vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\r\n            vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\r\n            vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\r\n            return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\r\n        }\r\n        void main () {\r\n            vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\r\n            gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\r\n            gl_FragColor.a = 1.0;\r\n        }\r\n    `);\r\n\r\n    const advectionShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uVelocity;\r\n        uniform sampler2D uSource;\r\n        uniform vec2 texelSize;\r\n        uniform float dt;\r\n        uniform float dissipation;\r\n        void main () {\r\n            vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\r\n            gl_FragColor = dissipation * texture2D(uSource, coord);\r\n            gl_FragColor.a = 1.0;\r\n        }\r\n    `);\r\n\r\n    const divergenceShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uVelocity;\r\n        void main () {\r\n            float L = texture2D(uVelocity, vL).x;\r\n            float R = texture2D(uVelocity, vR).x;\r\n            float T = texture2D(uVelocity, vT).y;\r\n            float B = texture2D(uVelocity, vB).y;\r\n            vec2 C = texture2D(uVelocity, vUv).xy;\r\n            if (vL.x < 0.0) { L = -C.x; }\r\n            if (vR.x > 1.0) { R = -C.x; }\r\n            if (vT.y > 1.0) { T = -C.y; }\r\n            if (vB.y < 0.0) { B = -C.y; }\r\n            float div = 0.5 * (R - L + T - B);\r\n            gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const curlShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uVelocity;\r\n        void main () {\r\n            float L = texture2D(uVelocity, vL).y;\r\n            float R = texture2D(uVelocity, vR).y;\r\n            float T = texture2D(uVelocity, vT).x;\r\n            float B = texture2D(uVelocity, vB).x;\r\n            float vorticity = R - L - T + B;\r\n            gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const vorticityShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uVelocity;\r\n        uniform sampler2D uCurl;\r\n        uniform float curl;\r\n        uniform float dt;\r\n        void main () {\r\n            float L = texture2D(uCurl, vL).x;\r\n            float R = texture2D(uCurl, vR).x;\r\n            float T = texture2D(uCurl, vT).x;\r\n            float B = texture2D(uCurl, vB).x;\r\n            float C = texture2D(uCurl, vUv).x;\r\n            vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\r\n            force /= length(force) + 0.0001;\r\n            force *= curl * C;\r\n            force.y *= -1.0;\r\n            vec2 vel = texture2D(uVelocity, vUv).xy;\r\n            gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const pressureShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uPressure;\r\n        uniform sampler2D uDivergence;\r\n        vec2 boundary (vec2 uv) {\r\n            return uv;\r\n            // uncomment if you use wrap or repeat texture mode\r\n            // uv = min(max(uv, 0.0), 1.0);\r\n            // return uv;\r\n        }\r\n        void main () {\r\n            float L = texture2D(uPressure, boundary(vL)).x;\r\n            float R = texture2D(uPressure, boundary(vR)).x;\r\n            float T = texture2D(uPressure, boundary(vT)).x;\r\n            float B = texture2D(uPressure, boundary(vB)).x;\r\n            float C = texture2D(uPressure, vUv).x;\r\n            float divergence = texture2D(uDivergence, vUv).x;\r\n            float pressure = (L + R + B + T - divergence) * 0.25;\r\n            gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const gradientSubtractShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uPressure;\r\n        uniform sampler2D uVelocity;\r\n        vec2 boundary (vec2 uv) {\r\n            return uv;\r\n            // uv = min(max(uv, 0.0), 1.0);\r\n            // return uv;\r\n        }\r\n        void main () {\r\n            float L = texture2D(uPressure, boundary(vL)).x;\r\n            float R = texture2D(uPressure, boundary(vR)).x;\r\n            float T = texture2D(uPressure, boundary(vT)).x;\r\n            float B = texture2D(uPressure, boundary(vB)).x;\r\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\r\n            velocity.xy -= vec2(R - L, T - B);\r\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    return {\r\n        baseVertexShader,\r\n        clearShader,\r\n        colorShader,\r\n        backgroundShader,\r\n        displayShader,\r\n        displayBloomShader,\r\n        displayShadingShader,\r\n        displayBloomShadingShader,\r\n        bloomPrefilterShader,\r\n        bloomBlurShader,\r\n        bloomFinalShader,\r\n        splatShader,\r\n        advectionShader,\r\n        advectionManualFilteringShader,\r\n        divergenceShader,\r\n        curlShader,\r\n        vorticityShader,\r\n        pressureShader,\r\n        gradientSubtractShader\r\n    };\r\n}\r\n\r\nexport default getShaders;","import getShaders from \"./FluidShaders\";\r\n\r\n/*eslint no-unused-expressions: \"off\"*/\r\n\r\n/**\r\n * Port of stable fluid simulation using WebGL\r\n * From this project: https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\r\n */\r\n\r\ninterface IGLExtentsions {\r\n    formatRGBA;\r\n    formatRG;\r\n    formatR;\r\n    halfFloatTexType;\r\n    supportLinearFiltering;\r\n}\r\n\r\nfunction HSVtoRGB (h, s, v) {\r\n    let r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: r = v, g = t, b = p; break;\r\n        case 1: r = q, g = v, b = p; break;\r\n        case 2: r = p, g = v, b = t; break;\r\n        case 3: r = p, g = q, b = v; break;\r\n        case 4: r = t, g = p, b = v; break;\r\n        case 5: r = v, g = p, b = q; break;\r\n    }\r\n\r\n    return {\r\n        r,\r\n        g,\r\n        b\r\n    };\r\n}\r\n\r\nfunction isMobile (): boolean {\r\n    return /Mobi|Android/i.test(navigator.userAgent);\r\n}\r\n\r\nclass GLProgram {\r\n    uniforms: any;\r\n    program: WebGLProgram;\r\n\r\n    constructor ( gl: WebGL2RenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader) {\r\n        this.program = gl.createProgram() as WebGLProgram;\r\n        this.uniforms = {};\r\n\r\n        gl.attachShader(this.program, vertexShader);\r\n        gl.attachShader(this.program, fragmentShader);\r\n        gl.linkProgram(this.program);\r\n\r\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS))\r\n            throw gl.getProgramInfoLog(this.program);\r\n\r\n        const uniformCount = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\r\n        for (let i = 0; i < uniformCount; i++) {\r\n            const uniformName = (gl.getActiveUniform(this.program, i) as WebGLActiveInfo).name;\r\n            this.uniforms[uniformName] = gl.getUniformLocation(this.program, uniformName);\r\n        }\r\n    }\r\n\r\n    bind (gl: WebGL2RenderingContext) {\r\n        gl.useProgram(this.program);\r\n    }\r\n}\r\n\r\nclass FluidRender {\r\n    private readonly canvas: HTMLCanvasElement;\r\n    private readonly gl: WebGL2RenderingContext;\r\n    private readonly ext: IGLExtentsions;\r\n    private readonly config;\r\n    private readonly ditheringTexture;\r\n\r\n    private readonly clearProgram: GLProgram;\r\n    private readonly colorProgram: GLProgram;\r\n    private readonly backgroundProgram: GLProgram;\r\n    private readonly displayProgram: GLProgram;\r\n    private readonly displayBloomProgram: GLProgram;\r\n    private readonly displayShadingProgram: GLProgram;\r\n    private readonly displayBloomShadingProgram: GLProgram;\r\n    private readonly bloomPrefilterProgram: GLProgram;\r\n    private readonly bloomBlurProgram: GLProgram;\r\n    private readonly bloomFinalProgram: GLProgram;\r\n    private readonly splatProgram: GLProgram;\r\n    private readonly advectionProgram: GLProgram;\r\n    private readonly divergenceProgram: GLProgram;\r\n    private readonly curlProgram: GLProgram;\r\n    private readonly vorticityProgram: GLProgram;\r\n    private readonly pressureProgram: GLProgram;\r\n    private readonly gradientSubtractProgram: GLProgram;\r\n\r\n    private bloomFramebuffers: Array<any> = [];\r\n    private simWidth;\r\n    private simHeight;\r\n    private dyeWidth;\r\n    private dyeHeight;\r\n    private density;\r\n    private velocity;\r\n    private divergence;\r\n    private curl;\r\n    private pressure;\r\n    private bloom;\r\n\r\n    private readonly blit: (destination: WebGLFramebuffer | null) => void;\r\n\r\n    private static readonly DEFAULT_CONF = {\r\n        SIM_RESOLUTION: 128,\r\n        DYE_RESOLUTION: 512,\r\n        DENSITY_DISSIPATION: 0.97,\r\n        VELOCITY_DISSIPATION: 0.98,\r\n        PRESSURE_DISSIPATION: 0.8,\r\n        PRESSURE_ITERATIONS: 20,\r\n        CURL: 30,\r\n        SPLAT_RADIUS: 0.5,\r\n        SHADING: true,\r\n        COLORFUL: true,\r\n        PAUSED: false,\r\n        BACK_COLOR: { r: 0, g: 0, b: 0 },\r\n        TRANSPARENT: false,\r\n        BLOOM: true,\r\n        BLOOM_ITERATIONS: 8,\r\n        BLOOM_RESOLUTION: 256,\r\n        BLOOM_INTENSITY: 0.8,\r\n        BLOOM_THRESHOLD: 0.6,\r\n        BLOOM_SOFT_KNEE: 0.7\r\n    };\r\n\r\n    static getDefaultConfig(): typeof FluidRender.DEFAULT_CONF {\r\n        return Object.assign({}, FluidRender.DEFAULT_CONF);\r\n    }\r\n\r\n    constructor(canvas: HTMLCanvasElement, config: typeof FluidRender.DEFAULT_CONF, text_url: string) {\r\n        this.canvas = canvas;\r\n        // get the GL context from the canvas, and read support information\r\n        const { gl, ext } = FluidRender.getWebGLContext(canvas);\r\n        this.gl = gl;\r\n        // set the extensions and config data\r\n        this.ext = ext;\r\n        this.config = config;\r\n        // modify the config for platform specific things\r\n        if (isMobile())\r\n            this.config.SHADING = false;\r\n\r\n        if (!this.ext.supportLinearFiltering) {\r\n            this.config.SHADING = false;\r\n            this.config.BLOOM = false;\r\n        }\r\n\r\n        // process the shaders\r\n        const {\r\n            baseVertexShader,\r\n            clearShader,\r\n            colorShader,\r\n            backgroundShader,\r\n            displayShader,\r\n            displayBloomShader,\r\n            displayShadingShader,\r\n            displayBloomShadingShader,\r\n            bloomPrefilterShader,\r\n            bloomBlurShader,\r\n            bloomFinalShader,\r\n            splatShader,\r\n            advectionShader,\r\n            advectionManualFilteringShader,\r\n            divergenceShader,\r\n            curlShader,\r\n            vorticityShader,\r\n            pressureShader,\r\n            gradientSubtractShader\r\n        } = getShaders(this.gl);\r\n\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.gl.createBuffer());\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]), this.gl.STATIC_DRAW);\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.gl.createBuffer());\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 0, 2, 3]), this.gl.STATIC_DRAW);\r\n        this.gl.vertexAttribPointer(0, 2, this.gl.FLOAT, false, 0, 0);\r\n        this.gl.enableVertexAttribArray(0);\r\n\r\n        this.blit = (destination: WebGLFramebuffer | null) => {\r\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, destination);\r\n            this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\r\n        };\r\n\r\n        // load the image texture for dithering\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, new Uint8Array([255, 255, 255]));\r\n\r\n        this.ditheringTexture = {\r\n            texture,\r\n            width: 1,\r\n            height: 1,\r\n            attach: ((id) => {\r\n                this.gl.activeTexture(this.gl.TEXTURE0 + id);\r\n                this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n                return id;\r\n            }).bind(this)\r\n        };\r\n\r\n        const image = new Image();\r\n        image.onload = (() => {\r\n            this.ditheringTexture.width = image.width;\r\n            this.ditheringTexture.height = image.height;\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGB, this.gl.RGB, this.gl.UNSIGNED_BYTE, image);\r\n        }).bind(this);\r\n        image.src = text_url;\r\n\r\n        this.clearProgram               = new GLProgram(this.gl, baseVertexShader, clearShader);\r\n        this.colorProgram               = new GLProgram(this.gl, baseVertexShader, colorShader);\r\n        this.backgroundProgram          = new GLProgram(this.gl, baseVertexShader, backgroundShader);\r\n        this.displayProgram             = new GLProgram(this.gl, baseVertexShader, displayShader);\r\n        this.displayBloomProgram        = new GLProgram(this.gl, baseVertexShader, displayBloomShader);\r\n        this.displayShadingProgram      = new GLProgram(this.gl, baseVertexShader, displayShadingShader);\r\n        this.displayBloomShadingProgram = new GLProgram(this.gl, baseVertexShader, displayBloomShadingShader);\r\n        this.bloomPrefilterProgram      = new GLProgram(this.gl, baseVertexShader, bloomPrefilterShader);\r\n        this.bloomBlurProgram           = new GLProgram(this.gl, baseVertexShader, bloomBlurShader);\r\n        this.bloomFinalProgram          = new GLProgram(this.gl, baseVertexShader, bloomFinalShader);\r\n        this.splatProgram               = new GLProgram(this.gl, baseVertexShader, splatShader);\r\n        this.advectionProgram           = new GLProgram(this.gl, baseVertexShader, ext.supportLinearFiltering ? advectionShader : advectionManualFilteringShader);\r\n        this.divergenceProgram          = new GLProgram(this.gl, baseVertexShader, divergenceShader);\r\n        this.curlProgram                = new GLProgram(this.gl, baseVertexShader, curlShader);\r\n        this.vorticityProgram           = new GLProgram(this.gl, baseVertexShader, vorticityShader);\r\n        this.pressureProgram            = new GLProgram(this.gl, baseVertexShader, pressureShader);\r\n        this.gradientSubtractProgram     = new GLProgram(this.gl, baseVertexShader, gradientSubtractShader);\r\n\r\n        // init framebuffers\r\n        this.initFrameBuffers();\r\n    }\r\n\r\n    private initFrameBuffers() {\r\n        let simRes = this.getResolution(this.config.SIM_RESOLUTION);\r\n        let dyeRes = this.getResolution(this.config.DYE_RESOLUTION);\r\n\r\n        this.simWidth  = simRes.width;\r\n        this.simHeight = simRes.height;\r\n        this.dyeWidth  = dyeRes.width;\r\n        this.dyeHeight = dyeRes.height;\r\n\r\n        const texType = this.ext.halfFloatTexType;\r\n        const rgba    = this.ext.formatRGBA;\r\n        const rg      = this.ext.formatRG;\r\n        const r       = this.ext.formatR;\r\n        const filtering = this.ext.supportLinearFiltering ? this.gl.LINEAR : this.gl.NEAREST;\r\n\r\n        if (this.density == null)\r\n            this.density = this.createDoubleFBO(this.dyeWidth, this.dyeHeight, rgba.internalFormat, rgba.format, texType, filtering);\r\n        else\r\n            this.density = this.resizeDoubleFBO(this.density, this.dyeWidth, this.dyeHeight, rgba.internalFormat, rgba.format, texType, filtering);\r\n\r\n        if (this.velocity == null)\r\n            this.velocity = this.createDoubleFBO(this.simWidth, this.simHeight, rg.internalFormat, rg.format, texType, filtering);\r\n        else\r\n            this.velocity = this.resizeDoubleFBO(this.velocity, this.simWidth, this.simHeight, rg.internalFormat, rg.format, texType, filtering);\r\n\r\n        this.divergence = this.createFBO      (this.simWidth, this.simHeight, r.internalFormat, r.format, texType, this.gl.NEAREST);\r\n        this.curl       = this.createFBO      (this.simWidth, this.simHeight, r.internalFormat, r.format, texType, this.gl.NEAREST);\r\n        this.pressure   = this.createDoubleFBO(this.simWidth, this.simHeight, r.internalFormat, r.format, texType, this.gl.NEAREST);\r\n\r\n        this.initBloomFramebuffers();\r\n    }\r\n\r\n   private initBloomFramebuffers () {\r\n        let res = this.getResolution(this.config.BLOOM_RESOLUTION);\r\n\r\n        const texType = this.ext.halfFloatTexType;\r\n        const rgba = this.ext.formatRGBA;\r\n        const filtering = this.ext.supportLinearFiltering ? this.gl.LINEAR : this.gl.NEAREST;\r\n\r\n        this.bloom = this.createFBO(res.width, res.height, rgba.internalFormat, rgba.format, texType, filtering);\r\n\r\n        this.bloomFramebuffers = [];\r\n        for (let i = 0; i < this.config.BLOOM_ITERATIONS; i++) {\r\n            let width = res.width >> (i + 1);\r\n            let height = res.height >> (i + 1);\r\n\r\n            if (width < 2 || height < 2) break;\r\n\r\n            let fbo = this.createFBO(width, height, rgba.internalFormat, rgba.format, texType, filtering);\r\n            this.bloomFramebuffers.push(fbo);\r\n        }\r\n    }\r\n\r\n    private getResolution (resolution) {\r\n        let aspectRatio = this.gl.drawingBufferWidth / this.gl.drawingBufferHeight;\r\n        if (aspectRatio < 1)\r\n            aspectRatio = 1.0 / aspectRatio;\r\n\r\n        let max = Math.round(resolution * aspectRatio);\r\n        let min = Math.round(resolution);\r\n\r\n        if (this.gl.drawingBufferWidth > this.gl.drawingBufferHeight)\r\n            return { width: max, height: min };\r\n        else\r\n            return { width: min, height: max };\r\n    }\r\n\r\n    private createFBO (w: number, h: number, internalFormat: number, format: number, type: number, param: number) {\r\n        this.gl.activeTexture(this.gl.TEXTURE0);\r\n        let texture = this.gl.createTexture();\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, param);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, param);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\r\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, internalFormat, w, h, 0, format, type, null);\r\n\r\n        let fbo = this.gl.createFramebuffer();\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, fbo);\r\n        this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, texture, 0);\r\n        this.gl.viewport(0, 0, w, h);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        return {\r\n            texture: texture as WebGLTexture,\r\n            fbo: fbo as WebGLFramebuffer,\r\n            width: w,\r\n            height: h,\r\n            attach: ((id) => {\r\n                this.gl.activeTexture(this.gl.TEXTURE0 + id);\r\n                this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n                return id;\r\n            }).bind(this)\r\n        };\r\n    }\r\n\r\n    private createDoubleFBO (w: number, h: number, internalFormat: number, format: number, type: number, param: number) {\r\n        let fbo1 = this.createFBO(w, h, internalFormat, format, type, param);\r\n        let fbo2 = this.createFBO(w, h, internalFormat, format, type, param);\r\n\r\n        return {\r\n            get read () {\r\n                return fbo1;\r\n            },\r\n            set read (value) {\r\n                fbo1 = value;\r\n            },\r\n            get write () {\r\n                return fbo2;\r\n            },\r\n            set write (value) {\r\n                fbo2 = value;\r\n            },\r\n            swap () {\r\n                let temp = fbo1;\r\n                fbo1 = fbo2;\r\n                fbo2 = temp;\r\n            }\r\n        };\r\n    }\r\n\r\n    private resizeFBO (target, w: number, h: number, internalFormat: number, format: number, type: number, param: number) {\r\n        let newFBO = this.createFBO(w, h, internalFormat, format, type, param);\r\n        this.clearProgram.bind(this.gl);\r\n        this.gl.uniform1i(this.clearProgram.uniforms.uTexture, target.attach(0));\r\n        this.gl.uniform1f(this.clearProgram.uniforms.value, 1);\r\n        this.blit(newFBO.fbo);\r\n        return newFBO;\r\n    }\r\n\r\n    private resizeDoubleFBO (target, w: number, h: number, internalFormat: number, format: number, type: number, param: number) {\r\n        target.read = this.resizeFBO(target.read, w, h, internalFormat, format, type, param);\r\n        target.write = this.createFBO(w, h, internalFormat, format, type, param);\r\n        return target;\r\n    }\r\n\r\n    private step (dt) {\r\n        this.gl.disable(this.gl.BLEND);\r\n        this.gl.viewport(0, 0, this.simWidth, this.simHeight);\r\n\r\n        this.curlProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.curlProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.curlProgram.uniforms.uVelocity, this.velocity.read.attach(0));\r\n        this.blit(this.curl.fbo);\r\n\r\n        this.vorticityProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.vorticityProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.vorticityProgram.uniforms.uVelocity, this.velocity.read.attach(0));\r\n        this.gl.uniform1i(this.vorticityProgram.uniforms.uCurl, this.curl.attach(1));\r\n        this.gl.uniform1f(this.vorticityProgram.uniforms.curl, this.config.CURL);\r\n        this.gl.uniform1f(this.vorticityProgram.uniforms.dt, dt);\r\n        this.blit(this.velocity.write.fbo);\r\n        this.velocity.swap();\r\n\r\n        this.divergenceProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.divergenceProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.divergenceProgram.uniforms.uVelocity, this.velocity.read.attach(0));\r\n        this.blit(this.divergence.fbo);\r\n\r\n        this.clearProgram.bind(this.gl);\r\n        this.gl.uniform1i(this.clearProgram.uniforms.uTexture, this.pressure.read.attach(0));\r\n        this.gl.uniform1f(this.clearProgram.uniforms.value, this.config.PRESSURE_DISSIPATION);\r\n        this.blit(this.pressure.write.fbo);\r\n        this.pressure.swap();\r\n\r\n        this.pressureProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.pressureProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.pressureProgram.uniforms.uDivergence, this.divergence.attach(0));\r\n        for (let i = 0; i < this.config.PRESSURE_ITERATIONS; i++) {\r\n            this.gl.uniform1i(this.pressureProgram.uniforms.uPressure, this.pressure.read.attach(1));\r\n            this.blit(this.pressure.write.fbo);\r\n            this.pressure.swap();\r\n        }\r\n\r\n        this.gradientSubtractProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.gradientSubtractProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.gradientSubtractProgram.uniforms.uPressure, this.pressure.read.attach(0));\r\n        this.gl.uniform1i(this.gradientSubtractProgram.uniforms.uVelocity, this.velocity.read.attach(1));\r\n        this.blit(this.velocity.write.fbo);\r\n        this.velocity.swap();\r\n\r\n        this.advectionProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.advectionProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        if (!this.ext.supportLinearFiltering)\r\n            this.gl.uniform2f(this.advectionProgram.uniforms.dyeTexelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        let velocityId = this.velocity.read.attach(0);\r\n        this.gl.uniform1i(this.advectionProgram.uniforms.uVelocity, velocityId);\r\n        this.gl.uniform1i(this.advectionProgram.uniforms.uSource, velocityId);\r\n        this.gl.uniform1f(this.advectionProgram.uniforms.dt, dt);\r\n        this.gl.uniform1f(this.advectionProgram.uniforms.dissipation, this.config.VELOCITY_DISSIPATION);\r\n        this.blit(this.velocity.write.fbo);\r\n        this.velocity.swap();\r\n\r\n        this.gl.viewport(0, 0, this.dyeWidth, this.dyeHeight);\r\n\r\n        if (!this.ext.supportLinearFiltering)\r\n            this.gl.uniform2f(this.advectionProgram.uniforms.dyeTexelSize, 1.0 / this.dyeWidth, 1.0 / this.dyeHeight);\r\n        this.gl.uniform1i(this.advectionProgram.uniforms.uVelocity, this.velocity.read.attach(0));\r\n        this.gl.uniform1i(this.advectionProgram.uniforms.uSource, this.density.read.attach(1));\r\n        this.gl.uniform1f(this.advectionProgram.uniforms.dissipation, this.config.DENSITY_DISSIPATION);\r\n        this.blit(this.density.write.fbo);\r\n        this.density.swap();\r\n    }\r\n\r\n    private render (target) {\r\n        if (this.config.BLOOM)\r\n            this.applyBloom(this.density.read, this.bloom);\r\n\r\n        if (target == null || !this.config.TRANSPARENT) {\r\n            this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\r\n            this.gl.enable(this.gl.BLEND);\r\n        }\r\n        else {\r\n            this.gl.disable(this.gl.BLEND);\r\n        }\r\n\r\n        let width  = target == null ? this.gl.drawingBufferWidth : this.dyeWidth;\r\n        let height = target == null ? this.gl.drawingBufferHeight : this.dyeHeight;\r\n\r\n        this.gl.viewport(0, 0, width, height);\r\n\r\n        if (!this.config.TRANSPARENT) {\r\n            this.colorProgram.bind(this.gl);\r\n            let bc = this.config.BACK_COLOR;\r\n            this.gl.uniform4f(this.colorProgram.uniforms.color, bc.r / 255, bc.g / 255, bc.b / 255, 1);\r\n            this.blit(target);\r\n        }\r\n\r\n        if (target == null && this.config.TRANSPARENT) {\r\n            this.backgroundProgram.bind(this.gl);\r\n            this.gl.uniform1f(this.backgroundProgram.uniforms.aspectRatio, this.canvas.width / this.canvas.height);\r\n            this.blit(null);\r\n        }\r\n\r\n        if (this.config.SHADING) {\r\n            let program = this.config.BLOOM ? this.displayBloomShadingProgram : this.displayShadingProgram;\r\n            program.bind(this.gl);\r\n            this.gl.uniform2f(program.uniforms.texelSize, 1.0 / width, 1.0 / height);\r\n            this.gl.uniform1i(program.uniforms.uTexture, this.density.read.attach(0));\r\n            if (this.config.BLOOM) {\r\n                this.gl.uniform1i(program.uniforms.uBloom, this.bloom.attach(1));\r\n                this.gl.uniform1i(program.uniforms.uDithering, this.ditheringTexture.attach(2));\r\n                let scale = FluidRender.getTextureScale(this.ditheringTexture, width, height);\r\n                this.gl.uniform2f(program.uniforms.ditherScale, scale.x, scale.y);\r\n            }\r\n        }\r\n        else {\r\n            let program = this.config.BLOOM ? this.displayBloomProgram : this.displayProgram;\r\n            program.bind(this.gl);\r\n            this.gl.uniform1i(program.uniforms.uTexture, this.density.read.attach(0));\r\n            if (this.config.BLOOM) {\r\n                this.gl.uniform1i(program.uniforms.uBloom, this.bloom.attach(1));\r\n                this.gl.uniform1i(program.uniforms.uDithering, this.ditheringTexture.attach(2));\r\n                let scale = FluidRender.getTextureScale(this.ditheringTexture, width, height);\r\n                this.gl.uniform2f(program.uniforms.ditherScale, scale.x, scale.y);\r\n            }\r\n        }\r\n\r\n        this.blit(target);\r\n    }\r\n\r\n    private applyBloom (source, destination) {\r\n        if (this.bloomFramebuffers.length < 2)\r\n            return;\r\n\r\n        let last = destination;\r\n\r\n        this.gl.disable(this.gl.BLEND);\r\n        this.bloomPrefilterProgram.bind(this.gl);\r\n        let knee = this.config.BLOOM_THRESHOLD * this.config.BLOOM_SOFT_KNEE + 0.0001;\r\n        let curve0 = this.config.BLOOM_THRESHOLD - knee;\r\n        let curve1 = knee * 2;\r\n        let curve2 = 0.25 / knee;\r\n        this.gl.uniform3f(this.bloomPrefilterProgram.uniforms.curve, curve0, curve1, curve2);\r\n        this.gl.uniform1f(this.bloomPrefilterProgram.uniforms.threshold, this.config.BLOOM_THRESHOLD);\r\n        this.gl.uniform1i(this.bloomPrefilterProgram.uniforms.uTexture, source.attach(0));\r\n        this.gl.viewport(0, 0, last.width, last.height);\r\n        this.blit(last.fbo);\r\n\r\n        this.bloomBlurProgram.bind(this.gl);\r\n        for (let i = 0; i < this.bloomFramebuffers.length; i++) {\r\n            let dest = this.bloomFramebuffers[i];\r\n            this.gl.uniform2f(this.bloomBlurProgram.uniforms.texelSize, 1.0 / last.width, 1.0 / last.height);\r\n            this.gl.uniform1i(this.bloomBlurProgram.uniforms.uTexture, last.attach(0));\r\n            this.gl.viewport(0, 0, dest.width, dest.height);\r\n            this.blit(dest.fbo);\r\n            last = dest;\r\n        }\r\n\r\n        this.gl.blendFunc(this.gl.ONE, this.gl.ONE);\r\n        this.gl.enable(this.gl.BLEND);\r\n\r\n        for (let i = this.bloomFramebuffers.length - 2; i >= 0; i--) {\r\n            let baseTex = this.bloomFramebuffers[i];\r\n            this.gl.uniform2f(this.bloomBlurProgram.uniforms.texelSize, 1.0 / last.width, 1.0 / last.height);\r\n            this.gl.uniform1i(this.bloomBlurProgram.uniforms.uTexture, last.attach(0));\r\n            this.gl.viewport(0, 0, baseTex.width, baseTex.height);\r\n            this.blit(baseTex.fbo);\r\n            last = baseTex;\r\n        }\r\n\r\n        this.gl.disable(this.gl.BLEND);\r\n        this.bloomFinalProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.bloomFinalProgram.uniforms.texelSize, 1.0 / last.width, 1.0 / last.height);\r\n        this.gl.uniform1i(this.bloomFinalProgram.uniforms.uTexture, last.attach(0));\r\n        this.gl.uniform1f(this.bloomFinalProgram.uniforms.intensity, this.config.BLOOM_INTENSITY);\r\n        this.gl.viewport(0, 0, destination.width, destination.height);\r\n        this.blit(destination.fbo);\r\n    }\r\n\r\n    private checkResizeCanvas () {\r\n        if (this.canvas.width !== this.canvas.clientWidth || this.canvas.height !== this.canvas.clientHeight) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            this.initFrameBuffers();\r\n        }\r\n    }\r\n\r\n    static generateColor () {\r\n        let c = HSVtoRGB(Math.random(), 1.0, 1.0);\r\n        c.r *= 0.15;\r\n        c.g *= 0.15;\r\n        c.b *= 0.15;\r\n        return c;\r\n    }\r\n\r\n    private static getTextureScale (texture, width, height) {\r\n        return {\r\n            x: width / texture.width,\r\n            y: height / texture.height\r\n        };\r\n    }\r\n\r\n    private static getWebGLContext (canvas: HTMLCanvasElement): { gl: WebGL2RenderingContext, ext: IGLExtentsions } {\r\n        const params = { alpha: true, depth: false, stencil: false, antialias: false, preserveDrawingBuffer: false };\r\n\r\n        let gl: WebGL2RenderingContext = canvas.getContext(\"webgl2\", params) as WebGL2RenderingContext;\r\n        const isWebGL2 = !!gl;\r\n        if (!isWebGL2)\r\n            gl = (canvas.getContext(\"webgl\", params) || canvas.getContext(\"experimental-webgl\", params)) as WebGL2RenderingContext;\r\n\r\n        let halfFloat;\r\n        let supportLinearFiltering;\r\n        if (isWebGL2) {\r\n            gl.getExtension(\"EXT_color_buffer_float\");\r\n            supportLinearFiltering = gl.getExtension(\"OES_texture_float_linear\");\r\n        } else {\r\n            halfFloat = gl.getExtension(\"OES_texture_half_float\");\r\n            supportLinearFiltering = gl.getExtension(\"OES_texture_half_float_linear\");\r\n        }\r\n\r\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\r\n        const halfFloatTexType = isWebGL2 ? gl.HALF_FLOAT : halfFloat.HALF_FLOAT_OES;\r\n        let formatRGBA;\r\n        let formatRG;\r\n        let formatR;\r\n\r\n        if (isWebGL2) {\r\n            formatRGBA = FluidRender.getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType);\r\n            formatRG = FluidRender.getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType);\r\n            formatR = FluidRender.getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType);\r\n        }\r\n        else {\r\n            formatRGBA = FluidRender.getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n            formatRG = FluidRender.getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n            formatR = FluidRender.getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n        }\r\n\r\n        if (formatRGBA == null)\r\n            // ga('send', 'event', isWebGL2 ? 'webgl2' : 'webgl', 'not supported');\r\n            console.log(`${isWebGL2 ? \"WsbGL2\" : \"WebGL\"} not supported`);\r\n        else\r\n            // ga('send', 'event', isWebGL2 ? 'webgl2' : 'webgl', 'supported');\r\n            console.log(`${isWebGL2 ? \"WsbGL2\" : \"WebGL\"} supported`);\r\n\r\n        return {\r\n            gl,\r\n            ext: {\r\n                formatRGBA,\r\n                formatRG,\r\n                formatR,\r\n                halfFloatTexType,\r\n                supportLinearFiltering\r\n            }\r\n        };\r\n    }\r\n\r\n    private static getSupportedFormat (gl, internalFormat, format, type) {\r\n        if (!FluidRender.supportRenderTextureFormat(gl, internalFormat, format, type)) {\r\n            switch (internalFormat) {\r\n                case gl.R16F:\r\n                    return FluidRender.getSupportedFormat(gl, gl.RG16F, gl.RG, type);\r\n                case gl.RG16F:\r\n                    return FluidRender.getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type);\r\n                default:\r\n                    return null;\r\n            }\r\n        }\r\n\r\n        return {\r\n            internalFormat,\r\n            format\r\n        };\r\n    }\r\n\r\n    private static supportRenderTextureFormat (gl: WebGL2RenderingContext, internalFormat, format, type): boolean {\r\n        let texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null);\r\n\r\n        let fbo = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== gl.FRAMEBUFFER_COMPLETE)\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    splat (x: number, y: number, dx: number, dy: number, color: { r: number, g: number, b: number }, radius?: number) {\r\n        this.gl.viewport(0, 0, this.simWidth, this.simHeight);\r\n        this.splatProgram.bind(this.gl);\r\n        this.gl.uniform1i(this.splatProgram.uniforms.uTarget, this.velocity.read.attach(0));\r\n        this.gl.uniform1f(this.splatProgram.uniforms.aspectRatio, this.canvas.width / this.canvas.height);\r\n        this.gl.uniform2f(this.splatProgram.uniforms.point, x / this.canvas.width, 1.0 - y / this.canvas.height);\r\n        this.gl.uniform3f(this.splatProgram.uniforms.color, dx, -dy, 1.0);\r\n        this.gl.uniform1f(this.splatProgram.uniforms.radius, (radius || this.config.SPLAT_RADIUS) / 100.0);\r\n        this.blit(this.velocity.write.fbo);\r\n        this.velocity.swap();\r\n\r\n        this.gl.viewport(0, 0, this.dyeWidth, this.dyeHeight);\r\n        this.gl.uniform1i(this.splatProgram.uniforms.uTarget, this.density.read.attach(0));\r\n        this.gl.uniform3f(this.splatProgram.uniforms.color, color.r, color.g, color.b);\r\n        this.blit(this.density.write.fbo);\r\n        this.density.swap();\r\n    }\r\n\r\n    randomSplats (amount: number) {\r\n        for (let i = 0; i < amount; i++) {\r\n            const color = FluidRender.generateColor();\r\n            color.r *= 10.0;\r\n            color.g *= 10.0;\r\n            color.b *= 10.0;\r\n            const x = this.canvas.width * Math.random();\r\n            const y = this.canvas.height * Math.random();\r\n            const dx = 1000 * (Math.random() - 0.5);\r\n            const dy = 1000 * (Math.random() - 0.5);\r\n            this.splat(x, y, dx, dy, color);\r\n        }\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.ditheringTexture.width === 1) console.log(\"Attempted to render when image is not loaded!\");\r\n        else {\r\n            this.checkResizeCanvas();\r\n            this.step(dt);\r\n            this.render(null);\r\n        }\r\n    }\r\n}\r\n\r\nexport default FluidRender;","import * as React from \"react\";\r\nimport useEventListener from \"@use-it/event-listener\";\r\n\r\n/**\r\n * Simple hook for detecting if an element is inside the viewport or not\r\n */\r\n\r\nfunction getIsInside(elem: HTMLElement) {\r\n    const rect = elem.getBoundingClientRect();\r\n    return (rect.top >= 0 && rect.top <= window.innerHeight)\r\n                || (rect.bottom > 0 && rect.bottom <= window.innerHeight);\r\n}\r\n\r\nconst useInsideViewport: (element: React.MutableRefObject<HTMLElement | null>, insidecallback: () => (() => void) | void) => void = (element, insidecallback) => {\r\n    const [isInside, setIsInside] = React.useState<boolean | null>(null);\r\n    const insideCallbackRef = React.useRef<(() => void) | null>(null);\r\n\r\n    useEventListener(\"scroll\", () => {\r\n        if (element.current) setIsInside(getIsInside(element.current));\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (element.current) {\r\n            // if we haven't detected ever, do the first check and run this function again\r\n            if (isInside === null) setIsInside(getIsInside(element.current));\r\n            // else if it's inside run the callback\r\n            else if (isInside) insideCallbackRef.current = insidecallback() || null;\r\n            // else run the cleanup if it exists\r\n            else if (insideCallbackRef.current) {\r\n                insideCallbackRef.current();\r\n                insideCallbackRef.current = null;\r\n            }\r\n            // tell react to run the cleanup if this component disapears\r\n            return insideCallbackRef.current || undefined;\r\n        }\r\n    }, [isInside, insidecallback, element]);\r\n};\r\n\r\nexport default useInsideViewport;","import * as React from \"react\";\r\nimport FluidRender from \"./FluidRender\";\r\nimport useInsideViewport from \"./useInsideViewport\";\r\nconst DitherImage = require(\"./img/LDR_RGB1_0.png\");\r\n\r\n/**\r\n * Port of stable fluid simulation using WebGL\r\n * From this project: https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\r\n */\r\n\r\nconst FluidGL: React.FunctionComponent<{ className?: string, canvaswidth: number, canvasheight: number }> = ({ className = \"\", canvaswidth = 600, canvasheight = 600}) => {\r\n    const canvas_ref = React.useRef<HTMLCanvasElement | null>(null);\r\n    const fluid_ref = React.useRef<FluidRender | null>(null);\r\n    const animation_ref = React.useRef<number>(0);\r\n    const number = React.useRef<number>(50);\r\n\r\n    const animationCallback = () => {\r\n        if (fluid_ref.current && canvas_ref.current) {\r\n            fluid_ref.current.update(0.008);\r\n            if (++number.current === 100) {\r\n                number.current = 0;\r\n            }\r\n\r\n            if (number.current < 25) {\r\n                const color = FluidRender.generateColor();\r\n                color.r *= 10.0;\r\n                color.g *= 10.0;\r\n                color.b *= 10.0;\r\n                fluid_ref.current.splat(10 + number.current * 20, 400, 500, 0, color, .8);\r\n                fluid_ref.current.splat(canvas_ref.current.width - (10 + number.current * 20), 400, -500, 0, color, .8);\r\n                fluid_ref.current.splat(canvas_ref.current.width / 2, number.current * 18, 0, 500, color, .8);\r\n                fluid_ref.current.splat(canvas_ref.current.width / 2, canvas_ref.current.height - number.current * 18, 0, -500, color, .8);\r\n            }\r\n            animation_ref.current = requestAnimationFrame(animationCallback);\r\n        }\r\n    };\r\n\r\n    useInsideViewport(canvas_ref, () => {\r\n        if (canvas_ref.current) {\r\n            // get a config object for the fluid renderer\r\n            const config = FluidRender.getDefaultConfig();\r\n            config.BLOOM = false;\r\n            config.SHADING = false;\r\n            config.DENSITY_DISSIPATION = 0.99;\r\n            config.SIM_RESOLUTION = 512;\r\n            config.DYE_RESOLUTION = 1024;\r\n            // set some options\r\n            // TODO\r\n            // setup the fluid renderer\r\n            fluid_ref.current = new FluidRender(canvas_ref.current, config, DitherImage);\r\n            console.log(\"Reconstuct!\");\r\n            // start it!\r\n            animationCallback();\r\n            // let react know we gotta clean up the animation\r\n            return () => {\r\n                cancelAnimationFrame(animation_ref.current);\r\n                fluid_ref.current = null;\r\n            };\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={className || undefined}>\r\n            <canvas ref={canvas_ref} width={canvaswidth} height={canvasheight}></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FluidGL;","import * as React from \"react\";\nimport styled, { ThemeProvider, css, createGlobalStyle } from \"styled-components\";\nimport styledTS from \"styled-components-ts\";\nimport FluidFull from \"./FluidGL\";\nimport useEventListener from \"@use-it/event-listener\";\nconst reactLogo = require(\"./img/react_logo.svg\");\nconst stockPhoto = require(\"./img/image.PNG\");\nconst protoMask = require(\"./img/proto.png\");\n\n\n/**\n * My personal website!\n * This file will handle top-level structure and styles, allowing each sub-component to fill\n * its own container.\n */\n\n/** define a bunch of color constants that I can tweak later */\nconst main_theme = {\n    color: {\n        light_background: \"#ECECEC\",\n        dark_background: \"#AEAEAE\",\n        logo_background: \"#C4C4C4\",\n        logo_text: \"#919191\",\n    },\n    font: {\n        size: {\n            xlarge: \"19vh\",\n            xlarge_num: 175,\n            large: \"5.6vh\",\n            large_num: 56,\n            medium: \"4.4vh\",\n            small: \"3vh\",\n        },\n        type: {\n            header_footer: \"'Open Sans', sans-serif\",\n            content: \"'Roboto Slab', serif\"\n        }\n    },\n    logo: {\n        size: {\n            small: \"10vh\",\n            medium: \"12.5vh\",\n            large: \"27.5vh\",\n        },\n        url: {\n            main: reactLogo,\n            cloud: reactLogo,\n            embedded: reactLogo,\n            web: reactLogo,\n            social: reactLogo,\n            stock: stockPhoto\n        }\n    },\n    screen: {\n        content_width: \"1440px\",\n        side_pad: \"50px\",\n        top_bot_pad: \"20px\",\n        header_footer: \"15vh\",\n    }\n};\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n}\n`;\n\nconst ContentContainer = styledTS<{ height: string, color: string, theme: typeof main_theme }>(styled.div)`\n    display: grid;\n    grid-template:\n        [top_edge] \". . .\" ${ props => props.theme.screen.top_bot_pad }\n        [top_content] \". content .\" auto\n        [bot_content] \". . .\" ${ props => props.theme.screen.top_bot_pad } [bot_edge]\n        / [left_edge] minmax(${ props => props.theme.screen.side_pad }, 1fr)\n        [left_content] minmax(auto, ${ props => props.theme.screen.content_width })\n        [right_content] minmax(${ props => props.theme.screen.side_pad }, 1fr) [right_edge];\n\n    width: 100%;\n    background-color: ${ props => props.color ? props.theme.color[props.color] : props.theme.color.light_background };\n\n    & > .content {\n        grid-area: content;\n        height: ${ props => props.height };\n    }\n\n    & > .full {\n        grid-row: top_edge / bot_edge;\n        grid-column: left_edge / right_edge;\n    }\n`;\n\nconst PerfectCenter = styledTS<{ theme: typeof main_theme }>(styled.div)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst MainText = styledTS<{ theme: typeof main_theme }>(styled.div)`\n    font-family: ${ props => props.theme.font.type.content };\n    font-weight: bold;\n    font-size: ${ props => props.theme.font.size.xlarge };\n`;\n\nconst ResumeText = styledTS<{ theme: typeof main_theme }>(styled.div)`\n    font-family: ${ props => props.theme.font.type.content };\n    font-weight: 100;\n    font-size: ${ props => props.theme.font.size.large };\n    line-height: 7.6vh;\n    text-align: left;\n    max-width: 22em;\n`;\n\nconst BodyElem = styledTS<{ theme: typeof main_theme, x?: number, y?: number, spanx?: number, spany?: number }>(styled.div)`\n    ${ props => props.x ? css`grid-row: contentY ${ props => props.y } / span ${ props => props.spany ? props.spany : 1 };` : css`` }\n    ${ props => props.y ? css`grid-column: contentX ${ props => props.x } / span ${ props => props.spanx ? props.spanx : 1 };` : css``}\n`;\n\nconst LogoElement = styledTS<{ imgname: string, size: string, theme: typeof main_theme }>(styled(BodyElem))`\n    max-width: ${ props => props.theme.logo.size[props.size] };\n    height: ${ props => props.theme.logo.size[props.size] };\n    // background-image: url(${ props => props.theme.logo.url[props.imgname] });\n    background-color: ${ props => props.theme.color.logo_background };\n    border-radius: 50%;\n    background-position: center;\n    background-size: contain;\n    background-repeat: no-repeat;\n    align-self: center;\n`;\n\nconst TextElement = styledTS<{ size: string, type: string, align?: string, text_align?: string, theme: typeof main_theme }>(styled(BodyElem))`\n    font-family: ${ props => props.theme.font.type[props.type] };\n    font-size: ${ props => props.theme.font.size[props.size] };\n    text-align: ${ props => props.text_align ? props.text_align : \"center\" };\n    align-self: ${ props => props.align ? props.align : \"unset\" };\n    white-space: nowrap;\n`;\n\nconst HeaderFooterGrid = styledTS<{ theme: typeof main_theme }>(styled(BodyElem))`\n    display: grid;\n    height: ${ props => props.theme.screen.header_footer };\n    grid-template-rows: [contentY] 1fr [contentY] max-content [contentY] 1fr [contentY];\n    grid-template-columns: [contentX] ${ props => props.theme.logo.size.small } [contentX]\n        repeat(3, min-content [contentX]);\n    grid-column-gap: 50px;\n    align-items: center;\n`;\n\nconst BodyGrid = styledTS<{ theme: typeof main_theme, col_count: number, col_gap: number, col_max: string, col_min: string }>(styled(BodyElem))`\n    display: grid;\n    grid-template-rows: [contentY] repeat(7, 1fr [contentY]) 1fr [contentY];\n    grid-template-columns:\n        [contentX] 1fr [contentX]\n        minmax(0, ${ props => props.col_gap / 2 }px)\n        ${props => props.col_count > 1 && css`\n            repeat(${ props => props.col_count - 1 },\n            [contentX] minmax(${ props => props.col_min }, ${ props => props.col_max })\n            [contentX] minmax(0, ${ props => props.col_gap }px))\n        `}\n        [contentX] minmax(${ props => props.col_min }, ${ props => props.col_max })\n        [contentX] minmax(0, ${ props => props.col_gap / 2 }px)\n        [contentX] 1fr [contentX];\n`;\n\nconst MaskImage = styledTS<{ theme: typeof main_theme, image: string }>(styled.div)`\n    background-image: url(${ props => props.image});\n    background-size: cover;\n    background-position: center;\n    z-index: 99;\n`;\n\nconst MainPage: React.FunctionComponent = () => {\n    const [dimensions, setDimensions] = React.useState([window.innerWidth, window.innerHeight]);\n    // check for window resize to update our canvas\n    useEventListener(\"resize\", () => {\n        setDimensions([window.innerWidth, window.innerHeight]);\n    });\n\n    return (\n        <ThemeProvider theme={main_theme}>\n            <div>\n                <GlobalStyle />\n                <ContentContainer height=\"80vh\" color=\"light_background\">\n                    <MaskImage className=\"full\" image={protoMask}></MaskImage>\n                    <FluidFull className=\"full\" canvaswidth={dimensions[0]} canvasheight={dimensions[1] * 0.8} ></FluidFull>\n                    <div className=\"content\"></div>\n                </ContentContainer>\n                <ContentContainer height=\"80vh\" color=\"light_background\">\n                    <PerfectCenter className=\"content\"\n                        style={ { backgroundImage: `url(${main_theme.logo.url.stock})`, backgroundPosition: \"center\", backgroundSize: \"cover\" } }>\n                        <MainText>Prototypical {\"{\"}P{\"}\"}ro</MainText>\n                    </PerfectCenter>\n                    <div className=\"content\">\n                        <HeaderFooterGrid>\n                            <LogoElement x={1} y={1} spany={3} imgname=\"main\" size=\"small\"></LogoElement>\n                            <TextElement x={2} y={2} type=\"header_footer\" size=\"small\">RESUME</TextElement>\n                            <TextElement x={3} y={2} type=\"header_footer\" size=\"small\">GITHUB</TextElement>\n                            <TextElement x={4} y={2} type=\"header_footer\" size=\"small\">CONTACT</TextElement>\n                        </HeaderFooterGrid>\n                    </div>\n                </ContentContainer>\n                <ContentContainer height=\"55vh\" color=\"dark_background\">\n                    <BodyGrid className=\"content\" col_count={3} col_gap={150} col_min={main_theme.logo.size.medium} col_max={main_theme.logo.size.large}>\n                        <TextElement x={3} y={1} spanx={5} spany={2} type=\"content\" size=\"medium\">My name is Noah Koontz <br></br> and I build stuff</TextElement>\n                        <LogoElement x={3} y={2} spany={6} imgname=\"cloud\" size=\"large\"></LogoElement>\n                        <TextElement x={3} y={7} type=\"content\" size=\"medium\" align=\"end\">Cloud</TextElement>\n                        <LogoElement x={5} y={2} spany={6} imgname=\"embedded\" size=\"large\"></LogoElement>\n                        <TextElement x={5} y={7} type=\"content\" size=\"medium\" align=\"end\">Embedded</TextElement>\n                        <LogoElement x={7} y={2} spany={6} imgname=\"web\" size=\"large\"></LogoElement>\n                        <TextElement x={7} y={7} type=\"content\" size=\"medium\" align=\"end\">Web</TextElement>\n                    </BodyGrid>\n                </ContentContainer>\n                <ContentContainer height=\"65vh\" color=\"light_background\">\n                    <div className=\"full\" style={ { backgroundImage: `url(${main_theme.logo.url.stock})`, backgroundPosition: \"center\", backgroundSize: \"cover\" } }></div>\n                    <BodyGrid className=\"content\"\n                        col_count={2}\n                        col_gap={110}\n                        col_min={(main_theme.font.size.large_num * 4).toString() + \"px\"}\n                        col_max={(main_theme.font.size.xlarge_num * 4).toString() + \"px\"}>\n\n                        <TextElement x={3} y={3} spany={3} type=\"content\" align=\"center\" size=\"xlarge\">1212</TextElement>\n                        <TextElement x={3} y={6} type=\"content\" align=\"center\" size=\"medium\">Git Commits</TextElement>\n                        <TextElement x={5} y={3} spany={3} type=\"content\" align=\"center\" size=\"xlarge\">12123</TextElement>\n                        <TextElement x={5} y={6} type=\"content\" align=\"center\" size=\"medium\">Lines of Code</TextElement>\n                    </BodyGrid>\n                </ContentContainer>\n                <ContentContainer height=\"55vh\" color=\"dark_background\">\n                    <PerfectCenter className=\"content\">\n                        <ResumeText>I am a <b>maker</b> who enjoys the creative application of technology. I am a <b>hard worker</b> with an ability to turn ideas into reality. <b>Resourceful</b> and <b>motivated</b>, I have a track record of rapidly applying new concepts.</ResumeText>\n                    </PerfectCenter>\n                </ContentContainer>\n                <ContentContainer height=\"65vh\" color=\"light_background\">\n                <BodyGrid className=\"content\" col_count={1} col_gap={0} col_min=\"110px\" col_max=\"500px\" style={{ backgroundImage: `url(${main_theme.logo.url.stock})`, backgroundPosition: \"center\", backgroundSize: \"cover\" }}>\n                    <BodyGrid style={{ backgroundColor: main_theme.color.dark_background }} x={3} y={3} spany={3}\n                        col_count={4} col_gap={20} col_min={main_theme.logo.size.small} col_max={main_theme.logo.size.small}>\n\n                        <TextElement x={3} y={2} spanx={7} spany={2} type=\"content\" align=\"center\" size=\"small\">Get In Touch</TextElement>\n                        <LogoElement x={3} y={4} spany={4} imgname=\"web\" size=\"small\"></LogoElement>\n                        <LogoElement x={5} y={4} spany={4} imgname=\"web\" size=\"small\"></LogoElement>\n                        <LogoElement x={7} y={4} spany={4} imgname=\"web\" size=\"small\"></LogoElement>\n                        <LogoElement x={9} y={4} spany={4} imgname=\"web\" size=\"small\"></LogoElement>\n                    </BodyGrid>\n                </BodyGrid>\n                </ContentContainer>\n                <ContentContainer height={main_theme.screen.header_footer} color=\"dark_background\">\n                    <div className=\"content\">\n                        <HeaderFooterGrid>\n                            <LogoElement x={1} y={1} spany={3} imgname=\"main\" size=\"small\"></LogoElement>\n                            <TextElement x={2} y={2} type=\"header_footer\" size=\"small\">©2019 Noah Koontz</TextElement>\n                        </HeaderFooterGrid>\n                    </div>\n                </ContentContainer>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default MainPage;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport MainPage from \"./MainPage\";\n\nReactDOM.render(<MainPage />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}