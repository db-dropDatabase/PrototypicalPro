{"version":3,"sources":["img/LDR_RGB1_0.png","img/react_logo.svg","img/image.PNG","img/proto.png","serviceWorker.ts","Fluid/FluidShaders.ts","Fluid/HSVTools.ts","Fluid/FluidRender.ts","useInsideViewport.ts","Fluid/FluidDraw.ts","FluidGL.tsx","MainPage.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","compileShader","gl","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getShaders","baseVertexShader","VERTEX_SHADER","clearShader","FRAGMENT_SHADER","colorShader","backgroundShader","displayShader","displayBloomShader","displayShadingShader","displayBloomShadingShader","bloomPrefilterShader","bloomBlurShader","bloomFinalShader","splatShader","advectionManualFilteringShader","advectionShader","divergenceShader","curlShader","vorticityShader","pressureShader","gradientSubtractShader","HSVTools","c","r","g","b","i","f","q","t","h","s","v","Math","floor","HSVtoRGB","random","GLProgram","vertexShader","fragmentShader","Object","classCallCheck","this","uniforms","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformCount","ACTIVE_UNIFORMS","uniformName","getActiveUniform","name","getUniformLocation","useProgram","FluidRender","canvas","config","text_url","_this","ext","ditheringTexture","clearProgram","colorProgram","backgroundProgram","displayProgram","displayBloomProgram","displayShadingProgram","displayBloomShadingProgram","bloomPrefilterProgram","bloomBlurProgram","bloomFinalProgram","splatProgram","advectionProgram","divergenceProgram","curlProgram","vorticityProgram","pressureProgram","gradientSubtractProgram","bloomFramebuffers","simWidth","simHeight","dyeWidth","dyeHeight","density","velocity","divergence","curl","pressure","bloom","splatVectorStates","paused","blit","_FluidRender$getWebGL","getWebGLContext","test","navigator","userAgent","SHADING","supportLinearFiltering","BLOOM","_getShaders","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","vertexAttribPointer","FLOAT","enableVertexAttribArray","destination","bindFramebuffer","FRAMEBUFFER","drawElements","TRIANGLES","UNSIGNED_SHORT","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","texImage2D","RGB","UNSIGNED_BYTE","Uint8Array","width","height","attach","id","activeTexture","TEXTURE0","image","Image","onload","src","initFrameBuffers","assign","DEFAULT_CONF","simRes","getResolution","SIM_RESOLUTION","dyeRes","DYE_RESOLUTION","texType","halfFloatTexType","rgba","formatRGBA","rg","formatRG","formatR","filtering","NEAREST","createDoubleFBO","internalFormat","format","resizeDoubleFBO","createFBO","initBloomFramebuffers","res","BLOOM_RESOLUTION","BLOOM_ITERATIONS","fbo","push","resolution","aspectRatio","drawingBufferWidth","drawingBufferHeight","max","round","min","w","param","_this2","CLAMP_TO_EDGE","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","clear","COLOR_BUFFER_BIT","fbo1","fbo2","read","value","write","swap","temp","target","newFBO","bind","uniform1i","uTexture","uniform1f","resizeFBO","dt","disable","BLEND","uniform2f","texelSize","uVelocity","uCurl","CURL","PRESSURE_DISSIPATION","uDivergence","PRESSURE_ITERATIONS","uPressure","dyeTexelSize","velocityId","uSource","dissipation","VELOCITY_DISSIPATION","DENSITY_DISSIPATION","applyBloom","TRANSPARENT","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","bc","BACK_COLOR","uniform4f","color","uBloom","uDithering","scale","getTextureScale","ditherScale","x","y","length","last","knee","BLOOM_THRESHOLD","BLOOM_SOFT_KNEE","curve0","curve1","curve2","uniform3f","curve","threshold","dest","baseTex","intensity","BLOOM_INTENSITY","clientWidth","clientHeight","dx","dy","radius","uTarget","point","SPLAT_RADIUS","amount","generateColor","splat","vector","_this3","console","log","filter","next_splat","pos","vel","size","step","render","pause","halfFloat","params","alpha","depth","stencil","antialias","preserveDrawingBuffer","getContext","isWebGL2","getExtension","clearColor","HALF_FLOAT","HALF_FLOAT_OES","getSupportedFormat","RGBA16F","RGBA","RG16F","RG","R16F","RED","concat","supportRenderTextureFormat","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","COLORFUL","getIsInside","elem","rect","getBoundingClientRect","top","innerHeight","bottom","useInsideViewport","element","insidecallback","_React$useState","React","_React$useState2","slicedToArray","isInside","setIsInside","insideCallbackRef","useEventListener","current","undefined","SplatVector","direction","magnitude","position","speed","splat_density","step_size","num_steps","cur_step","DEFUALT_SIZE","cos","PI","sin","dist","DEFAULT_SPEED","DEFUALT_SPAT_DENSITY","ret","DitherImage","require","PerfectCenter","styledTS","styled","div","_templateObject","FluidGL","_ref","_ref$className","className","_ref$canvaswidth","canvaswidth","_ref$canvasheight","canvasheight","canvas_ref","fluid_ref","animation_ref","frame_count","last_angle","last_hue","animationCallback","update","X_MID","Y_MID","next_angle","next_hue","abs","rad","addVector","requestAnimationFrame","getDefaultConfig","cancelAnimationFrame","setPause","react","ref","reactLogo","stockPhoto","protoMask","main_theme","light_background","dark_background","logo_background","logo_text","font","xlarge","xlarge_num","large","large_num","medium","small","header_footer","content","logo","url","main","cloud","embedded","web","social","stock","screen","content_width","side_pad","top_bot_pad","GlobalStyle","createGlobalStyle","MainPage_templateObject","ContentContainer","_templateObject2","props","theme","_templateObject3","MainText","_templateObject4","ResumeText","_templateObject5","BodyElem","_templateObject6","css","_templateObject7","spany","_templateObject8","_templateObject9","spanx","_templateObject10","LogoElement","_templateObject11","imgname","TextElement","_templateObject12","text_align","align","HeaderFooterGrid","_templateObject13","BodyGrid","_templateObject14","col_gap","col_count","_templateObject15","col_min","col_max","MaskImage","_templateObject16","MainPage","innerWidth","dimension","setDimension","styled_components_browser_esm","src_FluidGL","MainPage_PerfectCenter","style","zIndex","backgroundImage","backgroundPosition","backgroundSize","toString","backgroundColor","ReactDOM","react_default","a","createElement","src_MainPage","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+GCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kHCjBN,SAASC,EAAeC,EAA4BC,EAAcC,GAC9D,IAAMC,EAASH,EAAGI,aAAaH,GAI/B,GAHAD,EAAGK,aAAaF,EAAQD,GACxBF,EAAGD,cAAcI,IAEZH,EAAGM,mBAAmBH,EAAQH,EAAGO,gBAClC,MAAMP,EAAGQ,iBAAiBL,GAE9B,OAAOA,EAkaIM,MA/Zf,SAAoBT,GAEhB,IAAMU,EAAmBX,EAAcC,EAAIA,EAAGW,cAAR,ojBAmBhCC,EAAcb,EAAcC,EAAIA,EAAGa,gBAAR,uRAW3BC,EAAcf,EAAcC,EAAIA,EAAGa,gBAAR,+IAQ3BE,EAAmBhB,EAAcC,EAAIA,EAAGa,gBAAR,mbAehCG,EAAgBjB,EAAcC,EAAIA,EAAGa,gBAAR,6TAY7BI,EAAqBlB,EAAcC,EAAIA,EAAGa,gBAAR,osBAqBlCK,EAAuBnB,EAAcC,EAAIA,EAAGa,gBAAR,27BA2BpCM,EAA4BpB,EAAcC,EAAIA,EAAGa,gBAAR,8zCAoCzCO,EAAuBrB,EAAcC,EAAIA,EAAGa,gBAAR,giBAiBpCQ,EAAkBtB,EAAcC,EAAIA,EAAGa,gBAAR,ohBAmB/BS,EAAmBvB,EAAcC,EAAIA,EAAGa,gBAAR,kkBAoBhCU,EAAcxB,EAAcC,EAAIA,EAAGa,gBAAR,2hBAkB3BW,EAAiCzB,EAAcC,EAAIA,EAAGa,gBAAR,sjCAuKpD,MAAO,CACHH,mBACAE,cACAE,cACAC,mBACAC,gBACAC,qBACAC,uBACAC,4BACAC,uBACAC,kBACAC,mBACAC,cACAE,gBAzJoB1B,EAAcC,EAAIA,EAAGa,gBAAR,6eA0JjCW,iCACAE,iBA3IqB3B,EAAcC,EAAIA,EAAGa,gBAAR,80BA4IlCc,WApHe5B,EAAcC,EAAIA,EAAGa,gBAAR,wnBAqH5Be,gBAlGoB7B,EAAcC,EAAIA,EAAGa,gBAAR,w4BAmGjCgB,eAxEmB9B,EAAcC,EAAIA,EAAGa,gBAAR,whCAyEhCiB,uBA7C2B/B,EAAcC,EAAIA,EAAGa,gBAAR,u4BCvX3BkB,wGACAC,GAAsB,IAE/BC,EAAGC,EAAGC,EAAGC,EAAGC,EAAG5C,EAAG6C,EAAGC,EADlBC,EAAWR,EAAXQ,EAAGC,EAAQT,EAARS,EAAGC,EAAKV,EAALU,EAQb,OAJAjD,EAAIiD,GAAK,EAAID,GACbH,EAAII,GAAK,GAFTL,EAAQ,EAAJG,GADJJ,EAAIO,KAAKC,MAAU,EAAJJ,KAGEC,GACjBF,EAAIG,GAAK,GAAK,EAAIL,GAAKI,GAEfL,EAAI,GACR,KAAK,EAAGH,EAAIS,EAAGR,EAAIK,EAAGJ,EAAI1C,EAAG,MAC7B,KAAK,EAAGwC,EAAIK,EAAGJ,EAAIQ,EAAGP,EAAI1C,EAAG,MAC7B,KAAK,EAAGwC,EAAIxC,EAAGyC,EAAIQ,EAAGP,EAAII,EAAG,MAC7B,KAAK,EAAGN,EAAIxC,EAAGyC,EAAII,EAAGH,EAAIO,EAAG,MAC7B,KAAK,EAAGT,EAAIM,EAAGL,EAAIzC,EAAG0C,EAAIO,EAAG,MAC7B,KAAK,EAAGT,EAAIS,EAAGR,EAAIzC,EAAG0C,EAAIG,EAG9B,MAAO,CACHL,IACAC,IACAC,6CAKJ,IAAIH,EAAID,EAASc,SAAS,CAAEL,EAAGG,KAAKG,SAAUL,EAAG,EAAKC,EAAG,IAIzD,OAHAV,EAAEC,GAAK,IACPD,EAAEE,GAAK,IACPF,EAAEG,GAAK,IACAH,eCXTe,aAIF,SAAAA,EAAc/C,EAA4BgD,EAA2BC,GAQjE,GAR+FC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAAK,KAHnGC,cAGkG,EAAAD,KAFlGE,aAEkG,EAC9FF,KAAKE,QAAUtD,EAAGuD,gBAClBH,KAAKC,SAAW,GAEhBrD,EAAGwD,aAAaJ,KAAKE,QAASN,GAC9BhD,EAAGwD,aAAaJ,KAAKE,QAASL,GAC9BjD,EAAGyD,YAAYL,KAAKE,UAEftD,EAAG0D,oBAAoBN,KAAKE,QAAStD,EAAG2D,aACzC,MAAM3D,EAAG4D,kBAAkBR,KAAKE,SAGpC,IADA,IAAMO,EAAe7D,EAAG0D,oBAAoBN,KAAKE,QAAStD,EAAG8D,iBACpD1B,EAAI,EAAGA,EAAIyB,EAAczB,IAAK,CACnC,IAAM2B,EAAe/D,EAAGgE,iBAAiBZ,KAAKE,QAASlB,GAAuB6B,KAC9Eb,KAAKC,SAASU,GAAe/D,EAAGkE,mBAAmBd,KAAKE,QAASS,qDAInE/D,GACFA,EAAGmE,WAAWf,KAAKE,kBAIrBc,aAmEF,SAAAA,EAAYC,EAA2BC,EAAyCC,GAAkB,IAAAC,EAAApB,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,GAAAhB,KAlEjFiB,YAkEiF,EAAAjB,KAjEjFpD,QAiEiF,EAAAoD,KAhEjFqB,SAgEiF,EAAArB,KA/DjFkB,YA+DiF,EAAAlB,KA9DjFsB,sBA8DiF,EAAAtB,KA5DjFuB,kBA4DiF,EAAAvB,KA3DjFwB,kBA2DiF,EAAAxB,KA1DjFyB,uBA0DiF,EAAAzB,KAzDjF0B,oBAyDiF,EAAA1B,KAxDjF2B,yBAwDiF,EAAA3B,KAvDjF4B,2BAuDiF,EAAA5B,KAtDjF6B,gCAsDiF,EAAA7B,KArDjF8B,2BAqDiF,EAAA9B,KApDjF+B,sBAoDiF,EAAA/B,KAnDjFgC,uBAmDiF,EAAAhC,KAlDjFiC,kBAkDiF,EAAAjC,KAjDjFkC,sBAiDiF,EAAAlC,KAhDjFmC,uBAgDiF,EAAAnC,KA/CjFoC,iBA+CiF,EAAApC,KA9CjFqC,sBA8CiF,EAAArC,KA7CjFsC,qBA6CiF,EAAAtC,KA5CjFuC,6BA4CiF,EAAAvC,KA1C1FwC,kBAAgC,GA0C0DxC,KAzC1FyC,cAyC0F,EAAAzC,KAxC1F0C,eAwC0F,EAAA1C,KAvC1F2C,cAuC0F,EAAA3C,KAtC1F4C,eAsC0F,EAAA5C,KArC1F6C,aAqC0F,EAAA7C,KApC1F8C,cAoC0F,EAAA9C,KAnC1F+C,gBAmC0F,EAAA/C,KAlC1FgD,UAkC0F,EAAAhD,KAjC1FiD,cAiC0F,EAAAjD,KAhC1FkD,WAgC0F,EAAAlD,KA9B1FmD,kBAAwC,GA8BkDnD,KA7B1FoD,QAAkB,EA6BwEpD,KA3BjFqD,UA2BiF,EAC9FrD,KAAKiB,OAASA,EADgF,IAAAqC,EAG1EtC,EAAYuC,gBAAgBtC,GAAxCrE,EAHsF0G,EAGtF1G,GAAIyE,EAHkFiC,EAGlFjC,IACZrB,KAAKpD,GAAKA,EAEVoD,KAAKqB,IAAMA,EACXrB,KAAKkB,OAASA,EAxGX,gBAAgBsC,KAAKC,UAAUC,aA2G9B1D,KAAKkB,OAAOyC,SAAU,GAErB3D,KAAKqB,IAAIuC,yBACV5D,KAAKkB,OAAOyC,SAAU,EACtB3D,KAAKkB,OAAO2C,OAAQ,GAdsE,IAAAC,EAsC1FzG,EAAW2C,KAAKpD,IAnBhBU,EAnB0FwG,EAmB1FxG,iBACAE,EApB0FsG,EAoB1FtG,YACAE,EArB0FoG,EAqB1FpG,YACAC,EAtB0FmG,EAsB1FnG,iBACAC,EAvB0FkG,EAuB1FlG,cACAC,EAxB0FiG,EAwB1FjG,mBACAC,EAzB0FgG,EAyB1FhG,qBACAC,EA1B0F+F,EA0B1F/F,0BACAC,EA3B0F8F,EA2B1F9F,qBACAC,EA5B0F6F,EA4B1F7F,gBACAC,EA7B0F4F,EA6B1F5F,iBACAC,EA9B0F2F,EA8B1F3F,YACAE,EA/B0FyF,EA+B1FzF,gBACAD,EAhC0F0F,EAgC1F1F,+BACAE,EAjC0FwF,EAiC1FxF,iBACAC,EAlC0FuF,EAkC1FvF,WACAC,EAnC0FsF,EAmC1FtF,gBACAC,EApC0FqF,EAoC1FrF,eACAC,EArC0FoF,EAqC1FpF,uBAGJsB,KAAKpD,GAAGmH,WAAW/D,KAAKpD,GAAGoH,aAAchE,KAAKpD,GAAGqH,gBACjDjE,KAAKpD,GAAGsH,WAAWlE,KAAKpD,GAAGoH,aAAc,IAAIG,aAAa,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAKnE,KAAKpD,GAAGwH,aACjGpE,KAAKpD,GAAGmH,WAAW/D,KAAKpD,GAAGyH,qBAAsBrE,KAAKpD,GAAGqH,gBACzDjE,KAAKpD,GAAGsH,WAAWlE,KAAKpD,GAAGyH,qBAAsB,IAAIC,YAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAKtE,KAAKpD,GAAGwH,aAC9FpE,KAAKpD,GAAG2H,oBAAoB,EAAG,EAAGvE,KAAKpD,GAAG4H,OAAO,EAAO,EAAG,GAC3DxE,KAAKpD,GAAG6H,wBAAwB,GAEhCzE,KAAKqD,KAAO,SAACqB,GACTtD,EAAKxE,GAAG+H,gBAAgBvD,EAAKxE,GAAGgI,YAAaF,GAC7CtD,EAAKxE,GAAGiI,aAAazD,EAAKxE,GAAGkI,UAAW,EAAG1D,EAAKxE,GAAGmI,eAAgB,IAIvE,IAAMC,EAAUpI,EAAGqI,gBACnBrI,EAAGsI,YAAYtI,EAAGuI,WAAYH,GAC9BpI,EAAGwI,cAAcxI,EAAGuI,WAAYvI,EAAGyI,mBAAoBzI,EAAG0I,QAC1D1I,EAAGwI,cAAcxI,EAAGuI,WAAYvI,EAAG2I,mBAAoB3I,EAAG0I,QAC1D1I,EAAGwI,cAAcxI,EAAGuI,WAAYvI,EAAG4I,eAAgB5I,EAAG6I,QACtD7I,EAAGwI,cAAcxI,EAAGuI,WAAYvI,EAAG8I,eAAgB9I,EAAG6I,QACtD7I,EAAG+I,WAAW/I,EAAGuI,WAAY,EAAGvI,EAAGgJ,IAAK,EAAG,EAAG,EAAGhJ,EAAGgJ,IAAKhJ,EAAGiJ,cAAe,IAAIC,WAAW,CAAC,IAAK,IAAK,OAErG9F,KAAKsB,iBAAmB,CACpB0D,UACAe,MAAO,EACPC,OAAQ,EACRC,OAAQ,SAACC,GAGL,OAFA9E,EAAKxE,GAAGuJ,cAAc/E,EAAKxE,GAAGwJ,SAAWF,GACzC9E,EAAKxE,GAAGsI,YAAY9D,EAAKxE,GAAGuI,WAAYH,GACjCkB,IAIf,IAAMG,EAAQ,IAAIC,MAClBD,EAAME,OAAS,WACXnF,EAAKE,iBAAiByE,MAAQM,EAAMN,MACpC3E,EAAKE,iBAAiB0E,OAASK,EAAML,OACrC5E,EAAKxE,GAAGsI,YAAY9D,EAAKxE,GAAGuI,WAAYH,GACxC5D,EAAKxE,GAAG+I,WAAWvE,EAAKxE,GAAGuI,WAAY,EAAG/D,EAAKxE,GAAGgJ,IAAKxE,EAAKxE,GAAGgJ,IAAKxE,EAAKxE,GAAGiJ,cAAeQ,IAE/FA,EAAMG,IAAMrF,EAEZnB,KAAKuB,aAA6B,IAAI5B,EAAUK,KAAKpD,GAAIU,EAAkBE,GAC3EwC,KAAKwB,aAA6B,IAAI7B,EAAUK,KAAKpD,GAAIU,EAAkBI,GAC3EsC,KAAKyB,kBAA6B,IAAI9B,EAAUK,KAAKpD,GAAIU,EAAkBK,GAC3EqC,KAAK0B,eAA6B,IAAI/B,EAAUK,KAAKpD,GAAIU,EAAkBM,GAC3EoC,KAAK2B,oBAA6B,IAAIhC,EAAUK,KAAKpD,GAAIU,EAAkBO,GAC3EmC,KAAK4B,sBAA6B,IAAIjC,EAAUK,KAAKpD,GAAIU,EAAkBQ,GAC3EkC,KAAK6B,2BAA6B,IAAIlC,EAAUK,KAAKpD,GAAIU,EAAkBS,GAC3EiC,KAAK8B,sBAA6B,IAAInC,EAAUK,KAAKpD,GAAIU,EAAkBU,GAC3EgC,KAAK+B,iBAA6B,IAAIpC,EAAUK,KAAKpD,GAAIU,EAAkBW,GAC3E+B,KAAKgC,kBAA6B,IAAIrC,EAAUK,KAAKpD,GAAIU,EAAkBY,GAC3E8B,KAAKiC,aAA6B,IAAItC,EAAUK,KAAKpD,GAAIU,EAAkBa,GAC3E6B,KAAKkC,iBAA6B,IAAIvC,EAAUK,KAAKpD,GAAIU,EAAkB+D,EAAIuC,uBAAyBvF,EAAkBD,GAC1H4B,KAAKmC,kBAA6B,IAAIxC,EAAUK,KAAKpD,GAAIU,EAAkBgB,GAC3E0B,KAAKoC,YAA6B,IAAIzC,EAAUK,KAAKpD,GAAIU,EAAkBiB,GAC3EyB,KAAKqC,iBAA6B,IAAI1C,EAAUK,KAAKpD,GAAIU,EAAkBkB,GAC3EwB,KAAKsC,gBAA6B,IAAI3C,EAAUK,KAAKpD,GAAIU,EAAkBmB,GAC3EuB,KAAKuC,wBAA8B,IAAI5C,EAAUK,KAAKpD,GAAIU,EAAkBoB,GAG5EsB,KAAKyG,uFAvGL,OAAO3G,OAAO4G,OAAO,GAAI1F,EAAY2F,0EA2GrC,IAAIC,EAAS5G,KAAK6G,cAAc7G,KAAKkB,OAAO4F,gBACxCC,EAAS/G,KAAK6G,cAAc7G,KAAKkB,OAAO8F,gBAE5ChH,KAAKyC,SAAYmE,EAAOb,MACxB/F,KAAK0C,UAAYkE,EAAOZ,OACxBhG,KAAK2C,SAAYoE,EAAOhB,MACxB/F,KAAK4C,UAAYmE,EAAOf,OAExB,IAAMiB,EAAUjH,KAAKqB,IAAI6F,iBACnBC,EAAUnH,KAAKqB,IAAI+F,WACnBC,EAAUrH,KAAKqB,IAAIiG,SACnBzI,EAAUmB,KAAKqB,IAAIkG,QACnBC,EAAYxH,KAAKqB,IAAIuC,uBAAyB5D,KAAKpD,GAAG0I,OAAStF,KAAKpD,GAAG6K,QAEzD,MAAhBzH,KAAK6C,QACL7C,KAAK6C,QAAU7C,KAAK0H,gBAAgB1H,KAAK2C,SAAU3C,KAAK4C,UAAWuE,EAAKQ,eAAgBR,EAAKS,OAAQX,EAASO,GAE9GxH,KAAK6C,QAAU7C,KAAK6H,gBAAgB7H,KAAK6C,QAAS7C,KAAK2C,SAAU3C,KAAK4C,UAAWuE,EAAKQ,eAAgBR,EAAKS,OAAQX,EAASO,GAE3G,MAAjBxH,KAAK8C,SACL9C,KAAK8C,SAAW9C,KAAK0H,gBAAgB1H,KAAKyC,SAAUzC,KAAK0C,UAAW2E,EAAGM,eAAgBN,EAAGO,OAAQX,EAASO,GAE3GxH,KAAK8C,SAAW9C,KAAK6H,gBAAgB7H,KAAK8C,SAAU9C,KAAKyC,SAAUzC,KAAK0C,UAAW2E,EAAGM,eAAgBN,EAAGO,OAAQX,EAASO,GAE9HxH,KAAK+C,WAAa/C,KAAK8H,UAAgB9H,KAAKyC,SAAUzC,KAAK0C,UAAW7D,EAAE8I,eAAgB9I,EAAE+I,OAAQX,EAASjH,KAAKpD,GAAG6K,SACnHzH,KAAKgD,KAAahD,KAAK8H,UAAgB9H,KAAKyC,SAAUzC,KAAK0C,UAAW7D,EAAE8I,eAAgB9I,EAAE+I,OAAQX,EAASjH,KAAKpD,GAAG6K,SACnHzH,KAAKiD,SAAajD,KAAK0H,gBAAgB1H,KAAKyC,SAAUzC,KAAK0C,UAAW7D,EAAE8I,eAAgB9I,EAAE+I,OAAQX,EAASjH,KAAKpD,GAAG6K,SAEnHzH,KAAK+H,wEAIL,IAAIC,EAAMhI,KAAK6G,cAAc7G,KAAKkB,OAAO+G,kBAEnChB,EAAUjH,KAAKqB,IAAI6F,iBACnBC,EAAOnH,KAAKqB,IAAI+F,WAChBI,EAAYxH,KAAKqB,IAAIuC,uBAAyB5D,KAAKpD,GAAG0I,OAAStF,KAAKpD,GAAG6K,QAE7EzH,KAAKkD,MAAQlD,KAAK8H,UAAUE,EAAIjC,MAAOiC,EAAIhC,OAAQmB,EAAKQ,eAAgBR,EAAKS,OAAQX,EAASO,GAE9FxH,KAAKwC,kBAAoB,GACzB,IAAK,IAAIxD,EAAI,EAAGA,EAAIgB,KAAKkB,OAAOgH,iBAAkBlJ,IAAK,CACnD,IAAI+G,EAAQiC,EAAIjC,OAAU/G,EAAI,EAC1BgH,EAASgC,EAAIhC,QAAWhH,EAAI,EAEhC,GAAI+G,EAAQ,GAAKC,EAAS,EAAG,MAE7B,IAAImC,EAAMnI,KAAK8H,UAAU/B,EAAOC,EAAQmB,EAAKQ,eAAgBR,EAAKS,OAAQX,EAASO,GACnFxH,KAAKwC,kBAAkB4F,KAAKD,0CAIbE,GACnB,IAAIC,EAActI,KAAKpD,GAAG2L,mBAAqBvI,KAAKpD,GAAG4L,oBACnDF,EAAc,IACdA,EAAc,EAAMA,GAExB,IAAIG,EAAMlJ,KAAKmJ,MAAML,EAAaC,GAC9BK,EAAMpJ,KAAKmJ,MAAML,GAErB,OAAIrI,KAAKpD,GAAG2L,mBAAqBvI,KAAKpD,GAAG4L,oBAC9B,CAAEzC,MAAO0C,EAAKzC,OAAQ2C,GAEtB,CAAE5C,MAAO4C,EAAK3C,OAAQyC,qCAGlBG,EAAWxJ,EAAWuI,EAAwBC,EAAgB/K,EAAcgM,GAAe,IAAAC,EAAA9I,KAC1GA,KAAKpD,GAAGuJ,cAAcnG,KAAKpD,GAAGwJ,UAC9B,IAAIpB,EAAUhF,KAAKpD,GAAGqI,gBACtBjF,KAAKpD,GAAGsI,YAAYlF,KAAKpD,GAAGuI,WAAYH,GACxChF,KAAKpD,GAAGwI,cAAcpF,KAAKpD,GAAGuI,WAAYnF,KAAKpD,GAAGyI,mBAAoBwD,GACtE7I,KAAKpD,GAAGwI,cAAcpF,KAAKpD,GAAGuI,WAAYnF,KAAKpD,GAAG2I,mBAAoBsD,GACtE7I,KAAKpD,GAAGwI,cAAcpF,KAAKpD,GAAGuI,WAAYnF,KAAKpD,GAAG4I,eAAgBxF,KAAKpD,GAAGmM,eAC1E/I,KAAKpD,GAAGwI,cAAcpF,KAAKpD,GAAGuI,WAAYnF,KAAKpD,GAAG8I,eAAgB1F,KAAKpD,GAAGmM,eAC1E/I,KAAKpD,GAAG+I,WAAW3F,KAAKpD,GAAGuI,WAAY,EAAGwC,EAAgBiB,EAAGxJ,EAAG,EAAGwI,EAAQ/K,EAAM,MAEjF,IAAIsL,EAAMnI,KAAKpD,GAAGoM,oBAMlB,OALAhJ,KAAKpD,GAAG+H,gBAAgB3E,KAAKpD,GAAGgI,YAAauD,GAC7CnI,KAAKpD,GAAGqM,qBAAqBjJ,KAAKpD,GAAGgI,YAAa5E,KAAKpD,GAAGsM,kBAAmBlJ,KAAKpD,GAAGuI,WAAYH,EAAS,GAC1GhF,KAAKpD,GAAGuM,SAAS,EAAG,EAAGP,EAAGxJ,GAC1BY,KAAKpD,GAAGwM,MAAMpJ,KAAKpD,GAAGyM,kBAEf,CACHrE,QAASA,EACTmD,IAAKA,EACLpC,MAAO6C,EACP5C,OAAQ5G,EACR6G,OAAQ,SAACC,GAGL,OAFA4C,EAAKlM,GAAGuJ,cAAc2C,EAAKlM,GAAGwJ,SAAWF,GACzC4C,EAAKlM,GAAGsI,YAAY4D,EAAKlM,GAAGuI,WAAYH,GACjCkB,4CAKM0C,EAAWxJ,EAAWuI,EAAwBC,EAAgB/K,EAAcgM,GACjG,IAAIS,EAAOtJ,KAAK8H,UAAUc,EAAGxJ,EAAGuI,EAAgBC,EAAQ/K,EAAMgM,GAC1DU,EAAOvJ,KAAK8H,UAAUc,EAAGxJ,EAAGuI,EAAgBC,EAAQ/K,EAAMgM,GAE9D,MAAO,CACHW,WACI,OAAOF,GAEXE,SAAUC,GACNH,EAAOG,GAEXC,YACI,OAAOH,GAEXG,UAAWD,GACPF,EAAOE,GAEXE,KAbG,WAcC,IAAIC,EAAON,EACXA,EAAOC,EACPA,EAAOK,sCAKAC,EAAQjB,EAAWxJ,EAAWuI,EAAwBC,EAAgB/K,EAAcgM,GACnG,IAAIiB,EAAS9J,KAAK8H,UAAUc,EAAGxJ,EAAGuI,EAAgBC,EAAQ/K,EAAMgM,GAKhE,OAJA7I,KAAKuB,aAAawI,KAAK/J,KAAKpD,IAC5BoD,KAAKpD,GAAGoN,UAAUhK,KAAKuB,aAAatB,SAASgK,SAAUJ,EAAO5D,OAAO,IACrEjG,KAAKpD,GAAGsN,UAAUlK,KAAKuB,aAAatB,SAASwJ,MAAO,GACpDzJ,KAAKqD,KAAKyG,EAAO3B,KACV2B,0CAGcD,EAAQjB,EAAWxJ,EAAWuI,EAAwBC,EAAgB/K,EAAcgM,GAGzG,OAFAgB,EAAOL,KAAOxJ,KAAKmK,UAAUN,EAAOL,KAAMZ,EAAGxJ,EAAGuI,EAAgBC,EAAQ/K,EAAMgM,GAC9EgB,EAAOH,MAAQ1J,KAAK8H,UAAUc,EAAGxJ,EAAGuI,EAAgBC,EAAQ/K,EAAMgM,GAC3DgB,+BAGGO,GACVpK,KAAKpD,GAAGyN,QAAQrK,KAAKpD,GAAG0N,OACxBtK,KAAKpD,GAAGuM,SAAS,EAAG,EAAGnJ,KAAKyC,SAAUzC,KAAK0C,WAE3C1C,KAAKoC,YAAY2H,KAAK/J,KAAKpD,IAC3BoD,KAAKpD,GAAG2N,UAAUvK,KAAKoC,YAAYnC,SAASuK,UAAW,EAAMxK,KAAKyC,SAAU,EAAMzC,KAAK0C,WACvF1C,KAAKpD,GAAGoN,UAAUhK,KAAKoC,YAAYnC,SAASwK,UAAWzK,KAAK8C,SAAS0G,KAAKvD,OAAO,IACjFjG,KAAKqD,KAAKrD,KAAKgD,KAAKmF,KAEpBnI,KAAKqC,iBAAiB0H,KAAK/J,KAAKpD,IAChCoD,KAAKpD,GAAG2N,UAAUvK,KAAKqC,iBAAiBpC,SAASuK,UAAW,EAAMxK,KAAKyC,SAAU,EAAMzC,KAAK0C,WAC5F1C,KAAKpD,GAAGoN,UAAUhK,KAAKqC,iBAAiBpC,SAASwK,UAAWzK,KAAK8C,SAAS0G,KAAKvD,OAAO,IACtFjG,KAAKpD,GAAGoN,UAAUhK,KAAKqC,iBAAiBpC,SAASyK,MAAO1K,KAAKgD,KAAKiD,OAAO,IACzEjG,KAAKpD,GAAGsN,UAAUlK,KAAKqC,iBAAiBpC,SAAS+C,KAAMhD,KAAKkB,OAAOyJ,MACnE3K,KAAKpD,GAAGsN,UAAUlK,KAAKqC,iBAAiBpC,SAASmK,GAAIA,GACrDpK,KAAKqD,KAAKrD,KAAK8C,SAAS4G,MAAMvB,KAC9BnI,KAAK8C,SAAS6G,OAEd3J,KAAKmC,kBAAkB4H,KAAK/J,KAAKpD,IACjCoD,KAAKpD,GAAG2N,UAAUvK,KAAKmC,kBAAkBlC,SAASuK,UAAW,EAAMxK,KAAKyC,SAAU,EAAMzC,KAAK0C,WAC7F1C,KAAKpD,GAAGoN,UAAUhK,KAAKmC,kBAAkBlC,SAASwK,UAAWzK,KAAK8C,SAAS0G,KAAKvD,OAAO,IACvFjG,KAAKqD,KAAKrD,KAAK+C,WAAWoF,KAE1BnI,KAAKuB,aAAawI,KAAK/J,KAAKpD,IAC5BoD,KAAKpD,GAAGoN,UAAUhK,KAAKuB,aAAatB,SAASgK,SAAUjK,KAAKiD,SAASuG,KAAKvD,OAAO,IACjFjG,KAAKpD,GAAGsN,UAAUlK,KAAKuB,aAAatB,SAASwJ,MAAOzJ,KAAKkB,OAAO0J,sBAChE5K,KAAKqD,KAAKrD,KAAKiD,SAASyG,MAAMvB,KAC9BnI,KAAKiD,SAAS0G,OAEd3J,KAAKsC,gBAAgByH,KAAK/J,KAAKpD,IAC/BoD,KAAKpD,GAAG2N,UAAUvK,KAAKsC,gBAAgBrC,SAASuK,UAAW,EAAMxK,KAAKyC,SAAU,EAAMzC,KAAK0C,WAC3F1C,KAAKpD,GAAGoN,UAAUhK,KAAKsC,gBAAgBrC,SAAS4K,YAAa7K,KAAK+C,WAAWkD,OAAO,IACpF,IAAK,IAAIjH,EAAI,EAAGA,EAAIgB,KAAKkB,OAAO4J,oBAAqB9L,IACjDgB,KAAKpD,GAAGoN,UAAUhK,KAAKsC,gBAAgBrC,SAAS8K,UAAW/K,KAAKiD,SAASuG,KAAKvD,OAAO,IACrFjG,KAAKqD,KAAKrD,KAAKiD,SAASyG,MAAMvB,KAC9BnI,KAAKiD,SAAS0G,OAGlB3J,KAAKuC,wBAAwBwH,KAAK/J,KAAKpD,IACvCoD,KAAKpD,GAAG2N,UAAUvK,KAAKuC,wBAAwBtC,SAASuK,UAAW,EAAMxK,KAAKyC,SAAU,EAAMzC,KAAK0C,WACnG1C,KAAKpD,GAAGoN,UAAUhK,KAAKuC,wBAAwBtC,SAAS8K,UAAW/K,KAAKiD,SAASuG,KAAKvD,OAAO,IAC7FjG,KAAKpD,GAAGoN,UAAUhK,KAAKuC,wBAAwBtC,SAASwK,UAAWzK,KAAK8C,SAAS0G,KAAKvD,OAAO,IAC7FjG,KAAKqD,KAAKrD,KAAK8C,SAAS4G,MAAMvB,KAC9BnI,KAAK8C,SAAS6G,OAEd3J,KAAKkC,iBAAiB6H,KAAK/J,KAAKpD,IAChCoD,KAAKpD,GAAG2N,UAAUvK,KAAKkC,iBAAiBjC,SAASuK,UAAW,EAAMxK,KAAKyC,SAAU,EAAMzC,KAAK0C,WACvF1C,KAAKqB,IAAIuC,wBACV5D,KAAKpD,GAAG2N,UAAUvK,KAAKkC,iBAAiBjC,SAAS+K,aAAc,EAAMhL,KAAKyC,SAAU,EAAMzC,KAAK0C,WACnG,IAAIuI,EAAajL,KAAK8C,SAAS0G,KAAKvD,OAAO,GAC3CjG,KAAKpD,GAAGoN,UAAUhK,KAAKkC,iBAAiBjC,SAASwK,UAAWQ,GAC5DjL,KAAKpD,GAAGoN,UAAUhK,KAAKkC,iBAAiBjC,SAASiL,QAASD,GAC1DjL,KAAKpD,GAAGsN,UAAUlK,KAAKkC,iBAAiBjC,SAASmK,GAAIA,GACrDpK,KAAKpD,GAAGsN,UAAUlK,KAAKkC,iBAAiBjC,SAASkL,YAAanL,KAAKkB,OAAOkK,sBAC1EpL,KAAKqD,KAAKrD,KAAK8C,SAAS4G,MAAMvB,KAC9BnI,KAAK8C,SAAS6G,OAEd3J,KAAKpD,GAAGuM,SAAS,EAAG,EAAGnJ,KAAK2C,SAAU3C,KAAK4C,WAEtC5C,KAAKqB,IAAIuC,wBACV5D,KAAKpD,GAAG2N,UAAUvK,KAAKkC,iBAAiBjC,SAAS+K,aAAc,EAAMhL,KAAK2C,SAAU,EAAM3C,KAAK4C,WACnG5C,KAAKpD,GAAGoN,UAAUhK,KAAKkC,iBAAiBjC,SAASwK,UAAWzK,KAAK8C,SAAS0G,KAAKvD,OAAO,IACtFjG,KAAKpD,GAAGoN,UAAUhK,KAAKkC,iBAAiBjC,SAASiL,QAASlL,KAAK6C,QAAQ2G,KAAKvD,OAAO,IACnFjG,KAAKpD,GAAGsN,UAAUlK,KAAKkC,iBAAiBjC,SAASkL,YAAanL,KAAKkB,OAAOmK,qBAC1ErL,KAAKqD,KAAKrD,KAAK6C,QAAQ6G,MAAMvB,KAC7BnI,KAAK6C,QAAQ8G,sCAGDE,GACR7J,KAAKkB,OAAO2C,OACZ7D,KAAKsL,WAAWtL,KAAK6C,QAAQ2G,KAAMxJ,KAAKkD,OAE9B,MAAV2G,GAAmB7J,KAAKkB,OAAOqK,YAK/BvL,KAAKpD,GAAGyN,QAAQrK,KAAKpD,GAAG0N,QAJxBtK,KAAKpD,GAAG4O,UAAUxL,KAAKpD,GAAG6O,IAAKzL,KAAKpD,GAAG8O,qBACvC1L,KAAKpD,GAAG+O,OAAO3L,KAAKpD,GAAG0N,QAM3B,IAAIvE,EAAmB,MAAV8D,EAAiB7J,KAAKpD,GAAG2L,mBAAqBvI,KAAK2C,SAC5DqD,EAAmB,MAAV6D,EAAiB7J,KAAKpD,GAAG4L,oBAAsBxI,KAAK4C,UAIjE,GAFA5C,KAAKpD,GAAGuM,SAAS,EAAG,EAAGpD,EAAOC,IAEzBhG,KAAKkB,OAAOqK,YAAa,CAC1BvL,KAAKwB,aAAauI,KAAK/J,KAAKpD,IAC5B,IAAIgP,EAAK5L,KAAKkB,OAAO2K,WACrB7L,KAAKpD,GAAGkP,UAAU9L,KAAKwB,aAAavB,SAAS8L,MAAOH,EAAG/M,EAAI,IAAK+M,EAAG9M,EAAI,IAAK8M,EAAG7M,EAAI,IAAK,GACxFiB,KAAKqD,KAAKwG,GASd,GANc,MAAVA,GAAkB7J,KAAKkB,OAAOqK,cAC9BvL,KAAKyB,kBAAkBsI,KAAK/J,KAAKpD,IACjCoD,KAAKpD,GAAGsN,UAAUlK,KAAKyB,kBAAkBxB,SAASqI,YAAatI,KAAKiB,OAAO8E,MAAQ/F,KAAKiB,OAAO+E,QAC/FhG,KAAKqD,KAAK,OAGVrD,KAAKkB,OAAOyC,QAAS,CACrB,IAAIzD,EAAUF,KAAKkB,OAAO2C,MAAQ7D,KAAK6B,2BAA6B7B,KAAK4B,sBAIzE,GAHA1B,EAAQ6J,KAAK/J,KAAKpD,IAClBoD,KAAKpD,GAAG2N,UAAUrK,EAAQD,SAASuK,UAAW,EAAMzE,EAAO,EAAMC,GACjEhG,KAAKpD,GAAGoN,UAAU9J,EAAQD,SAASgK,SAAUjK,KAAK6C,QAAQ2G,KAAKvD,OAAO,IAClEjG,KAAKkB,OAAO2C,MAAO,CACnB7D,KAAKpD,GAAGoN,UAAU9J,EAAQD,SAAS+L,OAAQhM,KAAKkD,MAAM+C,OAAO,IAC7DjG,KAAKpD,GAAGoN,UAAU9J,EAAQD,SAASgM,WAAYjM,KAAKsB,iBAAiB2E,OAAO,IAC5E,IAAIiG,EAAQlL,EAAYmL,gBAAgBnM,KAAKsB,iBAAkByE,EAAOC,GACtEhG,KAAKpD,GAAG2N,UAAUrK,EAAQD,SAASmM,YAAaF,EAAMG,EAAGH,EAAMI,QAGlE,CACD,IAAIpM,EAAUF,KAAKkB,OAAO2C,MAAQ7D,KAAK2B,oBAAsB3B,KAAK0B,eAGlE,GAFAxB,EAAQ6J,KAAK/J,KAAKpD,IAClBoD,KAAKpD,GAAGoN,UAAU9J,EAAQD,SAASgK,SAAUjK,KAAK6C,QAAQ2G,KAAKvD,OAAO,IAClEjG,KAAKkB,OAAO2C,MAAO,CACnB7D,KAAKpD,GAAGoN,UAAU9J,EAAQD,SAAS+L,OAAQhM,KAAKkD,MAAM+C,OAAO,IAC7DjG,KAAKpD,GAAGoN,UAAU9J,EAAQD,SAASgM,WAAYjM,KAAKsB,iBAAiB2E,OAAO,IAC5E,IAAIiG,EAAQlL,EAAYmL,gBAAgBnM,KAAKsB,iBAAkByE,EAAOC,GACtEhG,KAAKpD,GAAG2N,UAAUrK,EAAQD,SAASmM,YAAaF,EAAMG,EAAGH,EAAMI,IAIvEtM,KAAKqD,KAAKwG,sCAGM/M,EAAQ4H,GACxB,KAAI1E,KAAKwC,kBAAkB+J,OAAS,GAApC,CAGA,IAAIC,EAAO9H,EAEX1E,KAAKpD,GAAGyN,QAAQrK,KAAKpD,GAAG0N,OACxBtK,KAAK8B,sBAAsBiI,KAAK/J,KAAKpD,IACrC,IAAI6P,EAAOzM,KAAKkB,OAAOwL,gBAAkB1M,KAAKkB,OAAOyL,gBAAkB,KACnEC,EAAS5M,KAAKkB,OAAOwL,gBAAkBD,EACvCI,EAAgB,EAAPJ,EACTK,EAAS,IAAOL,EACpBzM,KAAKpD,GAAGmQ,UAAU/M,KAAK8B,sBAAsB7B,SAAS+M,MAAOJ,EAAQC,EAAQC,GAC7E9M,KAAKpD,GAAGsN,UAAUlK,KAAK8B,sBAAsB7B,SAASgN,UAAWjN,KAAKkB,OAAOwL,iBAC7E1M,KAAKpD,GAAGoN,UAAUhK,KAAK8B,sBAAsB7B,SAASgK,SAAUnN,EAAOmJ,OAAO,IAC9EjG,KAAKpD,GAAGuM,SAAS,EAAG,EAAGqD,EAAKzG,MAAOyG,EAAKxG,QACxChG,KAAKqD,KAAKmJ,EAAKrE,KAEfnI,KAAK+B,iBAAiBgI,KAAK/J,KAAKpD,IAChC,IAAK,IAAIoC,EAAI,EAAGA,EAAIgB,KAAKwC,kBAAkB+J,OAAQvN,IAAK,CACpD,IAAIkO,EAAOlN,KAAKwC,kBAAkBxD,GAClCgB,KAAKpD,GAAG2N,UAAUvK,KAAK+B,iBAAiB9B,SAASuK,UAAW,EAAMgC,EAAKzG,MAAO,EAAMyG,EAAKxG,QACzFhG,KAAKpD,GAAGoN,UAAUhK,KAAK+B,iBAAiB9B,SAASgK,SAAUuC,EAAKvG,OAAO,IACvEjG,KAAKpD,GAAGuM,SAAS,EAAG,EAAG+D,EAAKnH,MAAOmH,EAAKlH,QACxChG,KAAKqD,KAAK6J,EAAK/E,KACfqE,EAAOU,EAGXlN,KAAKpD,GAAG4O,UAAUxL,KAAKpD,GAAG6O,IAAKzL,KAAKpD,GAAG6O,KACvCzL,KAAKpD,GAAG+O,OAAO3L,KAAKpD,GAAG0N,OAEvB,IAAK,IAAItL,EAAIgB,KAAKwC,kBAAkB+J,OAAS,EAAGvN,GAAK,EAAGA,IAAK,CACzD,IAAImO,EAAUnN,KAAKwC,kBAAkBxD,GACrCgB,KAAKpD,GAAG2N,UAAUvK,KAAK+B,iBAAiB9B,SAASuK,UAAW,EAAMgC,EAAKzG,MAAO,EAAMyG,EAAKxG,QACzFhG,KAAKpD,GAAGoN,UAAUhK,KAAK+B,iBAAiB9B,SAASgK,SAAUuC,EAAKvG,OAAO,IACvEjG,KAAKpD,GAAGuM,SAAS,EAAG,EAAGgE,EAAQpH,MAAOoH,EAAQnH,QAC9ChG,KAAKqD,KAAK8J,EAAQhF,KAClBqE,EAAOW,EAGXnN,KAAKpD,GAAGyN,QAAQrK,KAAKpD,GAAG0N,OACxBtK,KAAKgC,kBAAkB+H,KAAK/J,KAAKpD,IACjCoD,KAAKpD,GAAG2N,UAAUvK,KAAKgC,kBAAkB/B,SAASuK,UAAW,EAAMgC,EAAKzG,MAAO,EAAMyG,EAAKxG,QAC1FhG,KAAKpD,GAAGoN,UAAUhK,KAAKgC,kBAAkB/B,SAASgK,SAAUuC,EAAKvG,OAAO,IACxEjG,KAAKpD,GAAGsN,UAAUlK,KAAKgC,kBAAkB/B,SAASmN,UAAWpN,KAAKkB,OAAOmM,iBACzErN,KAAKpD,GAAGuM,SAAS,EAAG,EAAGzE,EAAYqB,MAAOrB,EAAYsB,QACtDhG,KAAKqD,KAAKqB,EAAYyD,kDAIlBnI,KAAKiB,OAAO8E,QAAU/F,KAAKiB,OAAOqM,aAAetN,KAAKiB,OAAO+E,SAAWhG,KAAKiB,OAAOsM,eACpFvN,KAAKiB,OAAO8E,MAAQ/F,KAAKiB,OAAOqM,YAChCtN,KAAKiB,OAAO+E,OAAShG,KAAKiB,OAAOsM,aACjCvN,KAAKyG,kDAuGN4F,EAAWC,EAAWkB,EAAYC,EAAY1B,EAA4C2B,GAC7F1N,KAAKpD,GAAGuM,SAAS,EAAG,EAAGnJ,KAAKyC,SAAUzC,KAAK0C,WAC3C1C,KAAKiC,aAAa8H,KAAK/J,KAAKpD,IAC5BoD,KAAKpD,GAAGoN,UAAUhK,KAAKiC,aAAahC,SAAS0N,QAAS3N,KAAK8C,SAAS0G,KAAKvD,OAAO,IAChFjG,KAAKpD,GAAGsN,UAAUlK,KAAKiC,aAAahC,SAASqI,YAAatI,KAAKiB,OAAO8E,MAAQ/F,KAAKiB,OAAO+E,QAC1FhG,KAAKpD,GAAG2N,UAAUvK,KAAKiC,aAAahC,SAAS2N,MAAOvB,EAAIrM,KAAKiB,OAAO8E,MAAO,EAAMuG,EAAItM,KAAKiB,OAAO+E,QACjGhG,KAAKpD,GAAGmQ,UAAU/M,KAAKiC,aAAahC,SAAS8L,MAAOyB,GAAKC,EAAI,GAC7DzN,KAAKpD,GAAGsN,UAAUlK,KAAKiC,aAAahC,SAASyN,QAASA,GAAU1N,KAAKkB,OAAO2M,cAAgB,KAC5F7N,KAAKqD,KAAKrD,KAAK8C,SAAS4G,MAAMvB,KAC9BnI,KAAK8C,SAAS6G,OAEd3J,KAAKpD,GAAGuM,SAAS,EAAG,EAAGnJ,KAAK2C,SAAU3C,KAAK4C,WAC3C5C,KAAKpD,GAAGoN,UAAUhK,KAAKiC,aAAahC,SAAS0N,QAAS3N,KAAK6C,QAAQ2G,KAAKvD,OAAO,IAC/EjG,KAAKpD,GAAGmQ,UAAU/M,KAAKiC,aAAahC,SAAS8L,MAAOA,EAAMlN,EAAGkN,EAAMjN,EAAGiN,EAAMhN,GAC5EiB,KAAKqD,KAAKrD,KAAK6C,QAAQ6G,MAAMvB,KAC7BnI,KAAK6C,QAAQ8G,4CAGHmE,GACV,IAAK,IAAI9O,EAAI,EAAGA,EAAI8O,EAAQ9O,IAAK,CAC7B,IAAM+M,EAAQpN,EAASoP,gBACvBhC,EAAMlN,GAAK,GACXkN,EAAMjN,GAAK,GACXiN,EAAMhN,GAAK,GACX,IAAMsN,EAAIrM,KAAKiB,OAAO8E,MAAQxG,KAAKG,SAC7B4M,EAAItM,KAAKiB,OAAO+E,OAASzG,KAAKG,SAC9B8N,EAAK,KAAQjO,KAAKG,SAAW,IAC7B+N,EAAK,KAAQlO,KAAKG,SAAW,IACnCM,KAAKgO,MAAM3B,EAAGC,EAAGkB,EAAIC,EAAI1B,sCAIvBkC,GACNjO,KAAKmD,kBAAkBiF,KAAK6F,kCAGzB7D,GAAY,IAAA8D,EAAAlO,KACqB,IAAhCA,KAAKsB,iBAAiByE,MAAaoI,QAAQC,IAAI,iDACzCpO,KAAKoD,SAEXpD,KAAKmD,kBAAoBnD,KAAKmD,kBAAkBkL,OAAO,SAAChP,GACpD,IAAMiP,EAAajP,EAAEiP,aACrB,OAAmB,OAAfA,IACJJ,EAAKF,MAAMM,EAAWC,IAAI,GAAID,EAAWC,IAAI,GAAID,EAAWE,IAAI,GAAIF,EAAWE,IAAI,GAAIF,EAAWvC,MAAOuC,EAAWG,OAC7G,KAGXzO,KAAK0O,KAAKtE,GAEVpK,KAAK2O,OAAO,wCAIXC,GACL5O,KAAKoD,OAASwL,4CAzJc5J,EAASe,EAAOC,GAC5C,MAAO,CACHqG,EAAGtG,EAAQf,EAAQe,MACnBuG,EAAGtG,EAAShB,EAAQgB,gDAII/E,GAC5B,IAOI4N,EACAjL,EAREkL,EAAS,CAAEC,OAAO,EAAMC,OAAO,EAAOC,SAAS,EAAOC,WAAW,EAAOC,uBAAuB,GAEjGvS,EAA6BqE,EAAOmO,WAAW,SAAUN,GACvDO,IAAazS,EACdyS,IACDzS,EAAMqE,EAAOmO,WAAW,QAASN,IAAW7N,EAAOmO,WAAW,qBAAsBN,IAIpFO,GACAzS,EAAG0S,aAAa,0BAChB1L,EAAyBhH,EAAG0S,aAAa,8BAEzCT,EAAYjS,EAAG0S,aAAa,0BAC5B1L,EAAyBhH,EAAG0S,aAAa,kCAG7C1S,EAAG2S,WAAW,EAAK,EAAK,EAAK,GAE7B,IACInI,EACAE,EACAC,EAHEL,EAAmBmI,EAAWzS,EAAG4S,WAAaX,EAAUY,eAuB9D,OAlBIJ,GACAjI,EAAapG,EAAY0O,mBAAmB9S,EAAIA,EAAG+S,QAAS/S,EAAGgT,KAAM1I,GACrEI,EAAWtG,EAAY0O,mBAAmB9S,EAAIA,EAAGiT,MAAOjT,EAAGkT,GAAI5I,GAC/DK,EAAUvG,EAAY0O,mBAAmB9S,EAAIA,EAAGmT,KAAMnT,EAAGoT,IAAK9I,KAG9DE,EAAapG,EAAY0O,mBAAmB9S,EAAIA,EAAGgT,KAAMhT,EAAGgT,KAAM1I,GAClEI,EAAWtG,EAAY0O,mBAAmB9S,EAAIA,EAAGgT,KAAMhT,EAAGgT,KAAM1I,GAChEK,EAAUvG,EAAY0O,mBAAmB9S,EAAIA,EAAGgT,KAAMhT,EAAGgT,KAAM1I,IAGjD,MAAdE,EAEA+G,QAAQC,IAAR,GAAA6B,OAAeZ,EAAW,SAAW,QAArC,mBAGAlB,QAAQC,IAAR,GAAA6B,OAAeZ,EAAW,SAAW,QAArC,eAEG,CACHzS,KACAyE,IAAK,CACD+F,aACAE,WACAC,UACAL,mBACAtD,sEAKuBhH,EAAI+K,EAAgBC,EAAQ/K,GAC3D,IAAKmE,EAAYkP,2BAA2BtT,EAAI+K,EAAgBC,EAAQ/K,GACpE,OAAQ8K,GACJ,KAAK/K,EAAGmT,KACJ,OAAO/O,EAAY0O,mBAAmB9S,EAAIA,EAAGiT,MAAOjT,EAAGkT,GAAIjT,GAC/D,KAAKD,EAAGiT,MACJ,OAAO7O,EAAY0O,mBAAmB9S,EAAIA,EAAG+S,QAAS/S,EAAGgT,KAAM/S,GACnE,QACI,OAAO,KAInB,MAAO,CACH8K,iBACAC,6DAImChL,EAA4B+K,EAAgBC,EAAQ/K,GAC3F,IAAImI,EAAUpI,EAAGqI,gBACjBrI,EAAGsI,YAAYtI,EAAGuI,WAAYH,GAC9BpI,EAAGwI,cAAcxI,EAAGuI,WAAYvI,EAAGyI,mBAAoBzI,EAAG6K,SAC1D7K,EAAGwI,cAAcxI,EAAGuI,WAAYvI,EAAG2I,mBAAoB3I,EAAG6K,SAC1D7K,EAAGwI,cAAcxI,EAAGuI,WAAYvI,EAAG4I,eAAgB5I,EAAGmM,eACtDnM,EAAGwI,cAAcxI,EAAGuI,WAAYvI,EAAG8I,eAAgB9I,EAAGmM,eACtDnM,EAAG+I,WAAW/I,EAAGuI,WAAY,EAAGwC,EAAgB,EAAG,EAAG,EAAGC,EAAQ/K,EAAM,MAEvE,IAAIsL,EAAMvL,EAAGoM,oBAKb,OAJApM,EAAG+H,gBAAgB/H,EAAGgI,YAAauD,GACnCvL,EAAGqM,qBAAqBrM,EAAGgI,YAAahI,EAAGsM,kBAAmBtM,EAAGuI,WAAYH,EAAS,GAEvEpI,EAAGuT,uBAAuBvT,EAAGgI,eAC7BhI,EAAGwT,8BAtkBpBpP,EA0CsB2F,aAAe,CACnCG,eAAgB,IAChBE,eAAgB,IAChBqE,oBAAqB,IACrBD,qBAAsB,IACtBR,qBAAsB,GACtBE,oBAAqB,GACrBH,KAAM,GACNkD,aAAc,GACdlK,SAAS,EACT0M,UAAU,EACVxE,WAAY,CAAEhN,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC7BwM,aAAa,EACb1H,OAAO,EACPqE,iBAAkB,EAClBD,iBAAkB,IAClBoF,gBAAiB,GACjBX,gBAAiB,GACjBC,gBAAiB,IAykBV3L,eChrBf,SAASsP,EAAYC,GACjB,IAAMC,EAAOD,EAAKE,wBAClB,OAAQD,EAAKE,KAAO,GAAKF,EAAKE,KAAOnU,OAAOoU,aAC5BH,EAAKI,OAAS,GAAKJ,EAAKI,QAAUrU,OAAOoU,YAG7D,IAyBeE,EAzBqH,SAACC,EAASC,GAAmB,IAAAC,EAC7HC,WAA+B,MAD8FC,EAAApR,OAAAqR,EAAA,EAAArR,CAAAkR,EAAA,GACtJI,EADsJF,EAAA,GAC5IG,EAD4IH,EAAA,GAEvJI,EAAoBL,SAAkC,MAE5DM,YAAiB,SAAU,WACnBT,EAAQU,SAASH,EAAYf,EAAYQ,EAAQU,YAGzDP,YAAgB,WACZ,GAAIH,EAAQU,QAWR,OATiB,OAAbJ,EAAmBC,EAAYf,EAAYQ,EAAQU,UAE9CJ,EAAUE,EAAkBE,QAAUT,KAAoB,KAE1DO,EAAkBE,UACvBF,EAAkBE,UAClBF,EAAkBE,QAAU,MAGzBF,EAAkBE,cAAWC,GAEzC,CAACL,EAAUL,EAAgBD,KCjCbY,aAcjB,SAAAA,EAAYC,EAAmBC,EAAmBC,EAA4B9F,EAA0B0C,EAAeqD,EAAgBC,GAAyBjS,OAAAC,EAAA,EAAAD,CAAAE,KAAA0R,GAAA1R,KARvJgS,eAQsJ,EAAAhS,KAPtJiS,eAOsJ,EAAAjS,KANtJ8R,WAMsJ,EAAA9R,KALtJuO,SAKsJ,EAAAvO,KAJtJ+L,WAIsJ,EAAA/L,KAHtJyO,UAGsJ,EAAAzO,KAFvJkS,cAEuJ,EAC3JlS,KAAKuO,IAAMsD,EACX7R,KAAK+L,MAAQA,EACb/L,KAAKyO,KAAOA,GAAQiD,EAAYS,aAChCnS,KAAKkS,SAAW,EAChB,IAAME,EAAM7S,KAAK6S,IAAK7S,KAAK8S,GAAK,IAASV,GACnCW,EAAM/S,KAAK+S,IAAK/S,KAAK8S,GAAK,IAASV,GAEnCY,EAAO,CAAChT,KAAKC,MAAMoS,EAAYQ,GAAM7S,KAAKC,MAAMoS,EAAYU,IAElER,EAAQA,GAASJ,EAAYc,cAC7BxS,KAAK8R,MAAQ,CAACvS,KAAKC,MAAMsS,EAAQM,GAAM7S,KAAKC,MAAMsS,EAAQQ,IAE1DP,EAAgBA,GAAiBL,EAAYe,qBAC7CzS,KAAKiS,UAAYL,EAAYG,EAAgB,EAC7C/R,KAAKgS,UAAY,CAACzS,KAAKC,MAAM+S,EAAK,GAAKvS,KAAKiS,WAAY1S,KAAKC,MAAM+S,EAAK,GAAKvS,KAAKiS,qEAKlF,GAAIjS,KAAKkS,WAAalS,KAAKiS,UAAW,OAAO,KAE7C,IAAMS,EAAM,CACRnE,IAAK,CACDvO,KAAKuO,IAAI,GAAKvO,KAAKgS,UAAU,GAAKhS,KAAKkS,SACvClS,KAAKuO,IAAI,GAAKvO,KAAKgS,UAAU,GAAKhS,KAAKkS,UAE3C1D,IAAKxO,KAAK8R,MACV/F,MAAO/L,KAAK+L,MACZ0C,KAAMzO,KAAKyO,MAGf,OADAzO,KAAKkS,WACEQ,2LA9CMhB,EACOc,cAAgB,IADvBd,EAEOe,qBAAuB,GAF9Bf,EAGOS,aAAe,GCE3C,IAAMQ,EAAcC,EAAQ,IAQtBC,EAAgBC,IAASC,IAAOC,IAAhBF,CAAHG,KA8FJC,EAvF6F,SAAAC,GAA8D,IAAAC,EAAAD,EAA3DE,iBAA2D,IAAAD,EAA/C,GAA+CA,EAAAE,EAAAH,EAA3CI,mBAA2C,IAAAD,EAA7B,IAA6BA,EAAAE,EAAAL,EAAxBM,oBAAwB,IAAAD,EAAT,IAASA,EAChKE,EAAazC,SAAuC,MACpD0C,EAAY1C,SAAiC,MAC7C2C,EAAgB3C,SAAqB,GACrC4C,EAAc5C,SAAqB,IACnC6C,EAAa7C,SAA4B,MACzC8C,EAAW9C,SAA4B,MAEvC+C,EAAoB/C,cAAkB,WACxC,GAAI0C,EAAUnC,SAAWkC,EAAWlC,QAAS,CACzCmC,EAAUnC,QAAQyC,OAAO,MACK,QAAxBJ,EAAYrC,UACdqC,EAAYrC,QAAU,GAE1B,IAKM0C,EAAQ3U,KAAKmJ,MAAMgL,EAAWlC,QAAQzL,MAAQ,GAC9CoO,EAAQ5U,KAAKmJ,MAAMgL,EAAWlC,QAAQxL,OAAS,GACtD,GAA4B,IAAxB6N,EAAYrC,SAAiBqC,EAAYrC,QAAU,KAAO,EAAG,CAC5D,IAAI4C,EAMAC,EAJJ,GACID,EAA6B,IAAhB7U,KAAKG,eACU,OAAvBoU,EAAWtC,SAAoBjS,KAAK+U,IAAIF,EAAaN,EAAWtC,SAT3D,IAYd,GACI6C,EAAW9U,KAAKG,eACU,OAArBqU,EAASvC,SAAoBjS,KAAK+U,IAAID,EAAWN,EAASvC,SAbrD,KAedsC,EAAWtC,QAAU4C,EACrBL,EAASvC,QAAU6C,EAEnB,IAAME,EAAMH,GAAc7U,KAAK8S,GAAK,KACpCsB,EAAUnC,QAAQgD,UAAU,IAAI9C,EAC5B0C,EAAa,IAvBH,IAyBV,CAxBgB,IAwBf7U,KAAK6S,IAAImC,GAAyBL,EAxBnB,IAwB0B3U,KAAK+S,IAAIiC,GAAyBJ,GAC5ExV,EAASc,SAAS,CAAEL,EAAGiV,EAAUhV,EAAG,EAAKC,EAAG,IA3BvC,KA8BbsU,EAAcpC,QAAUiD,sBAAsBT,KAEnD,CAACN,EAAYC,EAAWC,EAAeC,EAAaC,EAAYC,IAkCnE,OAhCA9C,YAAgB,WACZ,GAAIyC,EAAWlC,QAAS,CAEpB,IAAMtQ,EAASF,EAAY0T,mBAc3B,OAbAxT,EAAO2C,OAAQ,EACf3C,EAAOyC,SAAU,EACjBzC,EAAOmK,oBAAsB,IAC7BnK,EAAO4F,eAAiB,IACxB5F,EAAO8F,eAAiB,KAIxB2M,EAAUnC,QAAU,IAAIxQ,EAAY0S,EAAWlC,QAAStQ,EAAQyR,GAChExE,QAAQC,IAAI,eAEZ4F,IAEO,WACHW,qBAAqBf,EAAcpC,SACnCmC,EAAUnC,QAAU,QAG7B,CAACkC,EAAYC,EAAWK,IAE3BnD,EAAkB6C,EAAY,WAC1B,GAAIC,EAAUnC,QAGV,OAFAmC,EAAUnC,QAAQoD,UAAS,GAC3BzG,QAAQC,IAAI,WACL,kBAAMuF,EAAUnC,SAAWmC,EAAUnC,QAAQoD,UAAS,MAKjEC,EAAA,cAAChC,EAAD,CAAeQ,UAAWA,QAAa5B,GACnCoD,EAAA,wBAAQC,IAAKpB,EAAY3N,MAAOwN,EAAavN,OAAQyN,qvGCnGjE,IAAMsB,EAAYnC,EAAQ,IACpBoC,EAAapC,EAAQ,IACrBqC,EAAYrC,EAAQ,IAUpBsC,EAAa,CACfnJ,MAAO,CAIHoJ,iBAAkB,UAClBC,gBAAiB,UACjBC,gBAAiB,UACjBC,UAAW,WAEfC,KAAM,CACF9G,KAAM,CACF+G,OAAQ,OACRC,WAAY,IACZC,MAAO,QACPC,UAAW,GACXC,OAAQ,QACRC,MAAO,OAEXhZ,KAAM,CACFiZ,cAAe,0BACfC,QAAS,wBAEbhK,MAAO,CACH+J,cAAe,QACfC,QAAS,YAGjBC,KAAM,CACFvH,KAAM,CACFoH,MAAO,OACPD,OAAQ,SACRF,MAAO,UAEXO,IAAK,CACDC,KAAMnB,EACNoB,MAAOpB,EACPqB,SAAUrB,EACVsB,IAAKtB,EACLuB,OAAQvB,EACRwB,MAAOvB,IAGfwB,OAAQ,CACJC,cAAe,SACfC,SAAU,OACVC,YAAa,OACbb,cAAe,SAIjBc,EAAcC,YAAHC,KAMXC,EAAmBjE,IAAsEC,IAAOC,IAA7EF,CAAHkE,IAGQ,SAAAC,GAAK,OAAIA,EAAMC,MAAMV,OAAOG,aAEzB,SAAAM,GAAK,OAAIA,EAAMC,MAAMV,OAAOG,aAC7B,SAAAM,GAAK,OAAIA,EAAMC,MAAMV,OAAOE,UACrB,SAAAO,GAAK,OAAIA,EAAMC,MAAMV,OAAOC,eACjC,SAAAQ,GAAK,OAAIA,EAAMC,MAAMV,OAAOE,UAGrC,SAAAO,GAAK,OAAIA,EAAMlL,MAAQkL,EAAMC,MAAMnL,MAAMkL,EAAMlL,OAASkL,EAAMC,MAAMnL,MAAMoJ,kBAIhF,SAAA8B,GAAK,OAAIA,EAAMjR,SAS5B6M,EAAgBC,IAAuCC,IAAOC,IAA9CF,CAAHqE,KAObC,EAAWtE,IAAuCC,IAAOC,IAA9CF,CAAHuE,IACM,SAAAJ,GAAK,OAAIA,EAAMC,MAAM3B,KAAK1Y,KAAKkZ,SAEjC,SAAAkB,GAAK,OAAIA,EAAMC,MAAM3B,KAAK9G,KAAK+G,SAG3C8B,EAAaxE,IAAuCC,IAAOC,IAA9CF,CAAHyE,IACI,SAAAN,GAAK,OAAIA,EAAMC,MAAM3B,KAAK1Y,KAAKkZ,SAEjC,SAAAkB,GAAK,OAAIA,EAAMC,MAAM3B,KAAK9G,KAAKiH,OACnC,SAAAuB,GAAK,OAAIA,EAAMC,MAAM3B,KAAKxJ,MAAMgK,UAMxCyB,EAAW1E,IAA+FC,IAAOC,IAAtGF,CAAH2E,IACP,SAAAR,GAAK,OAAIA,EAAM5K,EAAIqL,YAAVC,IAAoC,SAAAV,GAAK,OAAIA,EAAM3K,GAAc,SAAA2K,GAAK,OAAIA,EAAMW,MAAQX,EAAMW,MAAQ,IAAQF,YAA9GG,MACT,SAAAZ,GAAK,OAAIA,EAAM3K,EAAIoL,YAAVI,IAAuC,SAAAb,GAAK,OAAIA,EAAM5K,GAAc,SAAA4K,GAAK,OAAIA,EAAMc,MAAQd,EAAMc,MAAQ,IAAQL,YAAjHM,OAGVC,GAAcnF,IAAsEC,YAAOyE,GAA7E1E,CAAHoF,IACC,SAAAjB,GAAK,OAAIA,EAAMC,MAAMlB,KAAKvH,KAAKwI,EAAMxI,OACxC,SAAAwI,GAAK,OAAIA,EAAMC,MAAMlB,KAAKvH,KAAKwI,EAAMxI,OACpB,SAAAwI,GAAK,OAAIA,EAAMC,MAAMlB,KAAKC,IAAIgB,EAAMkB,UAC3C,SAAAlB,GAAK,OAAIA,EAAMC,MAAMnL,MAAMsJ,kBAQ9C+C,GAActF,IAAwGC,YAAOyE,GAA/G1E,CAAHuF,IACG,SAAApB,GAAK,OAAIA,EAAMC,MAAM3B,KAAK1Y,KAAKoa,EAAMpa,OACvC,SAAAoa,GAAK,OAAIA,EAAMC,MAAM3B,KAAK9G,KAAKwI,EAAMxI,OACzC,SAAAwI,GAAK,OAAIA,EAAMC,MAAM3B,KAAKxJ,MAAMkL,EAAMpa,OACjC,SAAAoa,GAAK,OAAIA,EAAMqB,WAAarB,EAAMqB,WAAa,UAC/C,SAAArB,GAAK,OAAIA,EAAMsB,MAAQtB,EAAMsB,MAAQ,UAIlDC,GAAmB1F,IAAuCC,YAAOyE,GAA9C1E,CAAH2F,IAEP,SAAAxB,GAAK,OAAIA,EAAMC,MAAMV,OAAOV,eAEF,SAAAmB,GAAK,OAAIA,EAAMC,MAAMlB,KAAKvH,KAAKoH,QAMlE6C,GAAW5F,IAA6GC,YAAOyE,GAApH1E,CAAH6F,IAKO,SAAA1B,GAAK,OAAIA,EAAM2B,QAAU,GACpC,SAAA3B,GAAK,OAAIA,EAAM4B,UAAY,GAAKnB,YAAvBoB,IACG,SAAA7B,GAAK,OAAIA,EAAM4B,UAAY,GAChB,SAAA5B,GAAK,OAAIA,EAAM8B,SAAc,SAAA9B,GAAK,OAAIA,EAAM+B,SACzC,SAAA/B,GAAK,OAAIA,EAAM2B,WAEtB,SAAA3B,GAAK,OAAIA,EAAM8B,SAAc,SAAA9B,GAAK,OAAIA,EAAM+B,SACzC,SAAA/B,GAAK,OAAIA,EAAM2B,QAAU,IAInDK,GAAYnG,IAAsDC,IAAOC,IAA7DF,CAAHoG,IACc,SAAAjC,GAAK,OAAIA,EAAM5Q,QAyF7B8S,GAnF2B,WAAM,IAAAnI,EAEVC,WAAuB1R,KAAKoJ,IAAIpM,OAAO6c,WAAiC,GAArB7c,OAAOoU,cAFhDO,EAAApR,OAAAqR,EAAA,EAAArR,CAAAkR,EAAA,GAErCqI,EAFqCnI,EAAA,GAE1BoI,EAF0BpI,EAAA,GAQ5C,OAJAK,YAAiB,SAAU,WACvB+H,EAAa/Z,KAAKoJ,IAAIpM,OAAO6c,WAAiC,GAArB7c,OAAOoU,gBAIhDkE,EAAA,cAAC0E,EAAA,EAAD,CAAerC,MAAOhC,GAClBL,EAAA,yBACIA,EAAA,cAAC+B,EAAD,MACA/B,EAAA,cAACkC,EAAD,CAAkB/Q,OAAO,OAAO+F,MAAM,oBAClC8I,EAAA,cAAC2E,EAAD,CAAWnG,UAAU,OAAOE,YAAa8F,EAAW5F,aAAc4F,IAClExE,EAAA,cAACoE,GAAD,CAAW5F,UAAU,OAAOhN,MAAO4O,IACnCJ,EAAA,cAAC4E,EAAD,CAAepG,UAAU,WACrBwB,EAAA,cAACuC,EAAD,qBAAwB,IAAxB,IAA8B,IAA9B,OAEJvC,EAAA,qBAAKxB,UAAU,UAAUqG,MAAO,CAAEC,OAAQ,MACtC9E,EAAA,cAAC2D,GAAD,KAEI3D,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGzP,KAAK,gBAAgB4R,KAAK,SAAnD,UACAoG,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGzP,KAAK,gBAAgB4R,KAAK,SAAnD,UACAoG,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGzP,KAAK,gBAAgB4R,KAAK,SAAnD,cAIZoG,EAAA,cAACkC,EAAD,CAAkB/Q,OAAO,OAAO+F,MAAM,mBAClC8I,EAAA,cAAC6D,GAAD,CAAUrF,UAAU,UAAUwF,UAAW,EAAGD,QAAS,IAAKG,QAAS7D,EAAWc,KAAKvH,KAAKmH,OAAQoD,QAAS9D,EAAWc,KAAKvH,KAAKiH,OAC1Hb,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGyL,MAAO,EAAGH,MAAO,EAAG/a,KAAK,UAAU4R,KAAK,UAAjE,0BAAiGoG,EAAA,yBAAjG,sBACAA,EAAA,cAACoD,GAAD,CAAa5L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAGO,QAAQ,QAAQ1J,KAAK,UACxDoG,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGzP,KAAK,UAAU4R,KAAK,SAAS8J,MAAM,OAA5D,SACA1D,EAAA,cAACoD,GAAD,CAAa5L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAGO,QAAQ,WAAW1J,KAAK,UAC3DoG,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGzP,KAAK,UAAU4R,KAAK,SAAS8J,MAAM,OAA5D,YACA1D,EAAA,cAACoD,GAAD,CAAa5L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAGO,QAAQ,MAAM1J,KAAK,UACtDoG,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGzP,KAAK,UAAU4R,KAAK,SAAS8J,MAAM,OAA5D,SAGR1D,EAAA,cAACkC,EAAD,CAAkB/Q,OAAO,OAAO+F,MAAM,oBAClC8I,EAAA,qBAAKxB,UAAU,OAAOqG,MAAQ,CAAEE,gBAAe,OAAA3J,OAASiF,EAAWc,KAAKC,IAAIM,MAA7B,KAAuCsD,mBAAoB,SAAUC,eAAgB,WACpIjF,EAAA,cAAC6D,GAAD,CAAUrF,UAAU,UAChBwF,UAAW,EACXD,QAAS,IACTG,SAA2C,EAAjC7D,EAAWK,KAAK9G,KAAKkH,WAAeoE,WAAa,KAC3Df,SAA4C,EAAlC9D,EAAWK,KAAK9G,KAAKgH,YAAgBsE,WAAa,MAE5DlF,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAG/a,KAAK,UAAU0b,MAAM,SAAS9J,KAAK,UAAtE,QACAoG,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGzP,KAAK,UAAU0b,MAAM,SAAS9J,KAAK,UAA5D,eACAoG,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAG/a,KAAK,UAAU0b,MAAM,SAAS9J,KAAK,UAAtE,SACAoG,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGzP,KAAK,UAAU0b,MAAM,SAAS9J,KAAK,UAA5D,mBAGRoG,EAAA,cAACkC,EAAD,CAAkB/Q,OAAO,OAAO+F,MAAM,mBAClC8I,EAAA,cAAC4E,EAAD,CAAepG,UAAU,WACrBwB,EAAA,cAACyC,EAAD,eAAmBzC,EAAA,gCAAnB,8DAA0FA,EAAA,sCAA1F,gDAAyJA,EAAA,sCAAzJ,QAAgLA,EAAA,oCAAhL,+DAGRA,EAAA,cAACkC,EAAD,CAAkB/Q,OAAO,OAAO+F,MAAM,oBACtC8I,EAAA,cAAC6D,GAAD,CAAUrF,UAAU,UAAUwF,UAAW,EAAGD,QAAS,EAAGG,QAAQ,QAAQC,QAAQ,QAAQU,MAAO,CAAEE,gBAAe,OAAA3J,OAASiF,EAAWc,KAAKC,IAAIM,MAA7B,KAAuCsD,mBAAoB,SAAUC,eAAgB,UACjMjF,EAAA,cAAC6D,GAAD,CAAUgB,MAAO,CAAEM,gBAAiB9E,EAAWnJ,MAAMqJ,iBAAmB/I,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EACvFiB,UAAW,EAAGD,QAAS,GAAIG,QAAS7D,EAAWc,KAAKvH,KAAKoH,MAAOmD,QAAS9D,EAAWc,KAAKvH,KAAKoH,OAE9FhB,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGyL,MAAO,EAAGH,MAAO,EAAG/a,KAAK,UAAU0b,MAAM,SAAS9J,KAAK,SAAhF,gBACAoG,EAAA,cAACoD,GAAD,CAAa5L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAGO,QAAQ,MAAM1J,KAAK,UACtDoG,EAAA,cAACoD,GAAD,CAAa5L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAGO,QAAQ,MAAM1J,KAAK,UACtDoG,EAAA,cAACoD,GAAD,CAAa5L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAGO,QAAQ,MAAM1J,KAAK,UACtDoG,EAAA,cAACoD,GAAD,CAAa5L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAGO,QAAQ,MAAM1J,KAAK,aAI9DoG,EAAA,cAACkC,EAAD,CAAkB/Q,OAAQkP,EAAWsB,OAAOV,cAAe/J,MAAM,mBAC7D8I,EAAA,qBAAKxB,UAAU,WACXwB,EAAA,cAAC2D,GAAD,KACI3D,EAAA,cAACoD,GAAD,CAAa5L,EAAG,EAAGC,EAAG,EAAGsL,MAAO,EAAGO,QAAQ,OAAO1J,KAAK,UACvDoG,EAAA,cAACuD,GAAD,CAAa/L,EAAG,EAAGC,EAAG,EAAGzP,KAAK,gBAAgB4R,KAAK,SAAnD,8BCzP5BwL,IAAStL,OAAOuL,EAAAC,EAAAC,cAACC,GAAD,MAAcC,SAASC,eAAe,SRoIhD,kBAAmB9W,WACrBA,UAAU+W,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.97965fd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LDR_RGB1_0.5c13b865.png\";","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/image.f3f731a5.PNG\";","module.exports = __webpack_public_path__ + \"static/media/proto.a79f8a76.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nfunction compileShader (gl: WebGL2RenderingContext, type: number, source: string): WebGLShader {\r\n    const shader = gl.createShader(type) as WebGLShader;\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\r\n        throw gl.getShaderInfoLog(shader);\r\n\r\n    return shader;\r\n}\r\n\r\nfunction getShaders(gl: WebGL2RenderingContext) {\r\n    /* compile a buttload of shaders */\r\n    const baseVertexShader = compileShader(gl, gl.VERTEX_SHADER, `\r\n        precision highp float;\r\n        attribute vec2 aPosition;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform vec2 texelSize;\r\n        void main () {\r\n            vUv = aPosition * 0.5 + 0.5;\r\n            vL = vUv - vec2(texelSize.x, 0.0);\r\n            vR = vUv + vec2(texelSize.x, 0.0);\r\n            vT = vUv + vec2(0.0, texelSize.y);\r\n            vB = vUv - vec2(0.0, texelSize.y);\r\n            gl_Position = vec4(aPosition, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const clearShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        uniform float value;\r\n        void main () {\r\n            gl_FragColor = value * texture2D(uTexture, vUv);\r\n        }\r\n    `);\r\n\r\n    const colorShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        uniform vec4 color;\r\n        void main () {\r\n            gl_FragColor = color;\r\n        }\r\n    `);\r\n\r\n    const backgroundShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        uniform float aspectRatio;\r\n        #define SCALE 25.0\r\n        void main () {\r\n            vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\r\n            float v = mod(uv.x + uv.y, 2.0);\r\n            v = v * 0.1 + 0.8;\r\n            gl_FragColor = vec4(vec3(v), 1.0);\r\n        }\r\n    `);\r\n\r\n    const displayShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        void main () {\r\n            vec3 C = texture2D(uTexture, vUv).rgb;\r\n            float a = max(C.r, max(C.g, C.b));\r\n            gl_FragColor = vec4(C, a);\r\n        }\r\n    `);\r\n\r\n    const displayBloomShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        uniform sampler2D uBloom;\r\n        uniform sampler2D uDithering;\r\n        uniform vec2 ditherScale;\r\n        void main () {\r\n            vec3 C = texture2D(uTexture, vUv).rgb;\r\n            vec3 bloom = texture2D(uBloom, vUv).rgb;\r\n            vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\r\n            noise = noise * 2.0 - 1.0;\r\n            bloom += noise / 800.0;\r\n            bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\r\n            C += bloom;\r\n            float a = max(C.r, max(C.g, C.b));\r\n            gl_FragColor = vec4(C, a);\r\n        }\r\n    `);\r\n\r\n    const displayShadingShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uTexture;\r\n        uniform vec2 texelSize;\r\n        void main () {\r\n            vec3 L = texture2D(uTexture, vL).rgb;\r\n            vec3 R = texture2D(uTexture, vR).rgb;\r\n            vec3 T = texture2D(uTexture, vT).rgb;\r\n            vec3 B = texture2D(uTexture, vB).rgb;\r\n            vec3 C = texture2D(uTexture, vUv).rgb;\r\n            float dx = length(R) - length(L);\r\n            float dy = length(T) - length(B);\r\n            vec3 n = normalize(vec3(dx, dy, length(texelSize)));\r\n            vec3 l = vec3(0.0, 0.0, 1.0);\r\n            float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\r\n            C.rgb *= diffuse;\r\n            float a = max(C.r, max(C.g, C.b));\r\n            gl_FragColor = vec4(C, a);\r\n        }\r\n    `);\r\n\r\n    const displayBloomShadingShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uTexture;\r\n        uniform sampler2D uBloom;\r\n        uniform sampler2D uDithering;\r\n        uniform vec2 ditherScale;\r\n        uniform vec2 texelSize;\r\n        void main () {\r\n            vec3 L = texture2D(uTexture, vL).rgb;\r\n            vec3 R = texture2D(uTexture, vR).rgb;\r\n            vec3 T = texture2D(uTexture, vT).rgb;\r\n            vec3 B = texture2D(uTexture, vB).rgb;\r\n            vec3 C = texture2D(uTexture, vUv).rgb;\r\n            float dx = length(R) - length(L);\r\n            float dy = length(T) - length(B);\r\n            vec3 n = normalize(vec3(dx, dy, length(texelSize)));\r\n            vec3 l = vec3(0.0, 0.0, 1.0);\r\n            float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\r\n            C *= diffuse;\r\n            vec3 bloom = texture2D(uBloom, vUv).rgb;\r\n            vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\r\n            noise = noise * 2.0 - 1.0;\r\n            bloom += noise / 800.0;\r\n            bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\r\n            C += bloom;\r\n            float a = max(C.r, max(C.g, C.b));\r\n            gl_FragColor = vec4(C, a);\r\n        }\r\n    `);\r\n\r\n    const bloomPrefilterShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTexture;\r\n        uniform vec3 curve;\r\n        uniform float threshold;\r\n        void main () {\r\n            vec3 c = texture2D(uTexture, vUv).rgb;\r\n            float br = max(c.r, max(c.g, c.b));\r\n            float rq = clamp(br - curve.x, 0.0, curve.y);\r\n            rq = curve.z * rq * rq;\r\n            c *= max(rq, br - threshold) / max(br, 0.0001);\r\n            gl_FragColor = vec4(c, 0.0);\r\n        }\r\n    `);\r\n\r\n    const bloomBlurShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uTexture;\r\n        void main () {\r\n            vec4 sum = vec4(0.0);\r\n            sum += texture2D(uTexture, vL);\r\n            sum += texture2D(uTexture, vR);\r\n            sum += texture2D(uTexture, vT);\r\n            sum += texture2D(uTexture, vB);\r\n            sum *= 0.25;\r\n            gl_FragColor = sum;\r\n        }\r\n    `);\r\n\r\n    const bloomFinalShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uTexture;\r\n        uniform float intensity;\r\n        void main () {\r\n            vec4 sum = vec4(0.0);\r\n            sum += texture2D(uTexture, vL);\r\n            sum += texture2D(uTexture, vR);\r\n            sum += texture2D(uTexture, vT);\r\n            sum += texture2D(uTexture, vB);\r\n            sum *= 0.25;\r\n            gl_FragColor = sum * intensity;\r\n        }\r\n    `);\r\n\r\n    const splatShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uTarget;\r\n        uniform float aspectRatio;\r\n        uniform vec3 color;\r\n        uniform vec2 point;\r\n        uniform float radius;\r\n        void main () {\r\n            vec2 p = vUv - point.xy;\r\n            p.x *= aspectRatio;\r\n            vec3 splat = exp(-dot(p, p) / radius) * color;\r\n            vec3 base = texture2D(uTarget, vUv).xyz;\r\n            gl_FragColor = vec4(base + splat, 1.0);\r\n        }\r\n    `);\r\n\r\n    const advectionManualFilteringShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uVelocity;\r\n        uniform sampler2D uSource;\r\n        uniform vec2 texelSize;\r\n        uniform vec2 dyeTexelSize;\r\n        uniform float dt;\r\n        uniform float dissipation;\r\n        vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\r\n            vec2 st = uv / tsize - 0.5;\r\n            vec2 iuv = floor(st);\r\n            vec2 fuv = fract(st);\r\n            vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\r\n            vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\r\n            vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\r\n            vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\r\n            return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\r\n        }\r\n        void main () {\r\n            vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\r\n            gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\r\n            gl_FragColor.a = 1.0;\r\n        }\r\n    `);\r\n\r\n    const advectionShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        uniform sampler2D uVelocity;\r\n        uniform sampler2D uSource;\r\n        uniform vec2 texelSize;\r\n        uniform float dt;\r\n        uniform float dissipation;\r\n        void main () {\r\n            vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\r\n            gl_FragColor = dissipation * texture2D(uSource, coord);\r\n            gl_FragColor.a = 1.0;\r\n        }\r\n    `);\r\n\r\n    const divergenceShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uVelocity;\r\n        void main () {\r\n            float L = texture2D(uVelocity, vL).x;\r\n            float R = texture2D(uVelocity, vR).x;\r\n            float T = texture2D(uVelocity, vT).y;\r\n            float B = texture2D(uVelocity, vB).y;\r\n            vec2 C = texture2D(uVelocity, vUv).xy;\r\n            if (vL.x < 0.0) { L = -C.x; }\r\n            if (vR.x > 1.0) { R = -C.x; }\r\n            if (vT.y > 1.0) { T = -C.y; }\r\n            if (vB.y < 0.0) { B = -C.y; }\r\n            float div = 0.5 * (R - L + T - B);\r\n            gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const curlShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uVelocity;\r\n        void main () {\r\n            float L = texture2D(uVelocity, vL).y;\r\n            float R = texture2D(uVelocity, vR).y;\r\n            float T = texture2D(uVelocity, vT).x;\r\n            float B = texture2D(uVelocity, vB).x;\r\n            float vorticity = R - L - T + B;\r\n            gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const vorticityShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision highp float;\r\n        precision highp sampler2D;\r\n        varying vec2 vUv;\r\n        varying vec2 vL;\r\n        varying vec2 vR;\r\n        varying vec2 vT;\r\n        varying vec2 vB;\r\n        uniform sampler2D uVelocity;\r\n        uniform sampler2D uCurl;\r\n        uniform float curl;\r\n        uniform float dt;\r\n        void main () {\r\n            float L = texture2D(uCurl, vL).x;\r\n            float R = texture2D(uCurl, vR).x;\r\n            float T = texture2D(uCurl, vT).x;\r\n            float B = texture2D(uCurl, vB).x;\r\n            float C = texture2D(uCurl, vUv).x;\r\n            vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\r\n            force /= length(force) + 0.0001;\r\n            force *= curl * C;\r\n            force.y *= -1.0;\r\n            vec2 vel = texture2D(uVelocity, vUv).xy;\r\n            gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const pressureShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uPressure;\r\n        uniform sampler2D uDivergence;\r\n        vec2 boundary (vec2 uv) {\r\n            return uv;\r\n            // uncomment if you use wrap or repeat texture mode\r\n            // uv = min(max(uv, 0.0), 1.0);\r\n            // return uv;\r\n        }\r\n        void main () {\r\n            float L = texture2D(uPressure, boundary(vL)).x;\r\n            float R = texture2D(uPressure, boundary(vR)).x;\r\n            float T = texture2D(uPressure, boundary(vT)).x;\r\n            float B = texture2D(uPressure, boundary(vB)).x;\r\n            float C = texture2D(uPressure, vUv).x;\r\n            float divergence = texture2D(uDivergence, vUv).x;\r\n            float pressure = (L + R + B + T - divergence) * 0.25;\r\n            gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    const gradientSubtractShader = compileShader(gl, gl.FRAGMENT_SHADER, `\r\n        precision mediump float;\r\n        precision mediump sampler2D;\r\n        varying highp vec2 vUv;\r\n        varying highp vec2 vL;\r\n        varying highp vec2 vR;\r\n        varying highp vec2 vT;\r\n        varying highp vec2 vB;\r\n        uniform sampler2D uPressure;\r\n        uniform sampler2D uVelocity;\r\n        vec2 boundary (vec2 uv) {\r\n            return uv;\r\n            // uv = min(max(uv, 0.0), 1.0);\r\n            // return uv;\r\n        }\r\n        void main () {\r\n            float L = texture2D(uPressure, boundary(vL)).x;\r\n            float R = texture2D(uPressure, boundary(vR)).x;\r\n            float T = texture2D(uPressure, boundary(vT)).x;\r\n            float B = texture2D(uPressure, boundary(vB)).x;\r\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\r\n            velocity.xy -= vec2(R - L, T - B);\r\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\r\n        }\r\n    `);\r\n\r\n    return {\r\n        baseVertexShader,\r\n        clearShader,\r\n        colorShader,\r\n        backgroundShader,\r\n        displayShader,\r\n        displayBloomShader,\r\n        displayShadingShader,\r\n        displayBloomShadingShader,\r\n        bloomPrefilterShader,\r\n        bloomBlurShader,\r\n        bloomFinalShader,\r\n        splatShader,\r\n        advectionShader,\r\n        advectionManualFilteringShader,\r\n        divergenceShader,\r\n        curlShader,\r\n        vorticityShader,\r\n        pressureShader,\r\n        gradientSubtractShader\r\n    };\r\n}\r\n\r\nexport default getShaders;","import HSVTypes from \"./HSVTypes\";\r\n\r\n/*eslint no-unused-expressions: \"off\"*/\r\nexport default class HSVTools {\r\n    static HSVtoRGB (c: HSVTypes.HSVColor) {\r\n        const {h, s, v} = c;\r\n        let r, g, b, i, f, p, q, t;\r\n        i = Math.floor(h * 6);\r\n        f = h * 6 - i;\r\n        p = v * (1 - s);\r\n        q = v * (1 - f * s);\r\n        t = v * (1 - (1 - f) * s);\r\n\r\n        switch (i % 6) {\r\n            case 0: r = v, g = t, b = p; break;\r\n            case 1: r = q, g = v, b = p; break;\r\n            case 2: r = p, g = v, b = t; break;\r\n            case 3: r = p, g = q, b = v; break;\r\n            case 4: r = t, g = p, b = v; break;\r\n            case 5: r = v, g = p, b = q; break;\r\n        }\r\n\r\n        return {\r\n            r,\r\n            g,\r\n            b\r\n        };\r\n    }\r\n\r\n    static generateColor (): HSVTypes.RGBColor {\r\n        let c = HSVTools.HSVtoRGB({ h: Math.random(), s: 1.0, v: 1.0 });\r\n        c.r *= 0.15;\r\n        c.g *= 0.15;\r\n        c.b *= 0.15;\r\n        return c;\r\n    }\r\n}","import getShaders from \"./FluidShaders\";\r\nimport SplatVector from \"./FluidDraw\";\r\nimport HSVTools from \"./HSVTools\";\r\n\r\n/*eslint no-unused-expressions: \"off\"*/\r\n\r\n/**\r\n * Port of stable fluid simulation using WebGL\r\n * From this project: https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\r\n */\r\n\r\ninterface IGLExtentsions {\r\n    formatRGBA;\r\n    formatRG;\r\n    formatR;\r\n    halfFloatTexType;\r\n    supportLinearFiltering;\r\n}\r\n\r\nfunction isMobile (): boolean {\r\n    return /Mobi|Android/i.test(navigator.userAgent);\r\n}\r\n\r\nclass GLProgram {\r\n    uniforms: any;\r\n    program: WebGLProgram;\r\n\r\n    constructor ( gl: WebGL2RenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader) {\r\n        this.program = gl.createProgram() as WebGLProgram;\r\n        this.uniforms = {};\r\n\r\n        gl.attachShader(this.program, vertexShader);\r\n        gl.attachShader(this.program, fragmentShader);\r\n        gl.linkProgram(this.program);\r\n\r\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS))\r\n            throw gl.getProgramInfoLog(this.program);\r\n\r\n        const uniformCount = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\r\n        for (let i = 0; i < uniformCount; i++) {\r\n            const uniformName = (gl.getActiveUniform(this.program, i) as WebGLActiveInfo).name;\r\n            this.uniforms[uniformName] = gl.getUniformLocation(this.program, uniformName);\r\n        }\r\n    }\r\n\r\n    bind (gl: WebGL2RenderingContext) {\r\n        gl.useProgram(this.program);\r\n    }\r\n}\r\n\r\nclass FluidRender {\r\n    private readonly canvas: HTMLCanvasElement;\r\n    private readonly gl: WebGL2RenderingContext;\r\n    private readonly ext: IGLExtentsions;\r\n    private readonly config;\r\n    private readonly ditheringTexture;\r\n\r\n    private readonly clearProgram: GLProgram;\r\n    private readonly colorProgram: GLProgram;\r\n    private readonly backgroundProgram: GLProgram;\r\n    private readonly displayProgram: GLProgram;\r\n    private readonly displayBloomProgram: GLProgram;\r\n    private readonly displayShadingProgram: GLProgram;\r\n    private readonly displayBloomShadingProgram: GLProgram;\r\n    private readonly bloomPrefilterProgram: GLProgram;\r\n    private readonly bloomBlurProgram: GLProgram;\r\n    private readonly bloomFinalProgram: GLProgram;\r\n    private readonly splatProgram: GLProgram;\r\n    private readonly advectionProgram: GLProgram;\r\n    private readonly divergenceProgram: GLProgram;\r\n    private readonly curlProgram: GLProgram;\r\n    private readonly vorticityProgram: GLProgram;\r\n    private readonly pressureProgram: GLProgram;\r\n    private readonly gradientSubtractProgram: GLProgram;\r\n\r\n    private bloomFramebuffers: Array<any> = [];\r\n    private simWidth;\r\n    private simHeight;\r\n    private dyeWidth;\r\n    private dyeHeight;\r\n    private density;\r\n    private velocity;\r\n    private divergence;\r\n    private curl;\r\n    private pressure;\r\n    private bloom;\r\n\r\n    private splatVectorStates: Array<SplatVector> = [];\r\n    private paused: boolean = false;\r\n\r\n    private readonly blit: (destination: WebGLFramebuffer | null) => void;\r\n\r\n    private static readonly DEFAULT_CONF = {\r\n        SIM_RESOLUTION: 128,\r\n        DYE_RESOLUTION: 512,\r\n        DENSITY_DISSIPATION: 0.97,\r\n        VELOCITY_DISSIPATION: 0.98,\r\n        PRESSURE_DISSIPATION: 0.8,\r\n        PRESSURE_ITERATIONS: 20,\r\n        CURL: 30,\r\n        SPLAT_RADIUS: 0.5,\r\n        SHADING: true,\r\n        COLORFUL: true,\r\n        BACK_COLOR: { r: 0, g: 0, b: 0 },\r\n        TRANSPARENT: false,\r\n        BLOOM: true,\r\n        BLOOM_ITERATIONS: 8,\r\n        BLOOM_RESOLUTION: 256,\r\n        BLOOM_INTENSITY: 0.8,\r\n        BLOOM_THRESHOLD: 0.6,\r\n        BLOOM_SOFT_KNEE: 0.7\r\n    };\r\n\r\n    static getDefaultConfig(): typeof FluidRender.DEFAULT_CONF {\r\n        return Object.assign({}, FluidRender.DEFAULT_CONF);\r\n    }\r\n\r\n    constructor(canvas: HTMLCanvasElement, config: typeof FluidRender.DEFAULT_CONF, text_url: string) {\r\n        this.canvas = canvas;\r\n        // get the GL context from the canvas, and read support information\r\n        const { gl, ext } = FluidRender.getWebGLContext(canvas);\r\n        this.gl = gl;\r\n        // set the extensions and config data\r\n        this.ext = ext;\r\n        this.config = config;\r\n        // modify the config for platform specific things\r\n        if (isMobile())\r\n            this.config.SHADING = false;\r\n\r\n        if (!this.ext.supportLinearFiltering) {\r\n            this.config.SHADING = false;\r\n            this.config.BLOOM = false;\r\n        }\r\n\r\n        // process the shaders\r\n        const {\r\n            baseVertexShader,\r\n            clearShader,\r\n            colorShader,\r\n            backgroundShader,\r\n            displayShader,\r\n            displayBloomShader,\r\n            displayShadingShader,\r\n            displayBloomShadingShader,\r\n            bloomPrefilterShader,\r\n            bloomBlurShader,\r\n            bloomFinalShader,\r\n            splatShader,\r\n            advectionShader,\r\n            advectionManualFilteringShader,\r\n            divergenceShader,\r\n            curlShader,\r\n            vorticityShader,\r\n            pressureShader,\r\n            gradientSubtractShader\r\n        } = getShaders(this.gl);\r\n\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.gl.createBuffer());\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]), this.gl.STATIC_DRAW);\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.gl.createBuffer());\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 0, 2, 3]), this.gl.STATIC_DRAW);\r\n        this.gl.vertexAttribPointer(0, 2, this.gl.FLOAT, false, 0, 0);\r\n        this.gl.enableVertexAttribArray(0);\r\n\r\n        this.blit = (destination: WebGLFramebuffer | null) => {\r\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, destination);\r\n            this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\r\n        };\r\n\r\n        // load the image texture for dithering\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, new Uint8Array([255, 255, 255]));\r\n\r\n        this.ditheringTexture = {\r\n            texture,\r\n            width: 1,\r\n            height: 1,\r\n            attach: (id) => {\r\n                this.gl.activeTexture(this.gl.TEXTURE0 + id);\r\n                this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n                return id;\r\n            }\r\n        };\r\n\r\n        const image = new Image();\r\n        image.onload = () => {\r\n            this.ditheringTexture.width = image.width;\r\n            this.ditheringTexture.height = image.height;\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGB, this.gl.RGB, this.gl.UNSIGNED_BYTE, image);\r\n        };\r\n        image.src = text_url;\r\n\r\n        this.clearProgram               = new GLProgram(this.gl, baseVertexShader, clearShader);\r\n        this.colorProgram               = new GLProgram(this.gl, baseVertexShader, colorShader);\r\n        this.backgroundProgram          = new GLProgram(this.gl, baseVertexShader, backgroundShader);\r\n        this.displayProgram             = new GLProgram(this.gl, baseVertexShader, displayShader);\r\n        this.displayBloomProgram        = new GLProgram(this.gl, baseVertexShader, displayBloomShader);\r\n        this.displayShadingProgram      = new GLProgram(this.gl, baseVertexShader, displayShadingShader);\r\n        this.displayBloomShadingProgram = new GLProgram(this.gl, baseVertexShader, displayBloomShadingShader);\r\n        this.bloomPrefilterProgram      = new GLProgram(this.gl, baseVertexShader, bloomPrefilterShader);\r\n        this.bloomBlurProgram           = new GLProgram(this.gl, baseVertexShader, bloomBlurShader);\r\n        this.bloomFinalProgram          = new GLProgram(this.gl, baseVertexShader, bloomFinalShader);\r\n        this.splatProgram               = new GLProgram(this.gl, baseVertexShader, splatShader);\r\n        this.advectionProgram           = new GLProgram(this.gl, baseVertexShader, ext.supportLinearFiltering ? advectionShader : advectionManualFilteringShader);\r\n        this.divergenceProgram          = new GLProgram(this.gl, baseVertexShader, divergenceShader);\r\n        this.curlProgram                = new GLProgram(this.gl, baseVertexShader, curlShader);\r\n        this.vorticityProgram           = new GLProgram(this.gl, baseVertexShader, vorticityShader);\r\n        this.pressureProgram            = new GLProgram(this.gl, baseVertexShader, pressureShader);\r\n        this.gradientSubtractProgram     = new GLProgram(this.gl, baseVertexShader, gradientSubtractShader);\r\n\r\n        // init framebuffers\r\n        this.initFrameBuffers();\r\n    }\r\n\r\n    private initFrameBuffers() {\r\n        let simRes = this.getResolution(this.config.SIM_RESOLUTION);\r\n        let dyeRes = this.getResolution(this.config.DYE_RESOLUTION);\r\n\r\n        this.simWidth  = simRes.width;\r\n        this.simHeight = simRes.height;\r\n        this.dyeWidth  = dyeRes.width;\r\n        this.dyeHeight = dyeRes.height;\r\n\r\n        const texType = this.ext.halfFloatTexType;\r\n        const rgba    = this.ext.formatRGBA;\r\n        const rg      = this.ext.formatRG;\r\n        const r       = this.ext.formatR;\r\n        const filtering = this.ext.supportLinearFiltering ? this.gl.LINEAR : this.gl.NEAREST;\r\n\r\n        if (this.density == null)\r\n            this.density = this.createDoubleFBO(this.dyeWidth, this.dyeHeight, rgba.internalFormat, rgba.format, texType, filtering);\r\n        else\r\n            this.density = this.resizeDoubleFBO(this.density, this.dyeWidth, this.dyeHeight, rgba.internalFormat, rgba.format, texType, filtering);\r\n\r\n        if (this.velocity == null)\r\n            this.velocity = this.createDoubleFBO(this.simWidth, this.simHeight, rg.internalFormat, rg.format, texType, filtering);\r\n        else\r\n            this.velocity = this.resizeDoubleFBO(this.velocity, this.simWidth, this.simHeight, rg.internalFormat, rg.format, texType, filtering);\r\n\r\n        this.divergence = this.createFBO      (this.simWidth, this.simHeight, r.internalFormat, r.format, texType, this.gl.NEAREST);\r\n        this.curl       = this.createFBO      (this.simWidth, this.simHeight, r.internalFormat, r.format, texType, this.gl.NEAREST);\r\n        this.pressure   = this.createDoubleFBO(this.simWidth, this.simHeight, r.internalFormat, r.format, texType, this.gl.NEAREST);\r\n\r\n        this.initBloomFramebuffers();\r\n    }\r\n\r\n   private initBloomFramebuffers () {\r\n        let res = this.getResolution(this.config.BLOOM_RESOLUTION);\r\n\r\n        const texType = this.ext.halfFloatTexType;\r\n        const rgba = this.ext.formatRGBA;\r\n        const filtering = this.ext.supportLinearFiltering ? this.gl.LINEAR : this.gl.NEAREST;\r\n\r\n        this.bloom = this.createFBO(res.width, res.height, rgba.internalFormat, rgba.format, texType, filtering);\r\n\r\n        this.bloomFramebuffers = [];\r\n        for (let i = 0; i < this.config.BLOOM_ITERATIONS; i++) {\r\n            let width = res.width >> (i + 1);\r\n            let height = res.height >> (i + 1);\r\n\r\n            if (width < 2 || height < 2) break;\r\n\r\n            let fbo = this.createFBO(width, height, rgba.internalFormat, rgba.format, texType, filtering);\r\n            this.bloomFramebuffers.push(fbo);\r\n        }\r\n    }\r\n\r\n    private getResolution (resolution) {\r\n        let aspectRatio = this.gl.drawingBufferWidth / this.gl.drawingBufferHeight;\r\n        if (aspectRatio < 1)\r\n            aspectRatio = 1.0 / aspectRatio;\r\n\r\n        let max = Math.round(resolution * aspectRatio);\r\n        let min = Math.round(resolution);\r\n\r\n        if (this.gl.drawingBufferWidth > this.gl.drawingBufferHeight)\r\n            return { width: max, height: min };\r\n        else\r\n            return { width: min, height: max };\r\n    }\r\n\r\n    private createFBO (w: number, h: number, internalFormat: number, format: number, type: number, param: number) {\r\n        this.gl.activeTexture(this.gl.TEXTURE0);\r\n        let texture = this.gl.createTexture();\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, param);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, param);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\r\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, internalFormat, w, h, 0, format, type, null);\r\n\r\n        let fbo = this.gl.createFramebuffer();\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, fbo);\r\n        this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, texture, 0);\r\n        this.gl.viewport(0, 0, w, h);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        return {\r\n            texture: texture as WebGLTexture,\r\n            fbo: fbo as WebGLFramebuffer,\r\n            width: w,\r\n            height: h,\r\n            attach: (id) => {\r\n                this.gl.activeTexture(this.gl.TEXTURE0 + id);\r\n                this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n                return id;\r\n            }\r\n        };\r\n    }\r\n\r\n    private createDoubleFBO (w: number, h: number, internalFormat: number, format: number, type: number, param: number) {\r\n        let fbo1 = this.createFBO(w, h, internalFormat, format, type, param);\r\n        let fbo2 = this.createFBO(w, h, internalFormat, format, type, param);\r\n\r\n        return {\r\n            get read () {\r\n                return fbo1;\r\n            },\r\n            set read (value) {\r\n                fbo1 = value;\r\n            },\r\n            get write () {\r\n                return fbo2;\r\n            },\r\n            set write (value) {\r\n                fbo2 = value;\r\n            },\r\n            swap () {\r\n                let temp = fbo1;\r\n                fbo1 = fbo2;\r\n                fbo2 = temp;\r\n            }\r\n        };\r\n    }\r\n\r\n    private resizeFBO (target, w: number, h: number, internalFormat: number, format: number, type: number, param: number) {\r\n        let newFBO = this.createFBO(w, h, internalFormat, format, type, param);\r\n        this.clearProgram.bind(this.gl);\r\n        this.gl.uniform1i(this.clearProgram.uniforms.uTexture, target.attach(0));\r\n        this.gl.uniform1f(this.clearProgram.uniforms.value, 1);\r\n        this.blit(newFBO.fbo);\r\n        return newFBO;\r\n    }\r\n\r\n    private resizeDoubleFBO (target, w: number, h: number, internalFormat: number, format: number, type: number, param: number) {\r\n        target.read = this.resizeFBO(target.read, w, h, internalFormat, format, type, param);\r\n        target.write = this.createFBO(w, h, internalFormat, format, type, param);\r\n        return target;\r\n    }\r\n\r\n    private step (dt) {\r\n        this.gl.disable(this.gl.BLEND);\r\n        this.gl.viewport(0, 0, this.simWidth, this.simHeight);\r\n\r\n        this.curlProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.curlProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.curlProgram.uniforms.uVelocity, this.velocity.read.attach(0));\r\n        this.blit(this.curl.fbo);\r\n\r\n        this.vorticityProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.vorticityProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.vorticityProgram.uniforms.uVelocity, this.velocity.read.attach(0));\r\n        this.gl.uniform1i(this.vorticityProgram.uniforms.uCurl, this.curl.attach(1));\r\n        this.gl.uniform1f(this.vorticityProgram.uniforms.curl, this.config.CURL);\r\n        this.gl.uniform1f(this.vorticityProgram.uniforms.dt, dt);\r\n        this.blit(this.velocity.write.fbo);\r\n        this.velocity.swap();\r\n\r\n        this.divergenceProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.divergenceProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.divergenceProgram.uniforms.uVelocity, this.velocity.read.attach(0));\r\n        this.blit(this.divergence.fbo);\r\n\r\n        this.clearProgram.bind(this.gl);\r\n        this.gl.uniform1i(this.clearProgram.uniforms.uTexture, this.pressure.read.attach(0));\r\n        this.gl.uniform1f(this.clearProgram.uniforms.value, this.config.PRESSURE_DISSIPATION);\r\n        this.blit(this.pressure.write.fbo);\r\n        this.pressure.swap();\r\n\r\n        this.pressureProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.pressureProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.pressureProgram.uniforms.uDivergence, this.divergence.attach(0));\r\n        for (let i = 0; i < this.config.PRESSURE_ITERATIONS; i++) {\r\n            this.gl.uniform1i(this.pressureProgram.uniforms.uPressure, this.pressure.read.attach(1));\r\n            this.blit(this.pressure.write.fbo);\r\n            this.pressure.swap();\r\n        }\r\n\r\n        this.gradientSubtractProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.gradientSubtractProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        this.gl.uniform1i(this.gradientSubtractProgram.uniforms.uPressure, this.pressure.read.attach(0));\r\n        this.gl.uniform1i(this.gradientSubtractProgram.uniforms.uVelocity, this.velocity.read.attach(1));\r\n        this.blit(this.velocity.write.fbo);\r\n        this.velocity.swap();\r\n\r\n        this.advectionProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.advectionProgram.uniforms.texelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        if (!this.ext.supportLinearFiltering)\r\n            this.gl.uniform2f(this.advectionProgram.uniforms.dyeTexelSize, 1.0 / this.simWidth, 1.0 / this.simHeight);\r\n        let velocityId = this.velocity.read.attach(0);\r\n        this.gl.uniform1i(this.advectionProgram.uniforms.uVelocity, velocityId);\r\n        this.gl.uniform1i(this.advectionProgram.uniforms.uSource, velocityId);\r\n        this.gl.uniform1f(this.advectionProgram.uniforms.dt, dt);\r\n        this.gl.uniform1f(this.advectionProgram.uniforms.dissipation, this.config.VELOCITY_DISSIPATION);\r\n        this.blit(this.velocity.write.fbo);\r\n        this.velocity.swap();\r\n\r\n        this.gl.viewport(0, 0, this.dyeWidth, this.dyeHeight);\r\n\r\n        if (!this.ext.supportLinearFiltering)\r\n            this.gl.uniform2f(this.advectionProgram.uniforms.dyeTexelSize, 1.0 / this.dyeWidth, 1.0 / this.dyeHeight);\r\n        this.gl.uniform1i(this.advectionProgram.uniforms.uVelocity, this.velocity.read.attach(0));\r\n        this.gl.uniform1i(this.advectionProgram.uniforms.uSource, this.density.read.attach(1));\r\n        this.gl.uniform1f(this.advectionProgram.uniforms.dissipation, this.config.DENSITY_DISSIPATION);\r\n        this.blit(this.density.write.fbo);\r\n        this.density.swap();\r\n    }\r\n\r\n    private render (target) {\r\n        if (this.config.BLOOM)\r\n            this.applyBloom(this.density.read, this.bloom);\r\n\r\n        if (target == null || !this.config.TRANSPARENT) {\r\n            this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\r\n            this.gl.enable(this.gl.BLEND);\r\n        }\r\n        else {\r\n            this.gl.disable(this.gl.BLEND);\r\n        }\r\n\r\n        let width  = target == null ? this.gl.drawingBufferWidth : this.dyeWidth;\r\n        let height = target == null ? this.gl.drawingBufferHeight : this.dyeHeight;\r\n\r\n        this.gl.viewport(0, 0, width, height);\r\n\r\n        if (!this.config.TRANSPARENT) {\r\n            this.colorProgram.bind(this.gl);\r\n            let bc = this.config.BACK_COLOR;\r\n            this.gl.uniform4f(this.colorProgram.uniforms.color, bc.r / 255, bc.g / 255, bc.b / 255, 1);\r\n            this.blit(target);\r\n        }\r\n\r\n        if (target == null && this.config.TRANSPARENT) {\r\n            this.backgroundProgram.bind(this.gl);\r\n            this.gl.uniform1f(this.backgroundProgram.uniforms.aspectRatio, this.canvas.width / this.canvas.height);\r\n            this.blit(null);\r\n        }\r\n\r\n        if (this.config.SHADING) {\r\n            let program = this.config.BLOOM ? this.displayBloomShadingProgram : this.displayShadingProgram;\r\n            program.bind(this.gl);\r\n            this.gl.uniform2f(program.uniforms.texelSize, 1.0 / width, 1.0 / height);\r\n            this.gl.uniform1i(program.uniforms.uTexture, this.density.read.attach(0));\r\n            if (this.config.BLOOM) {\r\n                this.gl.uniform1i(program.uniforms.uBloom, this.bloom.attach(1));\r\n                this.gl.uniform1i(program.uniforms.uDithering, this.ditheringTexture.attach(2));\r\n                let scale = FluidRender.getTextureScale(this.ditheringTexture, width, height);\r\n                this.gl.uniform2f(program.uniforms.ditherScale, scale.x, scale.y);\r\n            }\r\n        }\r\n        else {\r\n            let program = this.config.BLOOM ? this.displayBloomProgram : this.displayProgram;\r\n            program.bind(this.gl);\r\n            this.gl.uniform1i(program.uniforms.uTexture, this.density.read.attach(0));\r\n            if (this.config.BLOOM) {\r\n                this.gl.uniform1i(program.uniforms.uBloom, this.bloom.attach(1));\r\n                this.gl.uniform1i(program.uniforms.uDithering, this.ditheringTexture.attach(2));\r\n                let scale = FluidRender.getTextureScale(this.ditheringTexture, width, height);\r\n                this.gl.uniform2f(program.uniforms.ditherScale, scale.x, scale.y);\r\n            }\r\n        }\r\n\r\n        this.blit(target);\r\n    }\r\n\r\n    private applyBloom (source, destination) {\r\n        if (this.bloomFramebuffers.length < 2)\r\n            return;\r\n\r\n        let last = destination;\r\n\r\n        this.gl.disable(this.gl.BLEND);\r\n        this.bloomPrefilterProgram.bind(this.gl);\r\n        let knee = this.config.BLOOM_THRESHOLD * this.config.BLOOM_SOFT_KNEE + 0.0001;\r\n        let curve0 = this.config.BLOOM_THRESHOLD - knee;\r\n        let curve1 = knee * 2;\r\n        let curve2 = 0.25 / knee;\r\n        this.gl.uniform3f(this.bloomPrefilterProgram.uniforms.curve, curve0, curve1, curve2);\r\n        this.gl.uniform1f(this.bloomPrefilterProgram.uniforms.threshold, this.config.BLOOM_THRESHOLD);\r\n        this.gl.uniform1i(this.bloomPrefilterProgram.uniforms.uTexture, source.attach(0));\r\n        this.gl.viewport(0, 0, last.width, last.height);\r\n        this.blit(last.fbo);\r\n\r\n        this.bloomBlurProgram.bind(this.gl);\r\n        for (let i = 0; i < this.bloomFramebuffers.length; i++) {\r\n            let dest = this.bloomFramebuffers[i];\r\n            this.gl.uniform2f(this.bloomBlurProgram.uniforms.texelSize, 1.0 / last.width, 1.0 / last.height);\r\n            this.gl.uniform1i(this.bloomBlurProgram.uniforms.uTexture, last.attach(0));\r\n            this.gl.viewport(0, 0, dest.width, dest.height);\r\n            this.blit(dest.fbo);\r\n            last = dest;\r\n        }\r\n\r\n        this.gl.blendFunc(this.gl.ONE, this.gl.ONE);\r\n        this.gl.enable(this.gl.BLEND);\r\n\r\n        for (let i = this.bloomFramebuffers.length - 2; i >= 0; i--) {\r\n            let baseTex = this.bloomFramebuffers[i];\r\n            this.gl.uniform2f(this.bloomBlurProgram.uniforms.texelSize, 1.0 / last.width, 1.0 / last.height);\r\n            this.gl.uniform1i(this.bloomBlurProgram.uniforms.uTexture, last.attach(0));\r\n            this.gl.viewport(0, 0, baseTex.width, baseTex.height);\r\n            this.blit(baseTex.fbo);\r\n            last = baseTex;\r\n        }\r\n\r\n        this.gl.disable(this.gl.BLEND);\r\n        this.bloomFinalProgram.bind(this.gl);\r\n        this.gl.uniform2f(this.bloomFinalProgram.uniforms.texelSize, 1.0 / last.width, 1.0 / last.height);\r\n        this.gl.uniform1i(this.bloomFinalProgram.uniforms.uTexture, last.attach(0));\r\n        this.gl.uniform1f(this.bloomFinalProgram.uniforms.intensity, this.config.BLOOM_INTENSITY);\r\n        this.gl.viewport(0, 0, destination.width, destination.height);\r\n        this.blit(destination.fbo);\r\n    }\r\n\r\n    private checkResizeCanvas () {\r\n        if (this.canvas.width !== this.canvas.clientWidth || this.canvas.height !== this.canvas.clientHeight) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            this.initFrameBuffers();\r\n        }\r\n    }\r\n\r\n    private static getTextureScale (texture, width, height) {\r\n        return {\r\n            x: width / texture.width,\r\n            y: height / texture.height\r\n        };\r\n    }\r\n\r\n    private static getWebGLContext (canvas: HTMLCanvasElement): { gl: WebGL2RenderingContext, ext: IGLExtentsions } {\r\n        const params = { alpha: true, depth: false, stencil: false, antialias: false, preserveDrawingBuffer: false };\r\n\r\n        let gl: WebGL2RenderingContext = canvas.getContext(\"webgl2\", params) as WebGL2RenderingContext;\r\n        const isWebGL2 = !!gl;\r\n        if (!isWebGL2)\r\n            gl = (canvas.getContext(\"webgl\", params) || canvas.getContext(\"experimental-webgl\", params)) as WebGL2RenderingContext;\r\n\r\n        let halfFloat;\r\n        let supportLinearFiltering;\r\n        if (isWebGL2) {\r\n            gl.getExtension(\"EXT_color_buffer_float\");\r\n            supportLinearFiltering = gl.getExtension(\"OES_texture_float_linear\");\r\n        } else {\r\n            halfFloat = gl.getExtension(\"OES_texture_half_float\");\r\n            supportLinearFiltering = gl.getExtension(\"OES_texture_half_float_linear\");\r\n        }\r\n\r\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\r\n        const halfFloatTexType = isWebGL2 ? gl.HALF_FLOAT : halfFloat.HALF_FLOAT_OES;\r\n        let formatRGBA;\r\n        let formatRG;\r\n        let formatR;\r\n\r\n        if (isWebGL2) {\r\n            formatRGBA = FluidRender.getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType);\r\n            formatRG = FluidRender.getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType);\r\n            formatR = FluidRender.getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType);\r\n        }\r\n        else {\r\n            formatRGBA = FluidRender.getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n            formatRG = FluidRender.getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n            formatR = FluidRender.getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\r\n        }\r\n\r\n        if (formatRGBA == null)\r\n            // ga('send', 'event', isWebGL2 ? 'webgl2' : 'webgl', 'not supported');\r\n            console.log(`${isWebGL2 ? \"WsbGL2\" : \"WebGL\"} not supported`);\r\n        else\r\n            // ga('send', 'event', isWebGL2 ? 'webgl2' : 'webgl', 'supported');\r\n            console.log(`${isWebGL2 ? \"WsbGL2\" : \"WebGL\"} supported`);\r\n\r\n        return {\r\n            gl,\r\n            ext: {\r\n                formatRGBA,\r\n                formatRG,\r\n                formatR,\r\n                halfFloatTexType,\r\n                supportLinearFiltering\r\n            }\r\n        };\r\n    }\r\n\r\n    private static getSupportedFormat (gl, internalFormat, format, type) {\r\n        if (!FluidRender.supportRenderTextureFormat(gl, internalFormat, format, type)) {\r\n            switch (internalFormat) {\r\n                case gl.R16F:\r\n                    return FluidRender.getSupportedFormat(gl, gl.RG16F, gl.RG, type);\r\n                case gl.RG16F:\r\n                    return FluidRender.getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type);\r\n                default:\r\n                    return null;\r\n            }\r\n        }\r\n\r\n        return {\r\n            internalFormat,\r\n            format\r\n        };\r\n    }\r\n\r\n    private static supportRenderTextureFormat (gl: WebGL2RenderingContext, internalFormat, format, type): boolean {\r\n        let texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null);\r\n\r\n        let fbo = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== gl.FRAMEBUFFER_COMPLETE)\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    splat (x: number, y: number, dx: number, dy: number, color: { r: number, g: number, b: number }, radius?: number) {\r\n        this.gl.viewport(0, 0, this.simWidth, this.simHeight);\r\n        this.splatProgram.bind(this.gl);\r\n        this.gl.uniform1i(this.splatProgram.uniforms.uTarget, this.velocity.read.attach(0));\r\n        this.gl.uniform1f(this.splatProgram.uniforms.aspectRatio, this.canvas.width / this.canvas.height);\r\n        this.gl.uniform2f(this.splatProgram.uniforms.point, x / this.canvas.width, 1.0 - y / this.canvas.height);\r\n        this.gl.uniform3f(this.splatProgram.uniforms.color, dx, -dy, 1.0);\r\n        this.gl.uniform1f(this.splatProgram.uniforms.radius, (radius || this.config.SPLAT_RADIUS) / 100.0);\r\n        this.blit(this.velocity.write.fbo);\r\n        this.velocity.swap();\r\n\r\n        this.gl.viewport(0, 0, this.dyeWidth, this.dyeHeight);\r\n        this.gl.uniform1i(this.splatProgram.uniforms.uTarget, this.density.read.attach(0));\r\n        this.gl.uniform3f(this.splatProgram.uniforms.color, color.r, color.g, color.b);\r\n        this.blit(this.density.write.fbo);\r\n        this.density.swap();\r\n    }\r\n\r\n    randomSplats (amount: number) {\r\n        for (let i = 0; i < amount; i++) {\r\n            const color = HSVTools.generateColor();\r\n            color.r *= 10.0;\r\n            color.g *= 10.0;\r\n            color.b *= 10.0;\r\n            const x = this.canvas.width * Math.random();\r\n            const y = this.canvas.height * Math.random();\r\n            const dx = 1000 * (Math.random() - 0.5);\r\n            const dy = 1000 * (Math.random() - 0.5);\r\n            this.splat(x, y, dx, dy, color);\r\n        }\r\n    }\r\n\r\n    addVector(vector: SplatVector) {\r\n        this.splatVectorStates.push(vector);\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.ditheringTexture.width === 1) console.log(\"Attempted to render when image is not loaded!\");\r\n        else if (!this.paused) {\r\n            // update animations\r\n            this.splatVectorStates = this.splatVectorStates.filter((s) => {\r\n                const next_splat = s.next_splat();\r\n                if (next_splat === null) return false;\r\n                this.splat(next_splat.pos[0], next_splat.pos[1], next_splat.vel[0], next_splat.vel[1], next_splat.color, next_splat.size);\r\n                return true;\r\n            });\r\n            // step the fluid\r\n            this.step(dt);\r\n            // render the fluid\r\n            this.render(null);\r\n        }\r\n    }\r\n\r\n    setPause(pause: boolean) {\r\n        this.paused = pause;\r\n    }\r\n}\r\n\r\nexport default FluidRender;","import * as React from \"react\";\r\nimport useEventListener from \"@use-it/event-listener\";\r\n\r\n/**\r\n * Simple hook for detecting if an element is inside the viewport or not\r\n */\r\n\r\nfunction getIsInside(elem: HTMLElement) {\r\n    const rect = elem.getBoundingClientRect();\r\n    return (rect.top >= 0 && rect.top <= window.innerHeight)\r\n                || (rect.bottom > 0 && rect.bottom <= window.innerHeight);\r\n}\r\n\r\nconst useInsideViewport: (element: React.MutableRefObject<HTMLElement | null>, insidecallback: () => (() => void) | void) => void = (element, insidecallback) => {\r\n    const [isInside, setIsInside] = React.useState<boolean | null>(null);\r\n    const insideCallbackRef = React.useRef<(() => void) | null>(null);\r\n\r\n    useEventListener(\"scroll\", () => {\r\n        if (element.current) setIsInside(getIsInside(element.current));\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (element.current) {\r\n            // if we haven't detected ever, do the first check and run this function again\r\n            if (isInside === null) setIsInside(getIsInside(element.current));\r\n            // else if it's inside run the callback\r\n            else if (isInside) insideCallbackRef.current = insidecallback() || null;\r\n            // else run the cleanup if it exists\r\n            else if (insideCallbackRef.current) {\r\n                insideCallbackRef.current();\r\n                insideCallbackRef.current = null;\r\n            }\r\n            // tell react to run the cleanup if this component disapears\r\n            return insideCallbackRef.current || undefined;\r\n        }\r\n    }, [isInside, insidecallback, element]);\r\n};\r\n\r\nexport default useInsideViewport;","import HSVTypes from \"./HSVTypes\";\r\n\r\nexport default class SplatVector {\r\n    private static readonly DEFAULT_SPEED = 500;\r\n    private static readonly DEFUALT_SPAT_DENSITY = 20;\r\n    private static readonly DEFUALT_SIZE = 0.5;\r\n\r\n\r\n    readonly step_size: [number, number];\r\n    readonly num_steps: number;\r\n    readonly speed: [number, number];\r\n    readonly pos: [number, number];\r\n    readonly color: HSVTypes.RGBColor;\r\n    readonly size: number;\r\n    private cur_step: number;\r\n\r\n    constructor(direction: number, magnitude: number, position: [number, number], color: HSVTypes.RGBColor, size?: number, speed?: number, splat_density?: number) {\r\n        this.pos = position;\r\n        this.color = color;\r\n        this.size = size || SplatVector.DEFUALT_SIZE;\r\n        this.cur_step = 0;\r\n        const cos = Math.cos((Math.PI / 180.0) * direction);\r\n        const sin = Math.sin((Math.PI / 180.0) * direction);\r\n        // calculate xdist and ydist from direction and magnitude\r\n        const dist = [Math.floor(magnitude * cos), Math.floor(magnitude * sin)];\r\n        // calculate speed from direction\r\n        speed = speed || SplatVector.DEFAULT_SPEED;\r\n        this.speed = [Math.floor(speed * cos), Math.floor(speed * sin)];\r\n        // calculate pixel step and number of steps from splat_density\r\n        splat_density = splat_density || SplatVector.DEFUALT_SPAT_DENSITY;\r\n        this.num_steps = magnitude / splat_density + 1;\r\n        this.step_size = [Math.floor(dist[0] / this.num_steps), Math.floor(dist[1] / this.num_steps)];\r\n    }\r\n\r\n    next_splat(): { pos: [number, number], vel: [number, number], color: { r: number, g: number, b: number }, size: number } | null {\r\n        // check if we're done\r\n        if (this.cur_step === this.num_steps) return null;\r\n        // else return the next splat place, calculated from the various deltas\r\n        const ret = {\r\n            pos: [\r\n                this.pos[0] + this.step_size[0] * this.cur_step,\r\n                this.pos[1] + this.step_size[1] * this.cur_step\r\n            ],\r\n            vel: this.speed,\r\n            color: this.color,\r\n            size: this.size,\r\n        };\r\n        this.cur_step++;\r\n        return ret as any;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport styledTS from \"styled-components-ts\";\r\nimport FluidRender from \"./Fluid/FluidRender\";\r\nimport HSVTools from \"./Fluid/HSVTools\";\r\nimport useInsideViewport from \"./useInsideViewport\";\r\nimport SplatVector from \"./Fluid/FluidDraw\";\r\nconst DitherImage = require(\"./img/LDR_RGB1_0.png\");\r\n\r\n/**\r\n * Port of stable fluid simulation using WebGL\r\n * From this project: https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\r\n */\r\n\r\n/** Container to center the canvas and make sure it stays square */\r\nconst PerfectCenter = styledTS(styled.div)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst FluidGL: React.FunctionComponent<{ className?: string, canvaswidth: number, canvasheight: number }> = ({ className = \"\", canvaswidth = 600, canvasheight = 600}) => {\r\n    const canvas_ref = React.useRef<HTMLCanvasElement | null>(null);\r\n    const fluid_ref = React.useRef<FluidRender | null>(null);\r\n    const animation_ref = React.useRef<number>(0);\r\n    const frame_count = React.useRef<number>(50);\r\n    const last_angle = React.useRef<number | null>(null);\r\n    const last_hue = React.useRef<number | null>(null);\r\n\r\n    const animationCallback = React.useCallback(() => {\r\n        if (fluid_ref.current && canvas_ref.current) {\r\n            fluid_ref.current.update(0.008);\r\n            if (++frame_count.current === 201) {\r\n                frame_count.current = 0;\r\n            }\r\n            const SIZE = 0.5;\r\n            const MAGNITUDE = 300;\r\n            const APPROACH_RADIUS = 250;\r\n            const ANGLE_TOL = 45;\r\n            const COLOR_TOL = 0.25;\r\n            const X_MID = Math.round(canvas_ref.current.width / 2);\r\n            const Y_MID = Math.round(canvas_ref.current.height / 2);\r\n           if (frame_count.current !== 0 && frame_count.current % 50 === 0) {\r\n                let next_angle: number;\r\n                // generate a new splat vector, angle, but make sure it's not too close to the last splat vector angle\r\n                do {\r\n                    next_angle = Math.random() * 360;\r\n                } while (last_angle.current !== null && Math.abs(next_angle - last_angle.current) < ANGLE_TOL);\r\n                // do the same for a hue color\r\n                let next_hue: number;\r\n                do {\r\n                    next_hue = Math.random();\r\n                } while (last_hue.current !== null && Math.abs(next_hue - last_hue.current) < COLOR_TOL);\r\n                // reset the last varibles\r\n                last_angle.current = next_angle;\r\n                last_hue.current = next_hue;\r\n                // draw the splat vector!\r\n                const rad = next_angle * (Math.PI / 180.0);\r\n                fluid_ref.current.addVector(new SplatVector(\r\n                    next_angle + 180.0,\r\n                    MAGNITUDE,\r\n                    [Math.cos(rad) * APPROACH_RADIUS + X_MID, Math.sin(rad) * APPROACH_RADIUS + Y_MID],\r\n                    HSVTools.HSVtoRGB({ h: next_hue, s: 1.0, v: 1.0 }), SIZE));\r\n           }\r\n\r\n            animation_ref.current = requestAnimationFrame(animationCallback);\r\n        }\r\n    }, [canvas_ref, fluid_ref, animation_ref, frame_count, last_angle, last_hue]);\r\n\r\n    React.useEffect(() => {\r\n        if (canvas_ref.current) {\r\n            // get a config object for the fluid renderer\r\n            const config = FluidRender.getDefaultConfig();\r\n            config.BLOOM = false;\r\n            config.SHADING = false;\r\n            config.DENSITY_DISSIPATION = 0.99;\r\n            config.SIM_RESOLUTION = 512;\r\n            config.DYE_RESOLUTION = 1024;\r\n            // set some options\r\n            // TODO\r\n            // setup the fluid renderer\r\n            fluid_ref.current = new FluidRender(canvas_ref.current, config, DitherImage);\r\n            console.log(\"Reconstuct!\");\r\n            // start it!\r\n            animationCallback();\r\n            // let react know we gotta clean up the animation\r\n            return () => {\r\n                cancelAnimationFrame(animation_ref.current);\r\n                fluid_ref.current = null;\r\n            };\r\n        }\r\n    }, [canvas_ref, fluid_ref, animationCallback]);\r\n\r\n    useInsideViewport(canvas_ref, () => {\r\n        if (fluid_ref.current) {\r\n            fluid_ref.current.setPause(false);\r\n            console.log(\"unpause\");\r\n            return () => fluid_ref.current && fluid_ref.current.setPause(true);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <PerfectCenter className={className || undefined}>\r\n            <canvas ref={canvas_ref} width={canvaswidth} height={canvasheight}></canvas>\r\n        </PerfectCenter>\r\n    );\r\n};\r\n\r\nexport default FluidGL;","import * as React from \"react\";\nimport styled, { ThemeProvider, css, createGlobalStyle } from \"styled-components\";\nimport styledTS from \"styled-components-ts\";\nimport FluidFull from \"./FluidGL\";\nimport useEventListener from \"@use-it/event-listener\";\nconst reactLogo = require(\"./img/react_logo.svg\");\nconst stockPhoto = require(\"./img/image.PNG\");\nconst protoMask = require(\"./img/proto.png\");\n\n\n/**\n * My personal website!\n * This file will handle top-level structure and styles, allowing each sub-component to fill\n * its own container.\n */\n\n/** define a bunch of color constants that I can tweak later */\nconst main_theme = {\n    color: {\n        // light_background: \"#ECECEC\",\n        // dark_background: \"#AEAEAE\",\n        // logo_background: \"#C4C4C4\",\n        light_background: \"#385170\",\n        dark_background: \"#142d4c\",\n        logo_background: \"#9fd3c7\",\n        logo_text: \"#919191\",\n    },\n    font: {\n        size: {\n            xlarge: \"19vh\",\n            xlarge_num: 175,\n            large: \"5.6vh\",\n            large_num: 56,\n            medium: \"4.4vh\",\n            small: \"3vh\",\n        },\n        type: {\n            header_footer: \"'Open Sans', sans-serif\",\n            content: \"'Roboto Slab', serif\"\n        },\n        color: {\n            header_footer: \"white\",\n            content: \"#EFEFEF\",\n        }\n    },\n    logo: {\n        size: {\n            small: \"10vh\",\n            medium: \"12.5vh\",\n            large: \"27.5vh\",\n        },\n        url: {\n            main: reactLogo,\n            cloud: reactLogo,\n            embedded: reactLogo,\n            web: reactLogo,\n            social: reactLogo,\n            stock: stockPhoto\n        }\n    },\n    screen: {\n        content_width: \"1440px\",\n        side_pad: \"50px\",\n        top_bot_pad: \"15px\",\n        header_footer: \"12vh\",\n    }\n};\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n}\n`;\n\nconst ContentContainer = styledTS<{ height: string, color: string, theme: typeof main_theme }>(styled.div)`\n    display: grid;\n    grid-template:\n        [top_edge] \". . .\" ${ props => props.theme.screen.top_bot_pad }\n        [top_content] \". content .\" auto\n        [bot_content] \". . .\" ${ props => props.theme.screen.top_bot_pad } [bot_edge]\n        / [left_edge] minmax(${ props => props.theme.screen.side_pad }, 1fr)\n        [left_content] minmax(auto, ${ props => props.theme.screen.content_width })\n        [right_content] minmax(${ props => props.theme.screen.side_pad }, 1fr) [right_edge];\n\n    width: 100%;\n    background-color: ${ props => props.color ? props.theme.color[props.color] : props.theme.color.light_background };\n\n    & > .content {\n        grid-area: content;\n        height: ${ props => props.height };\n    }\n\n    & > .full {\n        grid-row: top_edge / bot_edge;\n        grid-column: left_edge / right_edge;\n    }\n`;\n\nconst PerfectCenter = styledTS<{ theme: typeof main_theme }>(styled.div)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst MainText = styledTS<{ theme: typeof main_theme }>(styled.div)`\n    font-family: ${ props => props.theme.font.type.content };\n    font-weight: bold;\n    font-size: ${ props => props.theme.font.size.xlarge };\n`;\n\nconst ResumeText = styledTS<{ theme: typeof main_theme }>(styled.div)`\n    font-family: ${ props => props.theme.font.type.content };\n    font-weight: 100;\n    font-size: ${ props => props.theme.font.size.large };\n    color: ${ props => props.theme.font.color.content };\n    line-height: 7.6vh;\n    text-align: left;\n    max-width: 22em;\n`;\n\nconst BodyElem = styledTS<{ theme: typeof main_theme, x?: number, y?: number, spanx?: number, spany?: number }>(styled.div)`\n    ${ props => props.x ? css`grid-row: contentY ${ props => props.y } / span ${ props => props.spany ? props.spany : 1 };` : css`` }\n    ${ props => props.y ? css`grid-column: contentX ${ props => props.x } / span ${ props => props.spanx ? props.spanx : 1 };` : css``}\n`;\n\nconst LogoElement = styledTS<{ imgname: string, size: string, theme: typeof main_theme }>(styled(BodyElem))`\n    max-width: ${ props => props.theme.logo.size[props.size] };\n    height: ${ props => props.theme.logo.size[props.size] };\n    // background-image: url(${ props => props.theme.logo.url[props.imgname] });\n    background-color: ${ props => props.theme.color.logo_background };\n    border-radius: 50%;\n    background-position: center;\n    background-size: contain;\n    background-repeat: no-repeat;\n    align-self: center;\n`;\n\nconst TextElement = styledTS<{ size: string, type: string, align?: string, text_align?: string, theme: typeof main_theme }>(styled(BodyElem))`\n    font-family: ${ props => props.theme.font.type[props.type] };\n    font-size: ${ props => props.theme.font.size[props.size] };\n    color: ${ props => props.theme.font.color[props.type] };\n    text-align: ${ props => props.text_align ? props.text_align : \"center\" };\n    align-self: ${ props => props.align ? props.align : \"unset\" };\n    white-space: nowrap;\n`;\n\nconst HeaderFooterGrid = styledTS<{ theme: typeof main_theme }>(styled(BodyElem))`\n    display: grid;\n    height: ${ props => props.theme.screen.header_footer };\n    grid-template-rows: [contentY] 1fr [contentY] max-content [contentY] 1fr [contentY];\n    grid-template-columns: [contentX] ${ props => props.theme.logo.size.small } [contentX]\n        repeat(3, min-content [contentX]);\n    grid-column-gap: 50px;\n    align-items: center;\n`;\n\nconst BodyGrid = styledTS<{ theme: typeof main_theme, col_count: number, col_gap: number, col_max: string, col_min: string }>(styled(BodyElem))`\n    display: grid;\n    grid-template-rows: [contentY] repeat(7, 1fr [contentY]) 1fr [contentY];\n    grid-template-columns:\n        [contentX] 1fr [contentX]\n        minmax(0, ${ props => props.col_gap / 2 }px)\n        ${props => props.col_count > 1 && css`\n            repeat(${ props => props.col_count - 1 },\n            [contentX] minmax(${ props => props.col_min }, ${ props => props.col_max })\n            [contentX] minmax(0, ${ props => props.col_gap }px))\n        `}\n        [contentX] minmax(${ props => props.col_min }, ${ props => props.col_max })\n        [contentX] minmax(0, ${ props => props.col_gap / 2 }px)\n        [contentX] 1fr [contentX];\n`;\n\nconst MaskImage = styledTS<{ theme: typeof main_theme, image: string }>(styled.div)`\n    background-image: url(${ props => props.image});\n    background-size: cover;\n    background-position: center;\n    z-index: 99;\n`;\n\nconst MainPage: React.FunctionComponent = () => {\n    // TODO: Set to however the size of the image is being calculated\n    const [dimension, setDimension] = React.useState<number>(Math.min(window.innerWidth, window.innerHeight * 0.8));\n    // check for window resize to update our canvas\n    useEventListener(\"resize\", () => {\n        setDimension(Math.min(window.innerWidth, window.innerHeight * 0.8));\n    });\n\n    return (\n        <ThemeProvider theme={main_theme}>\n            <div>\n                <GlobalStyle />\n                <ContentContainer height=\"80vh\" color=\"light_background\">\n                    <FluidFull className=\"full\" canvaswidth={dimension} canvasheight={dimension} ></FluidFull>\n                    <MaskImage className=\"full\" image={protoMask}></MaskImage>\n                    <PerfectCenter className=\"content\">\n                        <MainText>Prototypical {\"{\"}P{\"}\"}ro</MainText>\n                    </PerfectCenter>\n                    <div className=\"content\" style={{ zIndex: 100 }}>\n                        <HeaderFooterGrid>\n                            {/*<LogoElement x={1} y={1} spany={3} imgname=\"main\" size=\"small\"></LogoElement>*/}\n                            <TextElement x={2} y={2} type=\"header_footer\" size=\"small\">RESUME</TextElement>\n                            <TextElement x={3} y={2} type=\"header_footer\" size=\"small\">GITHUB</TextElement>\n                            <TextElement x={4} y={2} type=\"header_footer\" size=\"small\">CONTACT</TextElement>\n                        </HeaderFooterGrid>\n                    </div>\n                </ContentContainer>\n                <ContentContainer height=\"55vh\" color=\"dark_background\">\n                    <BodyGrid className=\"content\" col_count={3} col_gap={150} col_min={main_theme.logo.size.medium} col_max={main_theme.logo.size.large}>\n                        <TextElement x={3} y={1} spanx={5} spany={2} type=\"content\" size=\"medium\">My name is Noah Koontz <br></br> and I build stuff</TextElement>\n                        <LogoElement x={3} y={2} spany={6} imgname=\"cloud\" size=\"large\"></LogoElement>\n                        <TextElement x={3} y={7} type=\"content\" size=\"medium\" align=\"end\">Cloud</TextElement>\n                        <LogoElement x={5} y={2} spany={6} imgname=\"embedded\" size=\"large\"></LogoElement>\n                        <TextElement x={5} y={7} type=\"content\" size=\"medium\" align=\"end\">Embedded</TextElement>\n                        <LogoElement x={7} y={2} spany={6} imgname=\"web\" size=\"large\"></LogoElement>\n                        <TextElement x={7} y={7} type=\"content\" size=\"medium\" align=\"end\">Web</TextElement>\n                    </BodyGrid>\n                </ContentContainer>\n                <ContentContainer height=\"65vh\" color=\"light_background\">\n                    <div className=\"full\" style={ { backgroundImage: `url(${main_theme.logo.url.stock})`, backgroundPosition: \"center\", backgroundSize: \"cover\" } }></div>\n                    <BodyGrid className=\"content\"\n                        col_count={2}\n                        col_gap={110}\n                        col_min={(main_theme.font.size.large_num * 4).toString() + \"px\"}\n                        col_max={(main_theme.font.size.xlarge_num * 4).toString() + \"px\"}>\n\n                        <TextElement x={3} y={3} spany={3} type=\"content\" align=\"center\" size=\"xlarge\">1212</TextElement>\n                        <TextElement x={3} y={6} type=\"content\" align=\"center\" size=\"medium\">Git Commits</TextElement>\n                        <TextElement x={5} y={3} spany={3} type=\"content\" align=\"center\" size=\"xlarge\">12123</TextElement>\n                        <TextElement x={5} y={6} type=\"content\" align=\"center\" size=\"medium\">Lines of Code</TextElement>\n                    </BodyGrid>\n                </ContentContainer>\n                <ContentContainer height=\"55vh\" color=\"dark_background\">\n                    <PerfectCenter className=\"content\">\n                        <ResumeText>I am a <b>maker</b> who enjoys the creative application of technology. I am a <b>hard worker</b> with an ability to turn ideas into reality. <b>Resourceful</b> and <b>motivated</b>, I have a track record of rapidly applying new concepts.</ResumeText>\n                    </PerfectCenter>\n                </ContentContainer>\n                <ContentContainer height=\"65vh\" color=\"light_background\">\n                <BodyGrid className=\"content\" col_count={1} col_gap={0} col_min=\"110px\" col_max=\"500px\" style={{ backgroundImage: `url(${main_theme.logo.url.stock})`, backgroundPosition: \"center\", backgroundSize: \"cover\" }}>\n                    <BodyGrid style={{ backgroundColor: main_theme.color.dark_background }} x={3} y={3} spany={3}\n                        col_count={4} col_gap={20} col_min={main_theme.logo.size.small} col_max={main_theme.logo.size.small}>\n\n                        <TextElement x={3} y={2} spanx={7} spany={2} type=\"content\" align=\"center\" size=\"small\">Get In Touch</TextElement>\n                        <LogoElement x={3} y={4} spany={4} imgname=\"web\" size=\"small\"></LogoElement>\n                        <LogoElement x={5} y={4} spany={4} imgname=\"web\" size=\"small\"></LogoElement>\n                        <LogoElement x={7} y={4} spany={4} imgname=\"web\" size=\"small\"></LogoElement>\n                        <LogoElement x={9} y={4} spany={4} imgname=\"web\" size=\"small\"></LogoElement>\n                    </BodyGrid>\n                </BodyGrid>\n                </ContentContainer>\n                <ContentContainer height={main_theme.screen.header_footer} color=\"dark_background\">\n                    <div className=\"content\">\n                        <HeaderFooterGrid>\n                            <LogoElement x={1} y={1} spany={3} imgname=\"main\" size=\"small\"></LogoElement>\n                            <TextElement x={2} y={2} type=\"header_footer\" size=\"small\">©2019 Noah Koontz</TextElement>\n                        </HeaderFooterGrid>\n                    </div>\n                </ContentContainer>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default MainPage;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport MainPage from \"./MainPage\";\n\nReactDOM.render(<MainPage />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}